{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/app-install-prompt/app-install-prompt.component.ts","./src/app/components/app-install-prompt/app-install-prompt.component.html","./src/app/components/categoty/category-dialog/category-dialog.component.ts","./src/app/components/categoty/category-dialog/category-dialog.component.html","./src/app/components/categoty/category-list/category-list.component.ts","./src/app/components/categoty/category-list/category-list.component.html","./src/app/components/categoty/category.service.ts","./src/app/components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/components/confirmation-dialog/confirmation-dialog.component.html","./src/app/components/confirmation-dialog/confirmation-service.service.ts","./src/app/components/data/data.component.ts","./src/app/components/data/data.component.html","./src/app/components/fish/fish-dialog/fish-dialog.component.ts","./src/app/components/fish/fish-dialog/fish-dialog.component.html","./src/app/components/fish/fish-list/fish-list.component.ts","./src/app/components/fish/fish-list/fish-list.component.html","./src/app/components/fish/fish.service.ts","./src/app/components/harvest-type/harvest-type-dialog/harvest-type-dialog.component.ts","./src/app/components/harvest-type/harvest-type-dialog/harvest-type-dialog.component.html","./src/app/components/harvest-type/harvest-type-list/harvest-type-list.component.ts","./src/app/components/harvest-type/harvest-type-list/harvest-type-list.component.html","./src/app/components/harvest-type/harvest-type.service.ts","./src/app/components/help/help.component.ts","./src/app/components/help/help.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/loading-indicator/loading-indicator.component.ts","./src/app/components/loading-indicator/loading-indicator.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/origin/origin-dialog/origin-dialog.component.ts","./src/app/components/origin/origin-dialog/origin-dialog.component.html","./src/app/components/origin/origin-list/origin-list.component.ts","./src/app/components/origin/origin-list/origin-list.component.html","./src/app/components/origin/origin.service.ts","./src/app/components/password-request/password-request.component.ts","./src/app/components/password-request/password-request.component.html","./src/app/components/password-reset/password-reset.component.ts","./src/app/components/password-reset/password-reset.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/purchase-product/products.component.ts","./src/app/components/purchase-product/products.component.html","./src/app/components/purchase-product/purchase-product-dialog/purchase-product-dialog.component.ts","./src/app/components/purchase-product/purchase-product-dialog/purchase-product-dialog.component.html","./src/app/components/purchase-product/purchase-product-list/purchase-product-list.component.ts","./src/app/components/purchase-product/purchase-product-list/purchase-product-list.component.html","./src/app/components/purchase-product/purchase-product-service.ts","./src/app/components/purchase-product/purchase-product-view/purchase-product-view.component.ts","./src/app/components/purchase-product/purchase-product-view/purchase-product-view.component.html","./src/app/components/sidebar-layout/sidebar-layout.component.ts","./src/app/components/sidebar-layout/sidebar-layout.component.html","./src/app/components/unit-type/unit-type-dialog/unit-type-dialog.component.ts","./src/app/components/unit-type/unit-type-dialog/unit-type-dialog.component.html","./src/app/components/unit-type/unit-type-list/unit-type-list.component.ts","./src/app/components/unit-type/unit-type-list/unit-type-list.component.html","./src/app/components/unit-type/unit-type.service.ts","./src/app/components/user/user-dialog/user-dialog-component.ts","./src/app/components/user/user-dialog/user-dialog-component.html","./src/app/components/user/user-list/user-list-component.ts","./src/app/components/user/user-list/user-list-component.html","./src/app/components/user/user-view-dialog/user-view-dialog.component.ts","./src/app/components/user/user-view-dialog/user-view-dialog-component.html","./src/app/components/user/user.service.ts","./src/app/components/vendor/vendor-dialog/vendor-dialog.component.ts","./src/app/components/vendor/vendor-dialog/vendor-dialog.component.html","./src/app/components/vendor/vendor-list/vendor-list.component.ts","./src/app/components/vendor/vendor-list/vendor-list.component.html","./src/app/components/vendor/vendor-view-dialog/vendor-view-dialog.component.ts","./src/app/components/vendor/vendor-view-dialog/vendor-view-dialog.component.html","./src/app/components/vendor/vendor.service.ts","./src/app/guards/auth.guard.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/loading.service.ts","./src/app/services/products.service.ts","./src/app/services/pwa.service.ts","./src/app/services/search-table.service.ts","./src/app/services/snackbar.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { LogoutComponent } from \"./components/logout/logout.component\";\nimport { ProductsComponent } from \"./components/purchase-product/products.component\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { PasswordRequestComponent } from \"./components/password-request/password-request.component\";\nimport { PasswordResetComponent } from \"./components/password-reset/password-reset.component\";\nimport { SidebarLayoutComponent } from \"./components/sidebar-layout/sidebar-layout.component\";\nimport { FishListComponent } from \"./components/fish/fish-list/fish-list.component\";\nimport { CategoryListComponent } from \"./components/categoty/category-list/category-list.component\";\nimport { UserListComponent } from \"./components/user/user-list/user-list-component\";\nimport { HelpComponent } from \"./components/help/help.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\";\nimport { DataComponent } from \"./components/data/data.component\";\nimport { VendorListComponent } from \"./components/vendor/vendor-list/vendor-list.component\";\nimport { HarvestTypeListComponent } from \"./components/harvest-type/harvest-type-list/harvest-type-list.component\";\nimport { UnitTypeListComponent } from \"./components/unit-type/unit-type-list/unit-type-list.component\";\nimport { PurchaseProductListComponent } from \"./components/purchase-product/purchase-product-list/purchase-product-list.component\";\nimport { OriginListComponent } from \"./components/origin/origin-list/origin-list.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SidebarLayoutComponent,\n    children: [\n      {\n        path: \"home\",\n        component: HomeComponent,\n        title: \"Home\",\n        canActivate: [AuthGuard],\n      },\n      { path: \"login\", component: LoginComponent, title: \"Login\" },\n      { path: \"logout\", component: LogoutComponent, title: \"Logout\" },\n      {\n        path: \"password-request\",\n        component: PasswordRequestComponent,\n        title: \"Password Request\",\n      },\n      {\n        path: \"password-reset/:token\",\n        component: PasswordResetComponent,\n        title: \"Password Reset\",\n      },\n      { path: \"help\", component: HelpComponent, title: \"Help\" },\n      {\n        path: \"products\",\n        component: ProductsComponent,\n        title: \"Products\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"fish\",\n        component: FishListComponent,\n        title: \"Fish example\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"categories\",\n        component: CategoryListComponent,\n        title: \"Categories\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"origins\",\n        component: OriginListComponent,\n        title: \"Origins\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"unit-types\",\n        component: UnitTypeListComponent,\n        title: \"Unit Types\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"users\",\n        component: UserListComponent,\n        title: \"Users\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"vendors\",\n        component: VendorListComponent,\n        title: \"Vendors\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"profile\",\n        component: ProfileComponent,\n        title: \"Profile\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"data\",\n        component: DataComponent,\n        title: \"Data\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"purchase-products\",\n        component: PurchaseProductListComponent,\n        title: \"Purchase Product\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"harvest-types\",\n        component: HarvestTypeListComponent,\n        title: \"Harvest Types\",\n        canActivate: [AuthGuard],\n      },\n\n      { path: \"**\", redirectTo: \"home\" }, // Wildcard route to handle unmatched paths, redirect to log  in\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  isDevMode,\n  OnInit,\n} from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { environment } from \"src/environments/environment\";\nimport { Meta, Title } from \"@angular/platform-browser\";\nimport { SwUpdate } from \"@angular/service-worker\";\nimport { LoadingIndicatorComponent } from \"./components/loading-indicator/loading-indicator.component\";\n\n@Component({\n  standalone: true,\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    RouterOutlet,\n    LoadingIndicatorComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n\n  //isOrderForm: boolean = false;\n\n  constructor(\n    private title: Title,\n    private meta: Meta,\n    private swUpdate: SwUpdate,\n  ) {\n    // Check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes(\"prod\")) {\n      this.showWarning = true;\n      alert(\"WARNING: Angular is in Dev mode but connected to production !!!\");\n    }\n  }\n\n  ngOnInit(): void {\n    this.title.setTitle(\"Pacific Fresh Fish Company App\");\n    this.meta.addTags([\n      {\n        name: \"description\",\n        content:\n          \"Pacific Fresh Fish Company application created by lb-advisors\",\n      },\n      { name: \"keywords\", content: \"PFF, lb-advisors, Allintel\" },\n      { name: \"robots\", content: \"index, follow\" },\n    ]);\n\n    this.checkForUpdate();\n  }\n\n  private checkForUpdate() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate\n        .checkForUpdate()\n        .then((isUpdateAvailable) => {\n          if (isUpdateAvailable) {\n            const confirmUpdate = confirm(\n              \"A new version is available. Do you want to load it?\",\n            );\n            if (confirmUpdate) {\n              this.swUpdate.activateUpdate().then(() => {\n                window.location.reload();\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error while checking for updates:\", error);\n        });\n    }\n  }\n}\n","<main>\n  <app-loading-indicator></app-loading-indicator>\n  <router-outlet></router-outlet>\n</main>\n\n<!-- Footer\n<footer class=\"mat-drawer-container\">\n  <div class=\"container\">\n    <div class=\"text-align-center\">\n      © 2024 - Pacific Fresh Fish Company\n      <div *ngIf=\"isDevMode\" class=\"dev-mode\">UAT ENVIRONMENT</div>\n      <div *ngIf=\"isDevMode\" class=\"dev-mode\">{{ apiUrl }}</div>\n    </div>\n  </div>\n</footer>\n-->\n","import { Platform } from \"@angular/cdk/platform\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { PwaService } from \"src/app/services/pwa.service\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\nimport { MatButton } from \"@angular/material/button\";\n\n@Component({\n  standalone: true,\n  selector: \"app-install-prompt\",\n  imports: [CommonModule, MatButton],\n  templateUrl: \"./app-install-prompt.component.html\",\n  styleUrls: [\"./app-install-prompt.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppInstallPromptComponent implements OnInit, OnDestroy {\n  beforeInstallPromptHandler?: (event: BeforeInstallPromptEvent) => void;\n  deferredPrompt: BeforeInstallPromptEvent | null = null;\n  isPwa$: Observable<boolean>;\n  isIosButNotPwa: boolean;\n  isPwa: boolean;\n  plat: boolean;\n\n  constructor(\n    private pwaService: PwaService,\n    private snackbarService: SnackbarService,\n    public platform: Platform,\n  ) {\n    this.isPwa$ = this.pwaService.isPwa$;\n    this.isPwa = this.isRunningAsPWA();\n    this.isIosButNotPwa = this.isIOS() && !this.isRunningAsPWA();\n    this.plat = this.isIOS();\n  }\n\n  ngOnInit() {\n    this.beforeInstallPromptHandler = (event: BeforeInstallPromptEvent) => {\n      // Prevent the mini-infobar from appearing\n      event.preventDefault();\n      this.deferredPrompt = event;\n      this.pwaService.updateValue(true);\n    };\n\n    window.addEventListener(\n      \"beforeinstallprompt\",\n      this.beforeInstallPromptHandler as EventListener,\n    );\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener(\n      \"beforeinstallprompt\",\n      this.beforeInstallPromptHandler as EventListener,\n    );\n    this.pwaService.updateValue(false);\n  }\n\n  promptInstall() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt(); // Show the install prompt\n      this.deferredPrompt.userChoice.then(() => {\n        this.deferredPrompt = null;\n        this.pwaService.updateValue(false);\n      });\n    }\n  }\n\n  showIosInstructions() {\n    this.snackbarService.showInfo(\n      \"To install this web app on your device, tap the Menu button and then 'Add to Home Screen' button\",\n      20000,\n    );\n  }\n\n  private isIOS(): boolean {\n    const userAgent = window.navigator.userAgent.toLowerCase();\n    return /iphone|ipad|ipod|mac/.test(userAgent) || this.platform.IOS;\n  }\n\n  private isRunningAsPWA(): boolean {\n    const isStandalone = window.matchMedia(\n      \"(display-mode: standalone)\",\n    ).matches;\n    const isIOSStandalone = (navigator as any).standalone === true;\n    const isFullscreen = window.innerHeight === screen.height;\n\n    return isStandalone || isIOSStandalone || isFullscreen;\n  }\n}\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  userChoice: Promise<{ outcome: \"accepted\" | \"dismissed\"; platform: string }>;\n\n  prompt(): Promise<void>;\n}\n","@if ( (isPwa$ | async) === true) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"promptInstall()\">\n    Install as an Application\n  </button>\n</div>\n} @else if (isIosButNotPwa) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"showIosInstructions()\">\n    Install as an Application\n  </button>\n</div>\n}","// src/app/components/category-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { CategoryGetDto } from \"../../../models/category.model\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  category?: CategoryGetDto;\n}\n\n@Component({\n  selector: \"app-category-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: \"./category-dialog.component.html\",\n  styleUrls: [\"./category-dialog.component.css\"],\n})\nexport class CategoryDialogComponent implements OnInit {\n  categoryForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<CategoryDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New Category\" : \"Edit Category\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.categoryForm.valid) {\n      this.dialogRef.close({\n        id: this.data.category?.id,\n        ...this.categoryForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.categoryForm = this.fb.group({\n      categoryName: [\n        this.data.category?.categoryName || \"\",\n        [Validators.required],\n      ],\n    });\n  }\n}\n","<!-- src/app/components/category-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"categoryForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"categoryName\" matInput placeholder=\"Enter category name\">\n      <mat-error *ngIf=\"categoryForm.get('categoryName')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"categoryForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/category-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  CategoryGetDto,\n  CategoryPatchDto,\n  CategoryPostDto,\n} from \"../../../models/category.model\";\nimport { CategoryDialogComponent } from \"../category-dialog/category-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { CategoryService } from \"../category.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\n\n@Component({\n  selector: \"app-category-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./category-list.component.html\",\n  styleUrls: [\"./category-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<CategoryGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"name\", \"actions\"];\n  selection = new SelectionModel<CategoryGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"category\";\n  private destroy$ = new Subject<void>();\n\n  private categoryService = inject(CategoryService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the categoryes signal changes\n    effect(() => {\n      this.updateTable(this.categoryService.categories());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadCategoryes() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: CategoryGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof CategoryGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (\n      category: CategoryGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        category.id.toString().includes(searchStr) ||\n        category.categoryName.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(CategoryDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: CategoryPostDto) => {\n        if (result) {\n          this.categoryService.createCategory(result);\n          this.snackBarService.showSuccess(\"Category added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(category: CategoryGetDto): void {\n    const dialogRef = this.dialog.open(CategoryDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", category },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: CategoryPatchDto = {\n            categoryName: result.categoryName,\n          };\n\n          this.categoryService.updateCategory(category.id, update);\n          this.snackBarService.showSuccess(\"Category updated successfully\");\n        }\n      });\n  }\n\n  deleteCategory(category: CategoryGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`category \"${category.categoryName}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.categoryService.deleteCategory(category.id);\n          this.snackBarService.showSuccess(\"Category deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedCategories(): void {\n    const selectedIds = this.selection.selected.map((category) => category.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No category selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"category\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.categoryService.deleteManyCategory(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected category deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n\n  // Function to update table data\n  private updateTable(categories: CategoryGetDto[]): void {\n    this.dataSource.data = categories;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/Category-list/unit-type-list.component.html -->\n\n<div>\n  <mat-toolbar color=\"primary\">\n    <span>Categories</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new Category\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedCategories()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"categoryName\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let category\" mat-cell> {{ category.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header=\"categoryName\"> Name</th>\n        <td *matCellDef=\"let category\" mat-cell> {{ category.categoryName }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let category\" mat-cell>\n          <button (click)=\"openEditDialog(category)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteCategory(category)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns ; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No Category data available</p>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  CategoryGetDto,\n  CategoryPatchDto,\n  CategoryPostDto,\n} from \"../../models/category.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CategoryService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/categories`;\n\n  // State signals\n  private categoryList = signal<CategoryGetDto[]>([]);\n\n  // Exposed computed signals\n  public categories = computed(() => this.categoryList());\n\n  constructor() {\n    // Load category data immediately when service is injected\n    this.loadAllCategories();\n  }\n\n  /**\n   * Load all category from the API and update the signal\n   */\n  loadAllCategories(): void {\n    this.http.get<CategoryGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.categoryList.set(data),\n    });\n  }\n\n  /**\n   * Get a single category by ID\n   */\n  getCategoryById(id: number): CategoryGetDto | undefined {\n    return this.categoryList().find((category) => category.id === id);\n  }\n\n  /**\n   * Create a new category\n   */\n  createCategory(category: CategoryPostDto): void {\n    this.http.post<CategoryGetDto>(this.baseUrl, category).subscribe({\n      next: (newCategory) => {\n        // Update the signal with the new category\n        this.categoryList.update((list) => [...list, newCategory]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing category\n   */\n  updateCategory(id: number, categoryUpdate: CategoryPatchDto): void {\n    this.http\n      .patch<CategoryGetDto>(`${this.baseUrl}/${id}`, categoryUpdate)\n      .subscribe({\n        next: (updatedCategory) => {\n          // Update the specific category in the list\n          this.categoryList.update((list) =>\n            list.map((category) =>\n              category.id === id ? updatedCategory : category,\n            ),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a category by ID\n   */\n  deleteCategory(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted category from the list\n        this.categoryList.update((list) =>\n          list.filter((category) => category.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple category by IDs\n   */\n  deleteManyCategory(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted category from the list\n          this.categoryList.update((list) =>\n            list.filter((category) => !ids.includes(category.id)),\n          );\n        },\n      });\n  }\n}\n","// src/app/components/confirmation-dialog/confirmation-dialog.component.ts\n\nimport { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\n\nexport interface ConfirmationDialogData {\n  title: string;\n  message: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  confirmButtonColor?: \"primary\" | \"accent\" | \"warn\";\n}\n\n@Component({\n  selector: \"app-confirmation-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmationDialogComponent {\n  data: ConfirmationDialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<ConfirmationDialogComponent>);\n\n  constructor() {\n    // Set default values if not provided\n    this.data.confirmButtonText = this.data.confirmButtonText || \"Confirm\";\n    this.data.cancelButtonText = this.data.cancelButtonText || \"Cancel\";\n    this.data.confirmButtonColor = this.data.confirmButtonColor || \"warn\";\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n","<!-- src/app/components/confirmation-dialog/confirmation-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ data.title }}</h2>\n\n<mat-dialog-content>\n  <p [innerHTML]=\"data.message\"></p>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"onCancel()\" mat-button>\n    {{ data.cancelButtonText }}\n  </button>\n  <button\n    (click)=\"onConfirm()\"\n    [color]=\"data.confirmButtonColor\"\n    mat-raised-button>\n    {{ data.confirmButtonText }}\n  </button>\n</mat-dialog-actions>\n","// src/app/services/confirmation.service.ts\n\nimport { inject, Injectable } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { Observable } from \"rxjs\";\nimport {\n  ConfirmationDialogComponent,\n  ConfirmationDialogData,\n} from \"./confirmation-dialog.component\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ConfirmationService {\n  private dialog = inject(MatDialog);\n\n  /**\n   * Opens a confirmation dialog\n   * @param data Configuration data for the dialog\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirm(data: ConfirmationDialogData): Observable<boolean | undefined> {\n    const dialogRef: MatDialogRef<ConfirmationDialogComponent, boolean> =\n      this.dialog.open(ConfirmationDialogComponent, {\n        width: \"400px\",\n        disableClose: true,\n        data,\n      });\n\n    return dialogRef.afterClosed();\n  }\n\n  /**\n   * Convenience method for delete confirmations\n   * @param itemName The name of the item being deleted\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirmDeletion(\n    itemName: string = \"this item\",\n  ): Observable<boolean | undefined> {\n    return this.confirm({\n      title: \"Confirm Deletion\",\n      message: `Are you sure you want to delete ${itemName}? This action cannot be undone.`,\n      confirmButtonText: \"Delete\",\n      confirmButtonColor: \"warn\",\n    });\n  }\n\n  /**\n   * Convenience method for bulk delete confirmations\n   * @param count The number of items being deleted\n   * @param itemType The type of items being deleted (e.g., 'fish', 'records')\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirmBulkDeletion(\n    count: number,\n    itemType: string = \"items\",\n  ): Observable<boolean | undefined> {\n    return this.confirm({\n      title: \"Confirm Bulk Deletion\",\n      message: `Are you sure you want to delete ${count} ${itemType}? This action cannot be undone.`,\n      confirmButtonText: \"Delete All\",\n      confirmButtonColor: \"warn\",\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Router } from \"@angular/router\";\n\n// Interface for our data structure\ninterface DataItem {\n  name: string;\n  description: string;\n  route: string;\n}\n\n@Component({\n  selector: \"app-data\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./data.component.html\",\n  styleUrls: [\"./data.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<DataItem>([]);\n  displayedColumns: string[] = [\"name\", \"description\", \"actions\"];\n  searchQuery = signal<string>(\"\");\n\n  // Hard-coded data array\n  private readonly DATA: DataItem[] = [\n    {\n      name: \"Customers\",\n      description: \"List of customers\",\n      route: \"/customers\",\n    },\n    {\n      name: \"Vendors\",\n      description: \"List of vendors\",\n      route: \"/vendors\",\n    },\n    {\n      name: \"Purchase Products\",\n      description: \"List of purchase products\",\n      route: \"/purchase-products\",\n    },\n    {\n      name: \"Sale products\",\n      description: \"List of sale products\",\n      route: \"/settings\",\n    },\n    {\n      name: \"Category\",\n      description: \"List of categories\",\n      route: \"/categories\",\n    },\n    {\n      name: \"Origin\",\n      description: \"List of origins\",\n      route: \"/origins\",\n    },\n    {\n      name: \"Harvest Type\",\n      description: \"List of harvest types\",\n      route: \"/harvest-types\",\n    },\n  ];\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.dataSource.data = this.DATA;\n    this.configureDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.configureSort();\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: DataItem,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof DataItem];\n      return typeof value === \"string\" ? value.toLowerCase() : value;\n    };\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    this.dataSource.filterPredicate = (data: DataItem, filter: string) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        data.name.toLowerCase().includes(searchStr) ||\n        data.description.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /**\n   * Navigate to the specified route\n   */\n  navigateTo(route: string): void {\n    this.router.navigate([route]);\n  }\n\n  /**\n   * Handle search input changes\n   */\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchQuery.set(value);\n    this.dataSource.filter = value.trim().toLowerCase();\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <span>Data Explorer</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"name\" matSortDirection=\"asc\">\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Name</th>\n        <td *matCellDef=\"let item\" mat-cell>{{ item.name }}</td>\n      </ng-container>\n\n      <!-- Description Column -->\n      <ng-container matColumnDef=\"description\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Description</th>\n        <td *matCellDef=\"let item\" mat-cell>{{ item.description }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell>Actions</th>\n        <td *matCellDef=\"let item\" class=\"action-buttons\" mat-cell>\n          <button (click)=\"navigateTo(item.route)\" color=\"primary\" mat-icon-button matTooltip=\"View\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" class=\"data-row\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No data available</p>\n  </div>\n</div>\n","// src/app/components/fish-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { FishGetDto } from \"../../../models/fish.model\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  fish?: FishGetDto;\n}\n\n@Component({\n  selector: \"app-fish-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: \"./fish-dialog.component.html\",\n  styleUrls: [\"./fish-dialog.component.css\"],\n})\nexport class FishDialogComponent implements OnInit {\n  fishForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<FishDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle = this.data.mode === \"add\" ? \"Add New Fish\" : \"Edit Fish\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.fishForm.valid) {\n      this.dialogRef.close({\n        id: this.data.fish?.id,\n        ...this.fishForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.fishForm = this.fb.group({\n      name: [\n        {\n          value: this.data.fish?.name || \"\",\n          disabled: this.data.mode === \"edit\",\n        },\n        [Validators.required],\n      ],\n      description: [this.data.fish?.description || \"\", [Validators.required]],\n    });\n  }\n}\n","<!-- src/app/components/fish-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"fishForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"name\" matInput placeholder=\"Enter fish name\">\n      <mat-error *ngIf=\"fishForm.get('name')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Description</mat-label>\n      <textarea formControlName=\"description\" matInput placeholder=\"Enter fish description\" rows=\"4\"></textarea>\n      <mat-error *ngIf=\"fishForm.get('description')?.hasError('required')\">\n        Description is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"fishForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/fish-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  FishGetDto,\n  FishPatchDto,\n  FishPostDto,\n} from \"../../../models/fish.model\";\nimport { FishDialogComponent } from \"../fish-dialog/fish-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { FishService } from \"../fish.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\n\n@Component({\n  selector: \"app-fish-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./fish-list.component.html\",\n  styleUrls: [\"./fish-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FishListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<FishGetDto>([]);\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"name\",\n    \"description\",\n    \"actions\",\n  ];\n  selection = new SelectionModel<FishGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"fish\";\n  private destroy$ = new Subject<void>();\n\n  private fishService = inject(FishService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the fishes signal changes\n    effect(() => {\n      this.updateTable(this.fishService.fishes());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadFishes() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: FishGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof FishGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (fish: FishGetDto, filter: string) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        fish.id.toString().includes(searchStr) ||\n        fish.name.toLowerCase().includes(searchStr) ||\n        fish.description.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(FishDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: FishPostDto) => {\n        if (result) {\n          this.fishService.createFish(result);\n          this.snackBarService.showSuccess(\"Fish added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(fish: FishGetDto): void {\n    const dialogRef = this.dialog.open(FishDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", fish },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: FishPatchDto = {\n            description: result.description,\n          };\n\n          this.fishService.updateFish(fish.id, update);\n          this.snackBarService.showSuccess(\"Fish updated successfully\");\n        }\n      });\n  }\n\n  deleteFish(fish: FishGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`fish \"${fish.name}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.fishService.deleteFish(fish.id);\n          this.snackBarService.showSuccess(\"Fish deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedFishes(): void {\n    const selectedIds = this.selection.selected.map((fish) => fish.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No fish selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"fish\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.fishService.deleteManyFish(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected fish deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  // Function to update table data\n  private updateTable(fishes: FishGetDto[]): void {\n    this.dataSource.data = fishes;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/fish-list/unit-type-list.component.html -->\n\n<div class=\"fish-container\">\n  <mat-toolbar color=\"primary\">\n    <span>Fish Management</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new fish\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedFishes()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 table-container\">\n    <table [dataSource]=\"dataSource\" class=\"sticky-table\" mat-table matSort matSortActive=\"name\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef class=\"sticky-header\" mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef arrowPosition=\"before\" class=\"sticky-header\" mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let fish\" mat-cell> {{ fish.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef arrowPosition=\"before\" class=\"sticky-header\" mat-header-cell mat-sort-header> Name</th>\n        <td *matCellDef=\"let fish\" mat-cell> {{ fish.name }}</td>\n      </ng-container>\n\n      <!-- Description Column -->\n      <ng-container matColumnDef=\"description\">\n        <th *matHeaderCellDef arrowPosition=\"before\" class=\"sticky-header\" mat-header-cell mat-sort-header>\n          Description\n        </th>\n        <td *matCellDef=\"let fish\" mat-cell> {{ fish.description }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef class=\"sticky-header\" mat-header-cell> Actions</th>\n        <td *matCellDef=\"let fish\" mat-cell>\n          <button (click)=\"openEditDialog(fish)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteFish(fish)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n\n      <!-- No Results Row -->\n      <tr *ngIf=\"dataSource.filteredData.length === 0\" class=\"mat-row\">\n        <td class=\"mat-cell\" colspan=\"5\">\n          No results matching \"{{ searchQuery() }}\"\n        </td>\n      </tr>\n    </table>\n\n    <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n      <p>No fish data available</p>\n    </div>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { FishGetDto, FishPatchDto, FishPostDto } from \"../../models/fish.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FishService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/fish`;\n\n  // State signals\n  private fishList = signal<FishGetDto[]>([]);\n\n  // Exposed computed signals\n  public fishes = computed(() => this.fishList());\n\n  constructor() {\n    // Load fish data immediately when service is injected\n    this.loadAllFish();\n  }\n\n  /**\n   * Load all fish from the API and update the signal\n   */\n  loadAllFish(): void {\n    this.http.get<FishGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.fishList.set(data),\n    });\n  }\n\n  /**\n   * Get a single fish by ID\n   */\n  getFishById(id: number): FishGetDto | undefined {\n    return this.fishList().find((fish) => fish.id === id);\n  }\n\n  /**\n   * Create a new fish\n   */\n  createFish(fish: FishPostDto): void {\n    this.http.post<FishGetDto>(this.baseUrl, fish).subscribe({\n      next: (newFish) => {\n        // Update the signal with the new fish\n        this.fishList.update((list) => [...list, newFish]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing fish\n   */\n  updateFish(id: number, fishUpdate: FishPatchDto): void {\n    this.http.patch<FishGetDto>(`${this.baseUrl}/${id}`, fishUpdate).subscribe({\n      next: (updatedFish) => {\n        // Update the specific fish in the list\n        this.fishList.update((list) =>\n          list.map((fish) => (fish.id === id ? updatedFish : fish)),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete a fish by ID\n   */\n  deleteFish(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted fish from the list\n        this.fishList.update((list) => list.filter((fish) => fish.id !== id));\n      },\n    });\n  }\n\n  /**\n   * Delete multiple fish by IDs\n   */\n  deleteManyFish(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted fish from the list\n          this.fishList.update((list) =>\n            list.filter((fish) => !ids.includes(fish.id)),\n          );\n        },\n      });\n  }\n}\n","// src/app/components/harvestType-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { HarvestTypeGetDto } from \"../../../models/harvest-type.model\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  harvestType?: HarvestTypeGetDto;\n}\n\n@Component({\n  selector: \"app-harvestType-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: \"./harvest-type-dialog.component.html\",\n  styleUrls: [\"./harvest-type-dialog.component.css\"],\n})\nexport class HarvestTypeDialogComponent implements OnInit {\n  harvestTypeForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<HarvestTypeDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New HarvestType\" : \"Edit HarvestType\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.harvestTypeForm.valid) {\n      this.dialogRef.close({\n        id: this.data.harvestType?.id,\n        ...this.harvestTypeForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.harvestTypeForm = this.fb.group({\n      harvestType: [\n        this.data.harvestType?.harvestType || \"\",\n        [Validators.required],\n      ],\n    });\n  }\n}\n","<!-- src/app/components/harvestType-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"harvestTypeForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"harvestType\" matInput placeholder=\"Enter name\">\n      <mat-error *ngIf=\"harvestTypeForm.get('harvestType')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"harvestTypeForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/harvestType-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport { HarvestTypeDialogComponent } from \"../harvest-type-dialog/harvest-type-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { HarvestTypeService } from \"../harvest-type.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\nimport {\n  HarvestTypeGetDto,\n  HarvestTypePatchDto,\n  HarvestTypePostDto,\n} from \"../../../models/harvest-type.model\";\n\n@Component({\n  selector: \"app-harvestType-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./harvest-type-list.component.html\",\n  styleUrls: [\"./harvest-type-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HarvestTypeListComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<HarvestTypeGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"name\", \"actions\"];\n  selection = new SelectionModel<HarvestTypeGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"harvestType\";\n  private destroy$ = new Subject<void>();\n\n  private harvestTypeService = inject(HarvestTypeService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    effect(() => {\n      this.updateTable(this.harvestTypeService.harvestTypes());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadHarvestTypees() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: HarvestTypeGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof HarvestTypeGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (\n      harvestType: HarvestTypeGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        harvestType.id.toString().includes(searchStr) ||\n        harvestType.harvestType.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(HarvestTypeDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: HarvestTypePostDto) => {\n        if (result) {\n          this.harvestTypeService.createHarvestType(result);\n          this.snackBarService.showSuccess(\"HarvestType added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(harvestType: HarvestTypeGetDto): void {\n    const dialogRef = this.dialog.open(HarvestTypeDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", harvestType },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: HarvestTypePatchDto = {\n            harvestType: result.harvestType,\n          };\n\n          this.harvestTypeService.updateHarvestType(harvestType.id, update);\n          this.snackBarService.showSuccess(\"HarvestType updated successfully\");\n        }\n      });\n  }\n\n  deleteHarvestType(harvestType: HarvestTypeGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`harvestType \"${harvestType.harvestType}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.harvestTypeService.deleteHarvestType(harvestType.id);\n          this.snackBarService.showSuccess(\"HarvestType deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedCategories(): void {\n    const selectedIds = this.selection.selected.map(\n      (harvestType) => harvestType.id,\n    );\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No harvestType selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"harvestType\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.harvestTypeService.deleteManyHarvestType(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected harvestType deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n\n  // Function to update table data\n  private updateTable(categories: HarvestTypeGetDto[]): void {\n    this.dataSource.data = categories;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/HarvestType-list/unit-type-list.component.html -->\n\n<div>\n  <mat-toolbar color=\"primary\">\n    <span>Harvest Types</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new HarvestType\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedCategories()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"harvestType\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let harvestType\" mat-cell> {{ harvestType.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header=\"harvestType\"> Name</th>\n        <td *matCellDef=\"let harvestType\" mat-cell> {{ harvestType.harvestType }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let harvestType\" mat-cell>\n          <button (click)=\"openEditDialog(harvestType)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteHarvestType(harvestType)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns ; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No HarvestType data available</p>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  HarvestTypeGetDto,\n  HarvestTypePatchDto,\n  HarvestTypePostDto,\n} from \"../../models/harvest-type.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HarvestTypeService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/harvest-types`;\n\n  // State signals\n  private harvestTypeList = signal<HarvestTypeGetDto[]>([]);\n\n  // Exposed computed signals\n  public harvestTypes = computed(() => this.harvestTypeList());\n\n  constructor() {\n    // Load harvestType data immediately when service is injected\n    this.loadAllHarvestTypes();\n  }\n\n  /**\n   * Load all harvestType from the API and update the signal\n   */\n  loadAllHarvestTypes(): void {\n    this.http.get<HarvestTypeGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.harvestTypeList.set(data),\n    });\n  }\n\n  /**\n   * Get a single harvestType by ID\n   */\n  getHarvestTypeById(id: number): HarvestTypeGetDto | undefined {\n    return this.harvestTypeList().find((harvestType) => harvestType.id === id);\n  }\n\n  /**\n   * Create a new harvestType\n   */\n  createHarvestType(harvestType: HarvestTypePostDto): void {\n    this.http.post<HarvestTypeGetDto>(this.baseUrl, harvestType).subscribe({\n      next: (newHarvestType) => {\n        // Update the signal with the new harvestType\n        this.harvestTypeList.update((list) => [...list, newHarvestType]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing harvestType\n   */\n  updateHarvestType(id: number, harvestTypeUpdate: HarvestTypePatchDto): void {\n    this.http\n      .patch<HarvestTypeGetDto>(`${this.baseUrl}/${id}`, harvestTypeUpdate)\n      .subscribe({\n        next: (updatedHarvestType) => {\n          // Update the specific harvestType in the list\n          this.harvestTypeList.update((list) =>\n            list.map((harvestType) =>\n              harvestType.id === id ? updatedHarvestType : harvestType,\n            ),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a harvestType by ID\n   */\n  deleteHarvestType(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted harvestType from the list\n        this.harvestTypeList.update((list) =>\n          list.filter((harvestType) => harvestType.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple harvestType by IDs\n   */\n  deleteManyHarvestType(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted harvestType from the list\n          this.harvestTypeList.update((list) =>\n            list.filter((harvestType) => !ids.includes(harvestType.id)),\n          );\n        },\n      });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { MatCard, MatCardContent } from \"@angular/material/card\";\nimport { MatToolbar } from \"@angular/material/toolbar\";\n\n@Component({\n  selector: \"app-help\",\n  standalone: true,\n  imports: [MatCard, MatCardContent, MatToolbar],\n  templateUrl: \"./help.component.html\",\n  styleUrl: \"./help.component.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HelpComponent {}\n","<div>\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>Help</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"main-container mat-elevation-z8\">\n    <mat-card class=\"main-card\">\n      <mat-card-content>\n\n        TBD: some help information\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatCard, MatCardContent } from \"@angular/material/card\";\nimport { MatToolbar } from \"@angular/material/toolbar\";\n\n@Component({\n  standalone: true,\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n  imports: [CommonModule, MatCard, MatCardContent, MatToolbar],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  username!: string | null;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n  ) {}\n\n  ngOnInit(): void {\n    this.username = this.authService.getFullname();\n  }\n\n  navigateTo(page: string): void {\n    void this.router.navigate([`/${page}`]);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n","<div>\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>Home</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"main-container mat-elevation-z8\">\n    <mat-card class=\"main-card\">\n      <mat-card-content>\n\n        Welcome to the new PFFC application.\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","// src/app/components/loading-indicator/loading-indicator.component.ts\n\nimport { Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { LoadingService } from \"../../services/loading.service\";\n\n@Component({\n  selector: \"app-loading-indicator\",\n  standalone: true,\n  imports: [CommonModule, MatProgressSpinnerModule],\n  templateUrl: \"./loading-indicator.component.html\",\n  styleUrls: [\"./loading-indicator.component.css\"],\n})\nexport class LoadingIndicatorComponent {\n  loadingService = inject(LoadingService);\n}\n","<div *ngIf=\"loadingService.loading()\" class=\"loading-overlay\">\n  <div class=\"spinner-container\">\n    <mat-spinner diameter=\"40\"></mat-spinner>\n    <span>Loading...</span>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  isDevMode,\n} from \"@angular/core\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule } from \"@angular/common\";\nimport { catchError, throwError } from \"rxjs\";\nimport { LoginResponse } from \"src/app/models/login-response.model \";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIcon } from \"@angular/material/icon\";\nimport { AppInstallPromptComponent } from \"../app-install-prompt/app-install-prompt.component\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIcon,\n    ReactiveFormsModule,\n    RouterModule,\n    AppInstallPromptComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  hidePassword = true;\n  loading = false;\n  errorMessage: string | null = null;\n\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: [\"\", [Validators.required]],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.errorMessage = null;\n    const { username, password } = this.loginForm.value;\n    this.authService\n      .login(username, password)\n      .pipe(\n        catchError((error) => {\n          this.errorMessage = `Login failed. ${error.status === 401 ? \"Please check your username and password\" : error.error?.message || \"Please check your username and password\"}.`;\n          this.loading = false;\n          this.cdr.markForCheck();\n          return throwError(() => error);\n        }),\n      )\n      .subscribe({\n        next: ({ firstName, lastName, token }: LoginResponse) => {\n          this.authService.saveFullnameAndToken(\n            `${firstName ?? \"\"} ${lastName ?? \"\"}`.trim(),\n            token,\n          );\n          void this.router.navigate([\"/home\"]);\n        },\n      });\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n","<div>\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>Login</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"main-container\">\n    <mat-card class=\"main-card\">\n      <mat-card-content>\n\n        <form (ngSubmit)=\"onLogin()\" [formGroup]=\"loginForm\" class=\"login-form\">\n          <h2 class=\"form-title\">Sign in to your account</h2>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Username</mat-label>\n            <input\n              autocomplete=\"username\"\n              formControlName=\"username\"\n              matInput\n              placeholder=\"Enter your username\"\n              type=\"text\">\n            <mat-icon matPrefix>person</mat-icon>\n            <mat-error *ngIf=\"loginForm.get('username')?.invalid\">\n              Username is required\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Password</mat-label>\n            <input\n              [type]=\"hidePassword ? 'password' : 'text'\"\n              autocomplete=\"current-password\"\n              formControlName=\"password\"\n              matInput\n              placeholder=\"Enter your password\">\n            <mat-icon matPrefix>lock</mat-icon>\n            <button\n              (click)=\"togglePasswordVisibility()\"\n              aria-label=\"Toggle password visibility\"\n              mat-icon-button\n              matSuffix\n              type=\"button\">\n              <mat-icon>{{ hidePassword ? 'visibility' : 'visibility_off' }}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"loginForm.get('password')?.invalid\">\n              Password is required\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"forgot-password\">\n            <a [routerLink]=\"['/password-request']\" class=\"forgot-link\">\n              Forgot password?\n            </a>\n          </div>\n\n          <div class=\"form-actions\">\n            <button\n              [disabled]=\"loading || loginForm.invalid\"\n              class=\"login-button\"\n              color=\"primary\"\n              mat-raised-button\n              type=\"submit\">\n              <span *ngIf=\"!loading\">Login</span>\n            </button>\n          </div>\n\n          <div *ngIf=\"errorMessage\" class=\"error-message\">\n            <mat-icon>error_outline</mat-icon>\n            {{ errorMessage }}\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n<app-install-prompt></app-install-prompt>\n\n<footer class=\"text-align-center\">\n  <div>\n    © 2025- Pacific Fresh Fish Company\n  </div>\n  <div *ngIf=\"isDevMode\">UAT ENVIRONMENT</div>\n  <div *ngIf=\"isDevMode\">{{ apiUrl }}</div>\n</footer>\n\n\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { SnackbarService } from \"../../services/snackbar.service\";\n\n@Component({\n  selector: \"app-logout\",\n  templateUrl: \"./logout.component.html\",\n  styleUrls: [\"./logout.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LogoutComponent {\n  constructor(\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.authService.logout();\n    this.snackbarService.showSuccess(\"You have been logged out\");\n  }\n}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">You have been logged out.</h1>\n\n","// src/app/components/origin-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { OriginGetDto } from \"../../../models/origin.model\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  origin?: OriginGetDto;\n}\n\n@Component({\n  selector: \"app-origin-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: \"./origin-dialog.component.html\",\n  styleUrls: [\"./origin-dialog.component.css\"],\n})\nexport class OriginDialogComponent implements OnInit {\n  originForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<OriginDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New Origin\" : \"Edit Origin\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.originForm.valid) {\n      this.dialogRef.close({\n        id: this.data.origin?.id,\n        ...this.originForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.originForm = this.fb.group({\n      originName: [this.data.origin?.originName || \"\", [Validators.required]],\n    });\n  }\n}\n","<!-- src/app/components/origin-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"originForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"originName\" matInput placeholder=\"Enter origin name\">\n      <mat-error *ngIf=\"originForm.get('originName')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"originForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/origin-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  OriginGetDto,\n  OriginPatchDto,\n  OriginPostDto,\n} from \"../../../models/origin.model\";\nimport { OriginDialogComponent } from \"../origin-dialog/origin-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { OriginService } from \"../origin.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\n\n@Component({\n  selector: \"app-origin-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./origin-list.component.html\",\n  styleUrls: [\"./origin-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OriginListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<OriginGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"name\", \"actions\"];\n  selection = new SelectionModel<OriginGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"origin\";\n  private destroy$ = new Subject<void>();\n\n  private originService = inject(OriginService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the origines signal changes\n    effect(() => {\n      this.updateTable(this.originService.origins());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadOrigines() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: OriginGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof OriginGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (\n      origin: OriginGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        origin.id.toString().includes(searchStr) ||\n        origin.originName.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(OriginDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: OriginPostDto) => {\n        if (result) {\n          this.originService.createOrigin(result);\n          this.snackBarService.showSuccess(\"Origin added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(origin: OriginGetDto): void {\n    const dialogRef = this.dialog.open(OriginDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", origin },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: OriginPatchDto = {\n            originName: result.originName,\n          };\n\n          this.originService.updateOrigin(origin.id, update);\n          this.snackBarService.showSuccess(\"Origin updated successfully\");\n        }\n      });\n  }\n\n  deleteOrigin(origin: OriginGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`origin \"${origin.originName}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.originService.deleteOrigin(origin.id);\n          this.snackBarService.showSuccess(\"Origin deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedCategories(): void {\n    const selectedIds = this.selection.selected.map((origin) => origin.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No origin selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"origin\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.originService.deleteManyOrigin(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected origin deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n\n  // Function to update table data\n  private updateTable(categories: OriginGetDto[]): void {\n    this.dataSource.data = categories;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/Origin-list/unit-type-list.component.html -->\n\n<div>\n  <mat-toolbar color=\"primary\">\n    <span>Origins</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new Origin\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedCategories()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"originName\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let origin\" mat-cell> {{ origin.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header=\"originName\"> Name</th>\n        <td *matCellDef=\"let origin\" mat-cell> {{ origin.originName }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let origin\" mat-cell>\n          <button (click)=\"openEditDialog(origin)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteOrigin(origin)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns ; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No Origin data available</p>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  OriginGetDto,\n  OriginPatchDto,\n  OriginPostDto,\n} from \"../../models/origin.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OriginService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/origins`;\n\n  // State signals\n  private originList = signal<OriginGetDto[]>([]);\n\n  // Exposed computed signals\n  public origins = computed(() => this.originList());\n\n  constructor() {\n    // Load origin data immediately when service is injected\n    this.loadAllOrigins();\n  }\n\n  /**\n   * Load all origin from the API and update the signal\n   */\n  loadAllOrigins(): void {\n    this.http.get<OriginGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.originList.set(data),\n    });\n  }\n\n  /**\n   * Get a single origin by ID\n   */\n  getOriginById(id: number): OriginGetDto | undefined {\n    return this.originList().find((origin) => origin.id === id);\n  }\n\n  /**\n   * Create a new origin\n   */\n  createOrigin(origin: OriginPostDto): void {\n    this.http.post<OriginGetDto>(this.baseUrl, origin).subscribe({\n      next: (newOrigin) => {\n        // Update the signal with the new origin\n        this.originList.update((list) => [...list, newOrigin]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing origin\n   */\n  updateOrigin(id: number, originUpdate: OriginPatchDto): void {\n    this.http\n      .patch<OriginGetDto>(`${this.baseUrl}/${id}`, originUpdate)\n      .subscribe({\n        next: (updatedOrigin) => {\n          // Update the specific origin in the list\n          this.originList.update((list) =>\n            list.map((origin) => (origin.id === id ? updatedOrigin : origin)),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a origin by ID\n   */\n  deleteOrigin(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted origin from the list\n        this.originList.update((list) =>\n          list.filter((origin) => origin.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple origin by IDs\n   */\n  deleteManyOrigin(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted origin from the list\n          this.originList.update((list) =>\n            list.filter((origin) => !ids.includes(origin.id)),\n          );\n        },\n      });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n} from \"@angular/core\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule } from \"@angular/common\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\nimport { MatToolbar } from \"@angular/material/toolbar\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIcon } from \"@angular/material/icon\";\n\n@Component({\n  selector: \"app-password-request\",\n  templateUrl: \"./password-request.component.html\",\n  styleUrls: [\"./password-request.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIcon,\n    ReactiveFormsModule,\n    RouterModule,\n    MatToolbar,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordRequestComponent {\n  passwordRequestForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordRequestForm = this.formBuilder.group({\n      username: [\"\", [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    const { username } = this.passwordRequestForm.value;\n\n    this.authService.passwordRequest(username).subscribe({\n      next: () => {\n        this.snackbarService.showInfo(\n          `An email has been sent to ${username} to reset your password`,\n        );\n        this.router.navigate([\"/login\"]);\n      },\n    });\n  }\n}\n","<div class=\"container\">\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>New Password Request</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"form-container\">\n    <mat-card class=\"password-request-card\">\n      <mat-card-content>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"passwordRequestForm\" class=\"password-form\">\n          <h2 class=\"form-title\">Reset your password</h2>\n\n          <p class=\"form-description\">\n            Enter your username below and we'll send you instructions to reset your password.\n          </p>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Username</mat-label>\n            <input\n              autocomplete=\"username\"\n              formControlName=\"username\"\n              matInput\n              placeholder=\"Enter your username\"\n              type=\"text\">\n            <mat-icon matPrefix>person</mat-icon>\n            <mat-error *ngIf=\"passwordRequestForm.get('username')?.invalid\">\n              Username is required\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"form-actions\">\n            <button\n              mat-stroked-button\n              routerLink=\"/login\"\n              type=\"button\">\n              Back to Login\n            </button>\n            <button\n              [disabled]=\"passwordRequestForm.invalid\"\n              color=\"primary\"\n              mat-raised-button\n              type=\"submit\">\n              Submit Password Request\n            </button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n} from \"@angular/core\";\nimport {\n  ActivatedRoute,\n  ParamMap,\n  Router,\n  RouterModule,\n} from \"@angular/router\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule } from \"@angular/common\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n  selector: \"app-password-reset\",\n  templateUrl: \"./password-reset.component.html\",\n  styleUrls: [\"./password-reset.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordResetComponent implements OnInit {\n  passwordResetForm: FormGroup;\n  token: string = \"\";\n  mismatchedPassword: boolean = false;\n  hidePassword = true;\n  hideConfirmPassword = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordResetForm = this.formBuilder.group({\n      password: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          this.specialCharacterValidator,\n        ],\n      ],\n      confirmPassword: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          this.specialCharacterValidator,\n        ],\n      ],\n    });\n  }\n\n  ngOnInit(): void {\n    this.passwordResetForm\n      .get(\"confirmPassword\")\n      ?.valueChanges.subscribe(() => {\n        this.mismatchedPassword = false;\n      });\n\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.token = params.get(\"token\") || \"\";\n      if (!this.token) {\n        // no JWT found\n        void this.router.navigate([\"/login\"]);\n      }\n    });\n  }\n\n  onSubmit() {\n    const { password, confirmPassword } = this.passwordResetForm.value;\n\n    if (password !== confirmPassword) {\n      this.mismatchedPassword = true;\n      return;\n    }\n\n    this.authService.passwordReset(password, this.token).subscribe({\n      next: () => {\n        this.snackbarService.showSuccess(\"Your password has been reset\");\n        this.router.navigate([\"/login\"]); // Navigate to /products on success\n      },\n    });\n  }\n\n  specialCharacterValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    // Regular expression for special characters\n    const hasSpecialCharacter = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n    return hasSpecialCharacter ? null : { noSpecialCharacter: true };\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  toggleConfirmPasswordVisibility() {\n    this.hideConfirmPassword = !this.hideConfirmPassword;\n  }\n}\n","<div class=\"container\">\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>New Password</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"form-container\">\n    <mat-card class=\"password-reset-card\">\n      <mat-card-content>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"passwordResetForm\" class=\"password-form\">\n          <h2 class=\"form-title\">Create your new password</h2>\n\n          <p class=\"form-description\">\n            Please enter and confirm your new password below.\n          </p>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Password</mat-label>\n            <input\n              [type]=\"hidePassword ? 'password' : 'text'\"\n              autocomplete=\"new-password\"\n              formControlName=\"password\"\n              matInput\n              placeholder=\"Enter your password\">\n            <mat-icon matPrefix>lock</mat-icon>\n            <button\n              (click)=\"togglePasswordVisibility()\"\n              aria-label=\"Toggle password visibility\"\n              mat-icon-button\n              matSuffix\n              type=\"button\">\n              <mat-icon>{{ hidePassword ? 'visibility' : 'visibility_off' }}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"passwordResetForm.get('password')?.invalid\">\n              Password is required\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Re-enter your password</mat-label>\n            <input\n              [type]=\"hideConfirmPassword ? 'password' : 'text'\"\n              autocomplete=\"new-password\"\n              formControlName=\"confirmPassword\"\n              matInput\n              placeholder=\"Confirm your password\">\n            <mat-icon matPrefix>lock</mat-icon>\n            <button\n              (click)=\"toggleConfirmPasswordVisibility()\"\n              aria-label=\"Toggle confirm password visibility\"\n              mat-icon-button\n              matSuffix\n              type=\"button\">\n              <mat-icon>{{ hideConfirmPassword ? 'visibility' : 'visibility_off' }}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"passwordResetForm.get('confirmPassword')?.invalid\">\n              Please confirm your password\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"password-requirements\">\n            <div\n              *ngIf=\"passwordResetForm.get('password')?.errors?.['minlength']\"\n              class=\"error-item\">\n              <mat-icon>error_outline</mat-icon>\n              Your password needs to have at least 5 characters.\n            </div>\n\n            <div\n              *ngIf=\"passwordResetForm.get('password')?.errors?.['noSpecialCharacter']\"\n              class=\"error-item\">\n              <mat-icon>error_outline</mat-icon>\n              Your password needs to contain at least one special character: {{ '[!@#$%^&*(),.?\":{}|<>]' }}\n            </div>\n\n            <div *ngIf=\"mismatchedPassword\" class=\"error-item\">\n              <mat-icon>error_outline</mat-icon>\n              The 2 entries do not match.\n            </div>\n          </div>\n\n          <div class=\"form-actions\">\n            <button\n              mat-stroked-button\n              routerLink=\"/login\"\n              type=\"button\">\n              Back to Login\n            </button>\n            <button\n              [disabled]=\"passwordResetForm.invalid\"\n              color=\"primary\"\n              mat-raised-button\n              type=\"submit\">\n              Submit New Password\n            </button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { MatCard, MatCardContent } from \"@angular/material/card\";\nimport { MatToolbar } from \"@angular/material/toolbar\";\n\n@Component({\n  selector: \"app-profile\",\n  standalone: true,\n  imports: [MatCard, MatCardContent, MatToolbar],\n  templateUrl: \"./profile.component.html\",\n  styleUrl: \"./profile.component.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProfileComponent {}\n","<div>\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>Profile</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"main-container mat-elevation-z8\">\n    <mat-card class=\"main-card\">\n      <mat-card-content>\n\n        TBD\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ProductService } from '../../services/products.service';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  standalone: true,\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductsComponent implements OnInit {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  showRelevantItems = false;\n  showSixtySales = false;\n  showWoh = false;\n  showYield = false;\n  showWithImages = false; // New filter for rows with images\n\n  // Filter dropdowns\n  originFilter: string = '';\n  packSizeFilter: string | number = '';\n  buyerFilter: string | number = '';\n\n  // Min CompCost property\n  minCompCost: number = 0;\n\n  // Form control\n  minCompCostControl = new FormControl('');\n\n  // Unique dropdown options\n  uniqueOrigins: string[] = [];\n  uniquePackSizes: (string | number)[] = [];\n  uniqueBuyers: (string | number)[] = [];\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private productService: ProductService) {}\n\n  ngOnInit(): void {}\n}\n","Product Test\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport {\n  PurchaseProductGetDto,\n  PurchaseProductPatchDto,\n  PurchaseProductPostDto,\n} from \"../../../models/purchase-product.model\";\nimport { OriginGetDto } from \"../../../models/origin.model\";\nimport { CategoryGetDto } from \"../../../models/category.model\";\nimport { UnitTypeGetDto } from \"../../../models/unit-type.model\";\nimport { UserNameGetDto } from \"../../../models/user-name.model\";\nimport { HarvestTypeGetDto } from \"../../../models/harvest-type.model\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  purchaseProduct?: PurchaseProductGetDto;\n  origins: OriginGetDto[];\n  harvestTypes: HarvestTypeGetDto[];\n  categories: CategoryGetDto[];\n  unitTypes: UnitTypeGetDto[];\n  defaultBuyerUsers: UserNameGetDto[];\n}\n\n@Component({\n  selector: \"app-purchase-product-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: \"./purchase-product-dialog.component.html\",\n  styleUrls: [\"./purchase-product-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PurchaseProductDialogComponent implements OnInit {\n  productForm!: FormGroup;\n  dialogTitle = \"\";\n  protected readonly data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<PurchaseProductDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\"\n        ? \"Add New Purchase Product\"\n        : \"Edit Purchase Product\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.productForm.valid) {\n      const formValues = this.productForm.getRawValue();\n\n      if (this.data.mode === \"add\") {\n        const postData: PurchaseProductPostDto = {\n          purchaseProductDescription: formValues.purchaseProductDescription,\n          packSize: formValues.packSize,\n          defaultCostPrice: formValues.defaultCostPrice,\n          harvestTypeId: formValues.harvestTypeId,\n          shelfLife: formValues.shelfLife,\n          isFixedPack: formValues.isFixedPack,\n          isActive: formValues.isActive,\n          notes: formValues.notes,\n          isAllowLbs: formValues.isAllowLbs,\n          rotationDays: formValues.rotationDays,\n          defaultBuyerUserId: formValues.defaultBuyerUserId,\n          nonInventory: formValues.nonInventory,\n          originId: formValues.originId,\n          categoryId: formValues.categoryId,\n          unitTypeId: formValues.unitTypeId,\n        };\n\n        this.dialogRef.close(postData);\n      } else {\n        const patchData: PurchaseProductPatchDto = {\n          id: this.data.purchaseProduct!.id,\n          purchaseProductDescription: formValues.purchaseProductDescription,\n          packSize: formValues.packSize,\n          defaultCostPrice: formValues.defaultCostPrice,\n          harvestTypeId: formValues.harvestTypeId,\n          shelfLife: formValues.shelfLife,\n          isFixedPack: formValues.isFixedPack,\n          isActive: formValues.isActive,\n          notes: formValues.notes,\n          isAllowLbs: formValues.isAllowLbs,\n          rotationDays: formValues.rotationDays,\n          defaultBuyerUserId: formValues.defaultBuyerUserId,\n          nonInventory: formValues.nonInventory,\n          originId: formValues.originId,\n          categoryId: formValues.categoryId,\n          unitTypeId: formValues.unitTypeId,\n        };\n\n        this.dialogRef.close(patchData);\n      }\n    }\n  }\n\n  private initForm(): void {\n    this.productForm = this.fb.group({\n      purchaseProductDescription: [\n        this.data.purchaseProduct?.purchaseProductDescription || \"\",\n        [Validators.required],\n      ],\n      packSize: [\n        this.data.purchaseProduct?.packSize || 0,\n        [Validators.required, Validators.min(0)],\n      ],\n      defaultCostPrice: [\n        this.data.purchaseProduct?.defaultCostPrice || 0,\n        [Validators.required, Validators.min(0)],\n      ],\n      harvestTypeId: [\n        this.data.purchaseProduct?.harvestType?.id || \"\",\n        [Validators.required],\n      ],\n      shelfLife: [\n        this.data.purchaseProduct?.shelfLife || 0,\n        [Validators.min(0)],\n      ],\n      isFixedPack: [this.data.purchaseProduct?.isFixedPack || false],\n      isActive: [this.data.purchaseProduct?.isActive || true],\n      notes: [this.data.purchaseProduct?.notes || \"\"],\n      isAllowLbs: [this.data.purchaseProduct?.isAllowLbs || false],\n      rotationDays: [\n        this.data.purchaseProduct?.rotationDays || 0,\n        [Validators.min(0)],\n      ],\n      defaultBuyerUserId: [\n        this.data.purchaseProduct?.defaultBuyerUser?.id || null,\n        [Validators.required],\n      ],\n      nonInventory: [this.data.purchaseProduct?.nonInventory || false],\n      originId: [\n        this.data.purchaseProduct?.origin?.id || null,\n        [Validators.required],\n      ],\n      categoryId: [\n        this.data.purchaseProduct?.category?.id || null,\n        [Validators.required],\n      ],\n      unitTypeId: [\n        this.data.purchaseProduct?.unitType?.id || null,\n        [Validators.required],\n      ],\n    });\n  }\n}\n","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"productForm\">\n  <mat-dialog-content>\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Product Description</mat-label>\n        <input formControlName=\"purchaseProductDescription\" matInput placeholder=\"Enter product description\">\n        <mat-error *ngIf=\"productForm.get('purchaseProductDescription')?.hasError('required')\">\n          Product description is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Pack Size</mat-label>\n        <input formControlName=\"packSize\" matInput placeholder=\"Enter pack size\" type=\"number\">\n        <mat-error *ngIf=\"productForm.get('packSize')?.hasError('required')\">\n          Pack size is required\n        </mat-error>\n        <mat-error *ngIf=\"productForm.get('packSize')?.hasError('min')\">\n          Pack size must be greater than or equal to 0\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Default Cost Price</mat-label>\n        <input formControlName=\"defaultCostPrice\" matInput placeholder=\"Enter default cost price\" type=\"number\">\n        <mat-error *ngIf=\"productForm.get('defaultCostPrice')?.hasError('required')\">\n          Default cost price is required\n        </mat-error>\n        <mat-error *ngIf=\"productForm.get('defaultCostPrice')?.hasError('min')\">\n          Default cost price must be greater than or equal to 0\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>HarvestType</mat-label>\n        <mat-select formControlName=\"harvestTypeId\">\n          <mat-option *ngFor=\"let harvestType of data.harvestTypes\" [value]=\"harvestType.id\">\n            {{ harvestType.harvestType }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('harvestTypeId')?.hasError('required')\">\n          Harvest type is required\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Shelf Life (days)</mat-label>\n        <input formControlName=\"shelfLife\" matInput placeholder=\"Enter shelf life in days\" type=\"number\">\n        <mat-error *ngIf=\"productForm.get('shelfLife')?.hasError('min')\">\n          Shelf life must be greater than or equal to 0\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Rotation Days</mat-label>\n        <input formControlName=\"rotationDays\" matInput placeholder=\"Enter rotation days\" type=\"number\">\n        <mat-error *ngIf=\"productForm.get('rotationDays')?.hasError('min')\">\n          Rotation days must be greater than or equal to 0\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Origin</mat-label>\n        <mat-select formControlName=\"originId\">\n          <mat-option *ngFor=\"let origin of data.origins\" [value]=\"origin.id\">\n            {{ origin.originName }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('originId')?.hasError('required')\">\n          Origin is required\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Category</mat-label>\n        <mat-select formControlName=\"categoryId\">\n          <mat-option *ngFor=\"let category of data.categories\" [value]=\"category.id\">\n            {{ category.categoryName }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('categoryId')?.hasError('required')\">\n          Category is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Unit Type</mat-label>\n        <mat-select formControlName=\"unitTypeId\">\n          <mat-option *ngFor=\"let unitType of data.unitTypes\" [value]=\"unitType.id\">\n            {{ unitType.unitTypeName }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('unitTypeId')?.hasError('required')\">\n          Unit type is required\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Default Buyer</mat-label>\n        <mat-select formControlName=\"defaultBuyerUserId\">\n          <mat-option *ngFor=\"let defaultBuyerUser of data.defaultBuyerUsers\" [value]=\"defaultBuyerUser.id\">\n            {{ defaultBuyerUser.firstName }} {{ defaultBuyerUser.lastName }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('defaultBuyerUserId')?.hasError('required')\">\n          Default buyer is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"toggles-row\">\n      <mat-slide-toggle formControlName=\"isFixedPack\">Fixed Pack</mat-slide-toggle>\n      <mat-slide-toggle formControlName=\"isActive\">Active</mat-slide-toggle>\n      <mat-slide-toggle formControlName=\"isAllowLbs\">Allow Lbs</mat-slide-toggle>\n      <mat-slide-toggle formControlName=\"nonInventory\">Non-Inventory</mat-slide-toggle>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Notes</mat-label>\n        <textarea formControlName=\"notes\" matInput placeholder=\"Enter notes\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"productForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, takeUntil } from \"rxjs/operators\";\n\nimport {\n  PurchaseProductGetDto,\n  PurchaseProductPatchDto,\n  PurchaseProductPostDto,\n} from \"../../../models/purchase-product.model\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { PurchaseProductService } from \"../purchase-product-service\";\nimport { PurchaseProductViewDialogComponent } from \"../purchase-product-view/purchase-product-view.component\";\nimport { PurchaseProductDialogComponent } from \"../purchase-product-dialog/purchase-product-dialog.component\";\nimport { HarvestTypeService } from \"../../harvest-type/harvest-type.service\";\nimport { UnitTypeService } from \"../../unit-type/unit-type.service\";\nimport { CategoryService } from \"../../categoty/category.service\";\nimport { UserService } from \"../../user/user.service\";\nimport { InfiniteScrollDirective } from \"ngx-infinite-scroll\";\nimport { OriginService } from \"../../origin/origin.service\";\n\n@Component({\n  selector: \"app-purchase-product-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n    InfiniteScrollDirective,\n  ],\n  templateUrl: \"./purchase-product-list.component.html\",\n  styleUrls: [\"./purchase-product-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PurchaseProductListComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<PurchaseProductGetDto>([]);\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"purchaseProductDescription\",\n    \"category\",\n    \"origin\",\n    \"packSize\",\n    \"defaultCostPrice\",\n    \"actions\",\n  ];\n\n  selection = new SelectionModel<PurchaseProductGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n  private searchInputSubject = new Subject<string>();\n  private destroy$ = new Subject<void>();\n  private purchaseProductService = inject(PurchaseProductService);\n  private harvestTypeService = inject(HarvestTypeService);\n  private originService = inject(OriginService);\n  private unitTypeService = inject(UnitTypeService);\n  private categoryService = inject(CategoryService);\n  private userService = inject(UserService); // TODO\n\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n\n  constructor() {\n    // Effect to update the table data whenever the products signal changes\n    effect(() => {\n      this.updateTable(this.purchaseProductService.purchaseProducts());\n    });\n  }\n\n  ngOnInit(): void {\n    this.originService.loadAllOrigins();\n    this.harvestTypeService.loadAllHarvestTypes();\n    this.unitTypeService.loadAllUnitTypes();\n    this.categoryService.loadAllCategories();\n    this.userService.loadAllUsers();\n\n    // Setup debounced search\n    this.searchInputSubject\n      .pipe(debounceTime(400), distinctUntilChanged(), takeUntil(this.destroy$))\n      .subscribe((searchTerm) => {\n        this.purchaseProductService.setSearchTerm(searchTerm);\n      });\n  }\n\n  ngAfterViewInit() {\n    // Configure sorting\n    this.configureSort();\n\n    this.sort.sortChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      // Pass the sort parameters to the service\n      this.purchaseProductService.setSortParameters(\n        this.sort.active,\n        this.sort.direction,\n      );\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.purchaseProductService.setSearchTerm(\"\");\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: PurchaseProductGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = this.getPropertyByPath(data, sortHeaderId);\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else if (value instanceof Date) {\n        return value.getTime(); // Convert Date to timestamp (number) for sorting\n      } else if (value == null) {\n        return \"\"; // Treat null/undefined as an empty string\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchQuery.set(value);\n    this.searchInputSubject.next(value);\n  }\n\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.searchInputSubject.next(\"\");\n    inputElement.focus();\n  }\n\n  onScroll(): void {\n    this.purchaseProductService.loadNextPage();\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(PurchaseProductDialogComponent, {\n      width: \"600px\",\n      data: {\n        mode: \"add\",\n        origins: this.originService.origins(),\n        harvestTypes: this.harvestTypeService.harvestTypes(),\n        categories: this.categoryService.categories(),\n        unitTypes: this.unitTypeService.unitTypes(),\n        defaultBuyerUsers: this.userService.users(),\n      },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: PurchaseProductPostDto) => {\n        if (result) {\n          this.purchaseProductService.createPurchaseProduct(result);\n          this.snackBarService.showSuccess(\n            \"Purchase product added successfully\",\n          );\n        }\n      });\n  }\n\n  openEditDialog(purchaseProduct: PurchaseProductGetDto): void {\n    // Implementation for editing a purchase product\n    // Similar to the vendor component's implementation\n    const dialogRef = this.dialog.open(PurchaseProductDialogComponent, {\n      width: \"600px\",\n      data: {\n        mode: \"edit\",\n        purchaseProduct: purchaseProduct,\n        origins: this.originService.origins(),\n        harvestTypes: this.harvestTypeService.harvestTypes(),\n        categories: this.categoryService.categories(),\n        unitTypes: this.unitTypeService.unitTypes(),\n        defaultBuyerUsers: this.userService.users(),\n      },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: PurchaseProductPatchDto) => {\n        if (result) {\n          this.purchaseProductService.updatePurchaseProduct(\n            purchaseProduct.id,\n            result,\n          );\n          this.snackBarService.showSuccess(\"Vendor added successfully\");\n        }\n      });\n  }\n\n  openViewDialog(purchaseProduct: PurchaseProductGetDto): void {\n    this.dialog.open(PurchaseProductViewDialogComponent, {\n      width: \"600px\",\n      data: { purchaseProduct },\n      disableClose: false,\n    });\n  }\n\n  deletePurchaseProduct(purchaseProduct: PurchaseProductGetDto): void {\n    this.confirmationService\n      .confirmDeletion(\n        `purchase product \"${purchaseProduct.purchaseProductDescription}\"`,\n      )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.purchaseProductService\n            .deletePurchaseProduct(purchaseProduct.id)\n            .subscribe({\n              next: () => {\n                // Reload first page after deletion\n                this.purchaseProductService.loadPurchaseProducts(0, true);\n                this.snackBarService.showSuccess(\n                  \"Purchase product deleted successfully\",\n                );\n              },\n            });\n        }\n      });\n  }\n\n  deleteSelectedPurchaseProducts(): void {\n    const selectedIds = this.selection.selected.map((product) => product.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No purchase products selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"purchase product\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.purchaseProductService\n            .deleteManyPurchaseProducts(selectedIds)\n            .subscribe({\n              next: () => {\n                // Reload first page after deletion\n                this.purchaseProductService.loadPurchaseProducts(0, true);\n                this.selection.clear();\n                this.snackBarService.showSuccess(\n                  \"Selected purchase products deleted successfully\",\n                );\n              },\n            });\n        }\n      });\n  }\n\n  /**\n   * Helper to get nested properties like 'category.name'\n   */\n  private getPropertyByPath(obj: any, path: string): any {\n    return path.split(\".\").reduce((o, i) => (o ? o[i] : undefined), obj);\n  }\n\n  // Function to update table data\n  private updateTable(purchaseProducts: PurchaseProductGetDto[]): void {\n    this.dataSource.data = purchaseProducts;\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<div\n  (scrolled)=\"onScroll()\"\n  [infiniteScrollDistance]=\"2\"\n  [infiniteScrollThrottle]=\"50\"\n  [scrollWindow]=\"false\"\n  class=\"container\"\n  infiniteScroll\n>\n  <mat-toolbar color=\"primary\">\n    <span>Purchase Products</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab\n            matTooltip=\"Add new Purchase Product\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedPurchaseProducts()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"purchaseProductDescription\"\n           matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let product\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(product) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(product)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>ID</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.id }}</td>\n      </ng-container>\n\n      <!-- Description Column -->\n      <ng-container matColumnDef=\"purchaseProductDescription\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Description</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.purchaseProductDescription }}</td>\n      </ng-container>\n\n      <!-- Category Column -->\n      <ng-container matColumnDef=\"category\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Category</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.category?.categoryName }}</td>\n      </ng-container>\n\n      <!-- Origin Column -->\n      <ng-container matColumnDef=\"origin\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Origin</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.origin?.originName }}</td>\n      </ng-container>\n\n      <!-- Pack Size Column -->\n      <ng-container matColumnDef=\"packSize\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Pack Size</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.packSize }} {{ product.unitType?.name }}</td>\n      </ng-container>\n\n      <!-- Cost Price Column -->\n      <ng-container matColumnDef=\"defaultCostPrice\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Default Cost</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.defaultCostPrice | currency }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell>Actions</th>\n        <td *matCellDef=\"let product\" class=\"action-buttons\" mat-cell>\n          <button (click)=\"openViewDialog(product)\" color=\"primary\" mat-icon-button matTooltip=\"View Details\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n          <button (click)=\"openEditDialog(product)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deletePurchaseProduct(product)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No purchase products available</p>\n  </div>\n</div>\n","import { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"../../../environments/environment\";\nimport {\n  PurchaseProductGetDto,\n  PurchaseProductPatchDto,\n  PurchaseProductPostDto,\n} from \"../../models/purchase-product.model\";\nimport { PaginatedResponse } from \"../../models/paginate-response.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PurchaseProductService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/purchase-products`;\n\n  // State signals\n  private purchaseProductsList = signal<PurchaseProductGetDto[]>([]);\n  // Exposed computed signals\n  public purchaseProducts = computed(() => this.purchaseProductsList());\n  private totalElements = signal<number>(0);\n  public total = computed(() => this.totalElements());\n  private totalPages = signal<number>(0);\n  public pages = computed(() => this.totalPages());\n  private currentPage = signal<number>(0);\n  public page = computed(() => this.currentPage());\n  public hasMoreData = computed(\n    () => this.currentPage() < this.totalPages() - 1,\n  );\n  private pageSize = signal<number>(50);\n  public size = computed(() => this.pageSize());\n  private loading = signal<boolean>(false);\n  public isLoading = computed(() => this.loading());\n  private searchTerm = signal<string>(\"\");\n  public currentSearchTerm = computed(() => this.searchTerm());\n\n  private sortField = signal<string>(\"purchaseProductDescription\");\n  public currentSortField = computed(() => this.sortField());\n\n  private sortDirection = signal<string>(\"asc\");\n  public currentSortDirection = computed(() => this.sortDirection());\n\n  constructor() {\n    // Initial load of first page\n    this.loadPurchaseProducts(0);\n  }\n\n  /**\n   * Load purchase products with pagination and optional search\n   */\n  loadPurchaseProducts(page: number, resetList: boolean = false): void {\n    this.loading.set(true);\n\n    let params = new HttpParams()\n      .set(\"page\", page.toString())\n      .set(\"size\", this.pageSize().toString())\n      .set(\"sort\", `${this.sortField()},${this.sortDirection()}`); // Add this line\n\n    if (this.searchTerm()) {\n      params = params.set(\"search\", this.searchTerm());\n    }\n\n    this.http\n      .get<PaginatedResponse<PurchaseProductGetDto>>(this.baseUrl, { params })\n      .subscribe({\n        next: (response) => {\n          this.totalElements.set(response.totalElements);\n          this.totalPages.set(response.totalPages);\n          this.currentPage.set(page);\n\n          if (resetList) {\n            this.purchaseProductsList.set(response.content);\n          } else {\n            this.purchaseProductsList.update((list) => [\n              ...list,\n              ...response.content,\n            ]);\n          }\n\n          this.loading.set(false);\n        },\n        error: () => {\n          this.loading.set(false);\n        },\n      });\n  }\n\n  /**\n   * Load next page of purchase products\n   */\n  loadNextPage(): void {\n    if (this.hasMoreData() && !this.isLoading()) {\n      this.loadPurchaseProducts(this.currentPage() + 1);\n    }\n  }\n\n  /**\n   * Set search term and reload from first page\n   */\n  setSearchTerm(term: string): void {\n    this.searchTerm.set(term);\n    this.loadPurchaseProducts(0, true);\n  }\n\n  setSortParameters(field: string, direction: string): void {\n    this.sortField.set(field);\n    this.sortDirection.set(direction);\n    // Reload data with new sort parameters\n    this.loadPurchaseProducts(0, true);\n  }\n\n  /**\n   * Get a single purchase product by ID\n   */\n  getPurchaseProductById(id: number): Observable<PurchaseProductGetDto> {\n    return this.http.get<PurchaseProductGetDto>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Create a new purchase product\n   */\n  createPurchaseProduct(purchaseProduct: PurchaseProductPostDto): void {\n    this.http\n      .post<PurchaseProductGetDto>(this.baseUrl, purchaseProduct)\n      .subscribe({\n        next: (newPurchaseProduct) => {\n          // Update the signal with the new vendor\n          this.purchaseProductsList.update((list) => [\n            ...list,\n            newPurchaseProduct,\n          ]);\n        },\n      });\n  }\n\n  /**\n   * Update an existing purchase product\n   */\n  updatePurchaseProduct(\n    id: number,\n    purchaseProductUpdate: PurchaseProductPatchDto,\n  ): void {\n    this.http\n      .patch<PurchaseProductGetDto>(\n        `${this.baseUrl}/${id}`,\n        purchaseProductUpdate,\n      )\n      .subscribe({\n        next: (updatePurchaseProductGetDto) => {\n          this.purchaseProductsList.update((list) =>\n            list.map((purchaseProductGetDto) =>\n              purchaseProductGetDto.id === id\n                ? updatePurchaseProductGetDto\n                : purchaseProductGetDto,\n            ),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a purchase product by ID\n   */\n  deletePurchaseProduct(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Delete multiple purchase products by IDs\n   */\n  deleteManyPurchaseProducts(ids: number[]): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/bulk`, { body: { ids } });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { PurchaseProductGetDto } from \"../../../models/purchase-product.model\";\n\n@Component({\n  selector: \"app-purchase-product-view-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./purchase-product-view.component.html\",\n  styleUrls: [\"./purchase-product-view.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PurchaseProductViewDialogComponent implements OnInit {\n  protected readonly data: { purchaseProduct: PurchaseProductGetDto } =\n    inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<PurchaseProductViewDialogComponent>);\n\n  ngOnInit(): void {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Purchase Product Details</h2>\n<mat-dialog-content>\n  <div class=\"info-section\">\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Product Description:</span>\n      <span>{{ data.purchaseProduct.purchaseProductDescription }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Pack Size:</span>\n      <span>{{ data.purchaseProduct.packSize }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Default Cost Price:</span>\n      <span>{{ data.purchaseProduct.defaultCostPrice | currency }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Harvest Type:</span>\n      <span>{{ data.purchaseProduct.harvestType?.harvestType }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Shelf Life:</span>\n      <span>{{ data.purchaseProduct.shelfLife }} days</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Fixed Pack:</span>\n      <span>{{ data.purchaseProduct.isFixedPack ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Active:</span>\n      <span>{{ data.purchaseProduct.isActive ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Allow Lbs:</span>\n      <span>{{ data.purchaseProduct.isAllowLbs ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Rotation Days:</span>\n      <span>{{ data.purchaseProduct.rotationDays }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Non-Inventory:</span>\n      <span>{{ data.purchaseProduct.nonInventory ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Default Buyer:</span>\n      <span>{{ data.purchaseProduct.defaultBuyerUser?.firstName }} {{ data.purchaseProduct.defaultBuyerUser?.lastName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Origin:</span>\n      <span>{{ data.purchaseProduct.origin?.originName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Category:</span>\n      <span>{{ data.purchaseProduct.category?.categoryName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Unit Type:</span>\n      <span>{{ data.purchaseProduct.unitType?.unitTypeName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Notes:</span>\n      <span>{{ data.purchaseProduct.notes }}</span>\n    </div>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"close()\" mat-button>Close</button>\n</mat-dialog-actions>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  inject,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, RouterOutlet } from \"@angular/router\";\nimport { MatSidenav, MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-sidebar-layout\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    RouterOutlet,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatTooltipModule,\n  ],\n  templateUrl: \"sidebar-layout.component.html\",\n  styleUrl: \"sidebar-layout.component.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidebarLayoutComponent {\n  @ViewChild(\"drawer\") drawer!: MatSidenav;\n\n  authService = inject(AuthService);\n  // Signal to track sidebar state\n  sidebarOpened = signal(true);\n  firstName = computed(() => this.authService.firstName());\n\n  // Toggle sidebar open/closed\n  toggleSidebar(): void {\n    this.sidebarOpened.update((state) => !state);\n  }\n}\n","<div class=\"sidebar-container\">\n  <mat-toolbar color=\"primary\">\n    <div class=\"toolbar-left\">\n      <button (click)=\"toggleSidebar()\" [matTooltip]=\"sidebarOpened() ? 'Hide menu' : 'Show menu'\" mat-icon-button>\n        <mat-icon>{{ sidebarOpened() ? 'menu_open' : 'menu' }}</mat-icon>\n      </button>\n      <span class=\"toolbar-title\">PFFC Application</span>\n    </div>\n\n    <div class=\"toolbar-center\">\n      <img alt=\"Logo\" class=\"logo\" src=\"./assets/logo.png\">\n    </div>\n\n    <div class=\"toolbar-right\">\n      <span *ngIf=\"firstName() as name\" class=\"logged-in\">Logged in as {{ name }}</span>\n    </div>\n  </mat-toolbar>\n  <mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer [opened]=\"sidebarOpened()\" class=\"sidenav\" mode=\"side\">\n      <!-- Regular menu items -->\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/dashboard\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>dashboard</mat-icon>\n          <span matListItemTitle>Home</span>\n        </a>\n        \n        <a mat-list-item routerLink=\"/data\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>storage</mat-icon>\n          <span matListItemTitle>Data Explorer</span>\n        </a>\n      </mat-nav-list>\n\n      <mat-divider></mat-divider>\n\n      <mat-accordion>\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"/users\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>people</mat-icon>\n              <span matListItemTitle>Users</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/roles\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>verified_user</mat-icon>\n              <span matListItemTitle>Roles</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/permissions\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>security</mat-icon>\n              <span matListItemTitle>Permissions</span>\n            </a>\n          </mat-nav-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n\n\n      <!-- Expandable menu items with submenus -->\n      <mat-accordion>\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <div class=\"panel-title-content\">\n                <mat-icon>settings</mat-icon>\n                <span>Administration</span>\n              </div>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"/users\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>people</mat-icon>\n              <span matListItemTitle>Users</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/roles\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>verified_user</mat-icon>\n              <span matListItemTitle>Roles</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/permissions\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>security</mat-icon>\n              <span matListItemTitle>Permissions</span>\n            </a>\n          </mat-nav-list>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <div class=\"panel-title-content\">\n                <mat-icon>insert_chart</mat-icon>\n                <span>Reports</span>\n              </div>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"/reports/summary\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>summarize</mat-icon>\n              <span matListItemTitle>Summary</span>\n            </a>\n            <a mat-list-item routerLink=\"/reports/analytics\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>analytics</mat-icon>\n              <span matListItemTitle>Analytics</span>\n            </a>\n            <a mat-list-item routerLink=\"/reports/export\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>download</mat-icon>\n              <span matListItemTitle>Export</span>\n            </a>\n          </mat-nav-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n\n      <mat-divider></mat-divider>\n\n      <!-- Bottom menu items -->\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/profile\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>account_circle</mat-icon>\n          <span matListItemTitle>Profile</span>\n        </a>\n        <a mat-list-item routerLink=\"/help\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>help</mat-icon>\n          <span matListItemTitle>Help</span>\n        </a>\n        <a mat-list-item routerLink=\"/logout\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>exit_to_app</mat-icon>\n          <span matListItemTitle>Logout</span>\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content class=\"sidenav-content\">\n      <div class=\"content-container\">\n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","// src/app/components/unitType-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { UnitTypeGetDto } from \"../../../models/unit-type.model\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  unitType?: UnitTypeGetDto;\n}\n\n@Component({\n  selector: \"app-unitType-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: \"./unit-type-dialog.component.html\",\n  styleUrls: [\"./unit-type-dialog.component.css\"],\n})\nexport class UnitTypeDialogComponent implements OnInit {\n  unitTypeForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<UnitTypeDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New UnitType\" : \"Edit UnitType\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.unitTypeForm.valid) {\n      this.dialogRef.close({\n        id: this.data.unitType?.id,\n        ...this.unitTypeForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.unitTypeForm = this.fb.group({\n      unitTypeName: [\n        this.data.unitType?.unitTypeName || \"\",\n        [Validators.required],\n      ],\n    });\n  }\n}\n","<!-- src/app/components/unitType-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"unitTypeForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"unitTypeName\" matInput placeholder=\"Enter unit type name\">\n      <mat-error *ngIf=\"unitTypeForm.get('unitTypeName')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"unitTypeForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/unitType-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  UnitTypeGetDto,\n  UnitTypePatchDto,\n  UnitTypePostDto,\n} from \"../../../models/unit-type.model\";\nimport { UnitTypeDialogComponent } from \"../unit-type-dialog/unit-type-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { UnitTypeService } from \"../unit-type.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\n\n@Component({\n  selector: \"app-unitType-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./unit-type-list.component.html\",\n  styleUrls: [\"./unit-type-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitTypeListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<UnitTypeGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"name\", \"actions\"];\n  selection = new SelectionModel<UnitTypeGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"unitType\";\n  private destroy$ = new Subject<void>();\n\n  private unitTypeService = inject(UnitTypeService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the unitTypees signal changes\n    effect(() => {\n      this.updateTable(this.unitTypeService.unitTypes());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadUnitTypees() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: UnitTypeGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof UnitTypeGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (\n      unitType: UnitTypeGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        unitType.id.toString().includes(searchStr) ||\n        unitType.unitTypeName.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(UnitTypeDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: UnitTypePostDto) => {\n        if (result) {\n          this.unitTypeService.createUnitType(result);\n          this.snackBarService.showSuccess(\"UnitType added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(unitType: UnitTypeGetDto): void {\n    const dialogRef = this.dialog.open(UnitTypeDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", unitType },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: UnitTypePatchDto = {\n            unitTypeName: result.unitTypeName,\n          };\n\n          this.unitTypeService.updateUnitType(unitType.id, update);\n          this.snackBarService.showSuccess(\"UnitType updated successfully\");\n        }\n      });\n  }\n\n  deleteUnitType(unitType: UnitTypeGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`unitType \"${unitType.unitTypeName}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.unitTypeService.deleteUnitType(unitType.id);\n          this.snackBarService.showSuccess(\"UnitType deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedCategories(): void {\n    const selectedIds = this.selection.selected.map((unitType) => unitType.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No unitType selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"unitType\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.unitTypeService.deleteManyUnitType(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected unitType deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n\n  // Function to update table data\n  private updateTable(categories: UnitTypeGetDto[]): void {\n    this.dataSource.data = categories;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/UnitType-list/unit-type-list.component.html -->\n\n<div>\n  <mat-toolbar color=\"primary\">\n    <span>Unit Types</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new UnitType\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedCategories()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"unitTypeName\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let unitType\" mat-cell> {{ unitType.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header=\"unitTypeName\"> Name</th>\n        <td *matCellDef=\"let unitType\" mat-cell> {{ unitType.unitTypeName }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let unitType\" mat-cell>\n          <button (click)=\"openEditDialog(unitType)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteUnitType(unitType)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns ; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No UnitType data available</p>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  UnitTypeGetDto,\n  UnitTypePatchDto,\n  UnitTypePostDto,\n} from \"../../models/unit-type.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UnitTypeService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/unit-types`;\n\n  // State signals\n  private unitTypeList = signal<UnitTypeGetDto[]>([]);\n\n  // Exposed computed signals\n  public unitTypes = computed(() => this.unitTypeList());\n\n  constructor() {\n    // Load unitType data immediately when service is injected\n    this.loadAllUnitTypes();\n  }\n\n  /**\n   * Load all unitType from the API and update the signal\n   */\n  loadAllUnitTypes(): void {\n    this.http.get<UnitTypeGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.unitTypeList.set(data),\n    });\n  }\n\n  /**\n   * Get a single unitType by ID\n   */\n  getUnitTypeById(id: number): UnitTypeGetDto | undefined {\n    return this.unitTypeList().find((unitType) => unitType.id === id);\n  }\n\n  /**\n   * Create a new unitType\n   */\n  createUnitType(unitType: UnitTypePostDto): void {\n    this.http.post<UnitTypeGetDto>(this.baseUrl, unitType).subscribe({\n      next: (newUnitType) => {\n        // Update the signal with the new unitType\n        this.unitTypeList.update((list) => [...list, newUnitType]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing unitType\n   */\n  updateUnitType(id: number, unitTypeUpdate: UnitTypePatchDto): void {\n    this.http\n      .patch<UnitTypeGetDto>(`${this.baseUrl}/${id}`, unitTypeUpdate)\n      .subscribe({\n        next: (updatedUnitType) => {\n          // Update the specific unitType in the list\n          this.unitTypeList.update((list) =>\n            list.map((unitType) =>\n              unitType.id === id ? updatedUnitType : unitType,\n            ),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a unitType by ID\n   */\n  deleteUnitType(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted unitType from the list\n        this.unitTypeList.update((list) =>\n          list.filter((unitType) => unitType.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple unitType by IDs\n   */\n  deleteManyUnitType(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted unitType from the list\n          this.unitTypeList.update((list) =>\n            list.filter((unitType) => !ids.includes(unitType.id)),\n          );\n        },\n      });\n  }\n}\n","// src/app/components/user-dialog/user-dialog.component.ts\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { UserGetDto } from \"../../../models/user.model\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  user?: UserGetDto;\n}\n\n@Component({\n  selector: \"app-user-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: \"./user-dialog-component.html\",\n  styleUrls: [\"./user-dialog-component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserDialogComponent implements OnInit {\n  userForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<UserDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle = this.data.mode === \"add\" ? \"Add New User\" : \"Edit User\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.userForm.valid) {\n      this.dialogRef.close({\n        id: this.data.user?.id,\n        ...this.userForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.userForm = this.fb.group({\n      username: [this.data.user?.username || \"\", [Validators.required]],\n      password: [\"\"],\n      firstName: [this.data.user?.firstName || \"\", [Validators.required]],\n      lastName: [this.data.user?.lastName || \"\", [Validators.required]],\n      emailAddress: [this.data.user?.emailAddress || \"\", [Validators.email]],\n      emailSignature: [this.data.user?.emailSignature || \"\"],\n      phoneNumber: [this.data.user?.phoneNumber || \"\"],\n      phoneCarrier: [this.data.user?.phoneCarrier || \"\"],\n      preferredContact: [this.data.user?.preferredContact || \"\"],\n      isCommission: [this.data.user?.isCommission || false],\n      isEnabled: [this.data.mode === \"add\" ? true : this.data.user?.isEnabled],\n      isLocked: [this.data.mode === \"add\" ? false : this.data.user?.isLocked],\n      // These fields are only included on creation, not for updates\n      lastLoginAt: [\n        this.data.mode === \"add\" ? null : this.data.user?.lastLoginAt,\n      ],\n      loginCount: [this.data.mode === \"add\" ? 0 : this.data.user?.loginCount],\n      failedLoginAttemptsCount: [\n        this.data.mode === \"add\" ? 0 : this.data.user?.failedLoginAttemptsCount,\n      ],\n    });\n  }\n}\n","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"userForm\">\n  <mat-dialog-content>\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Username</mat-label>\n        <input formControlName=\"username\" matInput placeholder=\"Enter username\">\n        <mat-error *ngIf=\"userForm.get('username')?.hasError('required')\">\n          Username is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div *ngIf=\"data.mode === 'add'\" class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Password</mat-label>\n        <input formControlName=\"password\" matInput placeholder=\"Enter password\">\n        <mat-error *ngIf=\"userForm.get('password')?.hasError('required')\">\n          Password is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>First Name</mat-label>\n        <input formControlName=\"firstName\" matInput placeholder=\"Enter first name\">\n        <mat-error *ngIf=\"userForm.get('firstName')?.hasError('required')\">\n          First name is required\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Last Name</mat-label>\n        <input formControlName=\"lastName\" matInput placeholder=\"Enter last name\">\n        <mat-error *ngIf=\"userForm.get('lastName')?.hasError('required')\">\n          Last name is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Email Address</mat-label>\n        <input formControlName=\"emailAddress\" matInput placeholder=\"Enter email address\" type=\"email\">\n        <mat-error *ngIf=\"userForm.get('emailAddress')?.hasError('required')\">\n          Email address is required\n        </mat-error>\n        <mat-error *ngIf=\"userForm.get('emailAddress')?.hasError('email')\">\n          Please enter a valid email address\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Email Signature</mat-label>\n        <textarea formControlName=\"emailSignature\" matInput placeholder=\"Enter email signature\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Phone Number</mat-label>\n        <input formControlName=\"phoneNumber\" matInput placeholder=\"Enter phone number\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Phone Carrier</mat-label>\n        <input formControlName=\"phoneCarrier\" matInput placeholder=\"Enter phone carrier\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Preferred Contact</mat-label>\n        <input formControlName=\"preferredContact\" matInput placeholder=\"Enter preferred Contact\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"toggles-row\">\n      <mat-slide-toggle color=\"primary\" formControlName=\"isCommission\">Commission Based</mat-slide-toggle>\n      <mat-slide-toggle color=\"primary\" formControlName=\"isEnabled\">Enabled</mat-slide-toggle>\n      <mat-slide-toggle color=\"warn\" formControlName=\"isLocked\">Locked</mat-slide-toggle>\n    </div>\n\n    <div *ngIf=\"data.mode === 'edit'\" class=\"info-section\">\n      <h3>Account Information</h3>\n      <p>\n        <span class=\"info-label\">Last Login:</span>\n        <span>{{ data.user?.lastLoginAt ? (data.user?.lastLoginAt | date:'medium') : 'Never' }}</span>\n      </p>\n      <p>\n        <span class=\"info-label\">Login Count:</span>\n        <span>{{ data.user?.loginCount }}</span>\n      </p>\n      <p>\n        <span class=\"info-label\">Failed Login Attempts:</span>\n        <span>{{ data.user?.failedLoginAttemptsCount }}</span>\n      </p>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"userForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  UserGetDto,\n  UserPatchDto,\n  UserPostDto,\n} from \"../../../models/user.model\";\nimport { UserDialogComponent } from \"../user-dialog/user-dialog-component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { UserService } from \"../user.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\nimport { UserViewDialogComponent } from \"../user-view-dialog/user-view-dialog.component\";\n\n@Component({\n  selector: \"app-user-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./user-list-component.html\",\n  styleUrls: [\"./user-list-component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<UserGetDto>([]);\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"username\",\n    \"fullName\",\n    \"commission\",\n    \"status\",\n    \"actions\",\n  ];\n\n  selection = new SelectionModel<UserGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"user\";\n  private destroy$ = new Subject<void>();\n\n  private userService = inject(UserService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the users signal changes\n    effect(() => {\n      this.updateTable(this.userService.users());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadUsers() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: UserGetDto,\n      sortHeaderId: string,\n    ) => {\n      // Handle fullName sorting\n      if (sortHeaderId === \"fullName\") {\n        return `${data.firstName} ${data.lastName}`.toLowerCase();\n      }\n\n      // Handle commission sorting\n      if (sortHeaderId === \"commission\") {\n        if (data.isCommission) return \"yes\";\n        else return \"no\";\n      }\n\n      // Handle status sorting\n      if (sortHeaderId === \"status\") {\n        if (!data.isEnabled) return \"disabled\";\n        if (data.isLocked) return \"locked\";\n        return \"active\";\n      }\n\n      const value = data[sortHeaderId as keyof UserGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else if (typeof value === \"boolean\") {\n        return value ? 1 : 0; // Convert boolean to numeric for sorting\n      } else if (value == null) {\n        return \"\"; // Treat null/undefined as an empty string\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    this.dataSource.filterPredicate = (user: UserGetDto, filter: string) => {\n      const searchStr = filter.toLowerCase();\n\n      return (\n        (user.id?.toString() ?? \"\").includes(searchStr) ||\n        (user.username?.toLowerCase() ?? \"\").includes(searchStr) ||\n        (user.firstName?.toLowerCase() ?? \"\").includes(searchStr) ||\n        (user.lastName?.toLowerCase() ?? \"\").includes(searchStr) ||\n        `${user.firstName ?? \"\"} ${user.lastName ?? \"\"}`\n          .toLowerCase()\n          .includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(UserDialogComponent, {\n      width: \"600px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: UserPostDto) => {\n        if (result) {\n          this.userService.createUser(result);\n          this.snackBarService.showSuccess(\"User added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(user: UserGetDto): void {\n    const dialogRef = this.dialog.open(UserDialogComponent, {\n      width: \"600px\",\n      data: { mode: \"edit\", user },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: UserPatchDto = {\n            username: result.username,\n            preferredContact: result.preferredContact,\n            emailAddress: result.emailAddress,\n            emailSignature: result.emailSignature,\n            phoneNumber: result.phoneNumber,\n            phoneCarrier: result.phoneCarrier,\n            isCommission: result.isCommission,\n            firstName: result.firstName,\n            lastName: result.lastName,\n            isEnabled: result.isEnabled,\n            isLocked: result.isLocked,\n          };\n\n          this.userService.updateUser(user.id, update);\n          this.snackBarService.showSuccess(\"User updated successfully\");\n        }\n      });\n  }\n\n  openViewDialog(user: UserGetDto): void {\n    this.dialog.open(UserViewDialogComponent, {\n      width: \"600px\",\n      data: { user },\n      disableClose: false,\n    });\n  }\n\n  deleteUser(user: UserGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`user \"${user.username}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.userService.deleteUser(user.id);\n          this.snackBarService.showSuccess(\"User deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedUsers(): void {\n    const selectedIds = this.selection.selected.map((user) => user.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No users selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"user\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.userService.deleteManyUsers(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected users deleted successfully\",\n          );\n        }\n      });\n  }\n\n  getUserCommission(user: UserGetDto): string {\n    if (user.isCommission) {\n      return \"Yes\";\n    } else {\n      return \"No\";\n    }\n  }\n\n  getCommissionColor(user: UserGetDto): string {\n    if (user.isCommission) {\n      return \"primary\";\n    } else {\n      return \"accent\";\n    }\n  }\n\n  getUserStatus(user: UserGetDto): string {\n    if (!user.isEnabled) return \"Disabled\";\n    if (user.isLocked) return \"Locked\";\n    return \"Active\";\n  }\n\n  getStatusColor(user: UserGetDto): string {\n    if (!user.isEnabled) return \"warn\";\n    if (user.isLocked) return \"accent\";\n    return \"primary\";\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, \"\");\n    inputElement.focus(); // Optional: keeps focus on the input after clearing\n  }\n\n  // Function to update table data\n  private updateTable(users: UserGetDto[]): void {\n    this.dataSource.data = users;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <span>Users</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new User\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedUsers()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"username\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let user\" mat-cell> {{ user.id }}</td>\n      </ng-container>\n\n      <!-- Username Column -->\n      <ng-container matColumnDef=\"username\">\n        <th *matHeaderCellDef class=\"mat-typography font-weight-bold\" mat-header-cell mat-sort-header> Username</th>\n        <td *matCellDef=\"let user\" mat-cell> {{ user.username }}</td>\n      </ng-container>\n\n      <!-- Full Name Column -->\n      <ng-container matColumnDef=\"fullName\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> Full Name</th>\n        <td *matCellDef=\"let user\" mat-cell> {{ user.firstName }} {{ user.lastName }}</td>\n      </ng-container>\n\n      <!-- Commission Column -->\n      <ng-container matColumnDef=\"commission\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> Commission</th>\n        <td *matCellDef=\"let user\" mat-cell>\n          <span [ngClass]=\"'mat-' + getCommissionColor(user) + '-text'\">\n            {{ getUserCommission(user) }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Status Column -->\n      <ng-container matColumnDef=\"status\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> Status</th>\n        <td *matCellDef=\"let user\" mat-cell>\n          <span [ngClass]=\"'mat-' + getStatusColor(user) + '-text'\">\n            {{ getUserStatus(user) }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let user\" class=\"action-buttons\" mat-cell>\n          <button (click)=\"openViewDialog(user)\" color=\"primary\" mat-icon-button matTooltip=\"View Details\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n          <button (click)=\"openEditDialog(user)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteUser(user)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n\n    <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n      <p>No results matching \"{{ searchQuery() }}</p>\n    </div>\n    <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n      <p>No user data available</p>\n    </div>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { UserGetDto } from \"../../../models/user.model\";\n\n@Component({\n  selector: \"app-user-view-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./user-view-dialog-component.html\",\n  styleUrls: [\"./user-view-dialog-component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserViewDialogComponent implements OnInit {\n  protected readonly data: { user: UserGetDto } = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<UserViewDialogComponent>);\n\n  ngOnInit(): void {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  getStatusText(): string {\n    const user = this.data.user;\n    if (!user.isEnabled) return \"Disabled\";\n    if (user.isLocked) return \"Locked\";\n    return \"Active\";\n  }\n\n  getStatusClass(): string {\n    const user = this.data.user;\n    if (!user.isEnabled) return \"mat-warn-text\";\n    if (user.isLocked) return \"mat-accent-text\";\n    return \"mat-primary-text\";\n  }\n}\n","<h2 mat-dialog-title>User Details</h2>\n<mat-dialog-content>\n  <div class=\"info-section\">\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Username:</span>\n      <span>{{ data.user.username }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Full Name:</span>\n      <span>{{ data.user.firstName }} {{ data.user.lastName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Email Address:</span>\n      <span>{{ data.user.emailAddress || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Email Signature:</span>\n      <span>{{ data.user.emailSignature || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Phone Number:</span>\n      <span>{{ data.user.phoneNumber || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Phone Carrier:</span>\n      <span>{{ data.user.phoneCarrier || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Preferred Contact:</span>\n      <span>{{ data.user.preferredContact || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Commission Based:</span>\n      <span>{{ data.user.isCommission ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Status:</span>\n      <span [ngClass]=\"getStatusClass()\">{{ getStatusText() }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Last Login:</span>\n      <span>{{ data.user.lastLoginAt ? (data.user.lastLoginAt | date:'medium') : 'Never' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Login Count:</span>\n      <span>{{ data.user.loginCount }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Failed Login Attempts:</span>\n      <span>{{ data.user.failedLoginAttemptsCount }}</span>\n    </div>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"close()\" mat-button>Close</button>\n</mat-dialog-actions>\n","// src/app/services/user.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { UserGetDto, UserPatchDto, UserPostDto } from \"../../models/user.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/users`;\n\n  // State signals\n  private userList = signal<UserGetDto[]>([]);\n\n  // Exposed computed signals\n  public users = computed(() => this.userList());\n\n  constructor() {\n    // Load user data immediately when service is injected\n    this.loadAllUsers();\n  }\n\n  /**\n   * Load all users from the API and update the signal\n   */\n  loadAllUsers(): void {\n    this.http.get<UserGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.userList.set(data),\n    });\n  }\n\n  /**\n   * Get a single user by ID\n   */\n  getUserById(id: number): UserGetDto | undefined {\n    return this.userList().find((user) => user.id === id);\n  }\n\n  /**\n   * Create a new user\n   */\n  createUser(user: UserPostDto): void {\n    this.http.post<UserGetDto>(this.baseUrl, user).subscribe({\n      next: (newUser) => {\n        // Update the signal with the new user\n        this.userList.update((list) => [...list, newUser]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing user\n   */\n  updateUser(id: number, userUpdate: UserPatchDto): void {\n    this.http.patch<UserGetDto>(`${this.baseUrl}/${id}`, userUpdate).subscribe({\n      next: (updatedUser) => {\n        // Update the specific user in the list\n        this.userList.update((list) =>\n          list.map((user) => (user.id === id ? updatedUser : user)),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete a user by ID\n   */\n  deleteUser(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted user from the list\n        this.userList.update((list) => list.filter((user) => user.id !== id));\n      },\n    });\n  }\n\n  /**\n   * Delete multiple users by IDs\n   */\n  deleteManyUsers(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted category from the list\n          this.userList.update((list) =>\n            list.filter((user) => !ids.includes(user.id)),\n          );\n        },\n      });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { VendorGetDto } from \"../../../models/vendor.model\";\nimport {\n  MatDatepickerInput,\n  MatDatepickerModule,\n  MatDatepickerToggle,\n} from \"@angular/material/datepicker\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  vendor?: VendorGetDto;\n}\n\n@Component({\n  selector: \"app-vendor-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n  ],\n  templateUrl: \"./vendor-dialog.component.html\",\n  styleUrls: [\"./vendor-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorDialogComponent implements OnInit {\n  vendorForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<VendorDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New Vendor\" : \"Edit Vendor\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    // Get the form values\n    const formValues = this.vendorForm.getRawValue();\n\n    // Combine date and time if both exist\n    const dateValue = formValues.lastAgingRequestDate;\n    const timeValue = formValues.lastAgingRequestTime;\n\n    if (dateValue && timeValue) {\n      // Split the time string into hours and minutes\n      const [hours, minutes] = timeValue.split(\":\");\n\n      // Create a new date object from the date value\n      const combinedDateTime = new Date(dateValue);\n\n      // Set the hours and minutes\n      combinedDateTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n\n      // Replace the separate date and time fields with the combined field\n      delete formValues.lastAgingRequestDate;\n      delete formValues.lastAgingRequestTime;\n      formValues.lastAgingRequest = combinedDateTime.toISOString();\n    }\n\n    // Close the dialog with the combined data\n    this.dialogRef.close({\n      id: this.data.vendor?.id,\n      ...formValues,\n    });\n  }\n\n  // Format time as HH:MM for time input\n  formatTime(date: Date): string {\n    return (\n      date.getHours().toString().padStart(2, \"0\") +\n      \":\" +\n      date.getMinutes().toString().padStart(2, \"0\")\n    );\n  }\n\n  private initForm(): void {\n    this.vendorForm = this.fb.group({\n      vendorName: [this.data.vendor?.vendorName || \"\", [Validators.required]],\n      address1: [this.data.vendor?.address1 || \"\"],\n      address2: [this.data.vendor?.address2 || \"\"],\n      city: [this.data.vendor?.city || \"\"],\n      state: [this.data.vendor?.state || \"\"],\n      zip: [this.data.vendor?.zip || \"\"],\n      country: [this.data.vendor?.country || \"\"],\n      phoneNumber: [this.data.vendor?.phoneNumber || \"\"],\n      vendorRepName: [this.data.vendor?.vendorRepName || \"\"],\n      vendorRepPhoneNumber: [\n        this.data.vendor?.vendorRepPhoneNumber || \"\",\n        [Validators.required],\n      ],\n      vendorRepEmailAddress: [this.data.vendor?.vendorRepEmailAddress || \"\"],\n      accountingName: [this.data.vendor?.accountingName || \"\"],\n      accountingPhoneNumber: [this.data.vendor?.accountingPhoneNumber || \"\"],\n      accountingEmailAddress: [this.data.vendor?.accountingEmailAddress || \"\"],\n      creditTermsDays: [this.data.vendor?.creditTermsDays || 0],\n      creditLimitAmount: [this.data.vendor?.creditLimitAmount || 0],\n      vendorNotes: [this.data.vendor?.vendorNotes || \"\"],\n      logisticsNotes: [this.data.vendor?.logisticsNotes || \"\"],\n      accountingNotes: [this.data.vendor?.accountingNotes || \"\"],\n      lastAgingRequestDate: new FormControl(null),\n      lastAgingRequestTime: new FormControl(null),\n    });\n\n    if (this.data.vendor?.lastAgingRequest) {\n      const date = new Date(this.data.vendor.lastAgingRequest);\n      this.vendorForm.patchValue({\n        lastAgingRequestDate: date,\n        lastAgingRequestTime: this.formatTime(date),\n      });\n    }\n  }\n}\n","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"vendorForm\">\n  <mat-dialog-content>\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Name</mat-label>\n        <input formControlName=\"vendorName\" matInput placeholder=\"Enter vendor name\">\n        <mat-error *ngIf=\"vendorForm.get('vendorName')?.hasError('required')\">\n          Vendor name is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Address 1</mat-label>\n        <input formControlName=\"address1\" matInput placeholder=\"Enter address 1\">\n\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Address 2</mat-label>\n        <input formControlName=\"address2\" matInput placeholder=\"Enter address 2\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>City</mat-label>\n        <input formControlName=\"city\" matInput placeholder=\"Enter city\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>State</mat-label>\n        <input formControlName=\"state\" matInput placeholder=\"Enter state\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Zip</mat-label>\n        <input formControlName=\"zip\" matInput placeholder=\"Enter zip\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Country</mat-label>\n        <input formControlName=\"country\" matInput placeholder=\"Enter country\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Phone Number</mat-label>\n        <input formControlName=\"phoneNumber\" matInput placeholder=\"Enter phone number\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Rep Name</mat-label>\n        <input formControlName=\"vendorRepName\" matInput placeholder=\"Enter vendor rep name\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Rep Phone Number</mat-label>\n        <input formControlName=\"vendorRepPhoneNumber\" matInput placeholder=\"Enter vendor rep phone number\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Rep Email Address</mat-label>\n        <input formControlName=\"vendorRepEmailAddress\" matInput placeholder=\"Enter vendor rep email address\"\n               type=\"email\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Accounting Name</mat-label>\n        <input formControlName=\"accountingName\" matInput placeholder=\"Enter accounting name\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Accounting Phone Number</mat-label>\n        <input formControlName=\"accountingPhoneNumber\" matInput placeholder=\"Enter accounting phone number\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Accounting Email Address</mat-label>\n        <input formControlName=\"accountingEmailAddress\" matInput placeholder=\"Enter accounting email address\"\n               type=\"email\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Credit Terms Days</mat-label>\n        <input formControlName=\"creditTermsDays\" matInput placeholder=\"Enter credit terms days\" type=\"number\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Credit Limit Amount</mat-label>\n        <input formControlName=\"creditLimitAmount\" matInput placeholder=\"Enter credit limit amount\" type=\"number\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Notes</mat-label>\n        <textarea formControlName=\"vendorNotes\" matInput placeholder=\"Enter vendor notes\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Logistics Notes</mat-label>\n        <textarea formControlName=\"logisticsNotes\" matInput placeholder=\"Enter logistics notes\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Accounting Notes</mat-label>\n        <textarea formControlName=\"accountingNotes\" matInput placeholder=\"Enter accounting notes\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Last Aging Request Date</mat-label>\n        <input\n          [matDatepicker]=\"lastAgingPicker\"\n          formControlName=\"lastAgingRequestDate\"\n          matInput\n          placeholder=\"MM/DD/YYYY\">\n        <mat-datepicker-toggle [for]=\"lastAgingPicker\" matSuffix></mat-datepicker-toggle>\n        <mat-datepicker #lastAgingPicker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Last Aging Request Time</mat-label>\n        <input\n          formControlName=\"lastAgingRequestTime\"\n          matInput\n          placeholder=\"HH:MM\"\n          type=\"time\">\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"vendorForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  VendorGetDto,\n  VendorPatchDto,\n  VendorPostDto,\n} from \"../../../models/vendor.model\";\nimport { VendorDialogComponent } from \"../vendor-dialog/vendor-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { VendorService } from \"../vendor.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\nimport { VendorViewDialogComponent } from \"../vendor-view-dialog/vendor-view-dialog.component\";\n\n@Component({\n  selector: \"app-vendor-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./vendor-list.component.html\",\n  styleUrls: [\"./vendor-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<VendorGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"vendorName\", \"actions\"];\n\n  selection = new SelectionModel<VendorGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"vendor\";\n  private destroy$ = new Subject<void>();\n\n  private vendorService = inject(VendorService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the vendors signal changes\n    effect(() => {\n      this.updateTable(this.vendorService.vendors());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadVendors() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: VendorGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof VendorGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else if (value instanceof Date) {\n        return value.getTime(); // Convert Date to timestamp (number) for sorting\n      } else if (value == null) {\n        return \"\"; // Treat null/undefined as an empty string\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    this.dataSource.filterPredicate = (\n      vendor: VendorGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n\n      return (\n        (vendor.id?.toString() ?? \"\").includes(searchStr) ||\n        (vendor.vendorName?.toLowerCase() ?? \"\").includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(VendorDialogComponent, {\n      width: \"600px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: VendorPostDto) => {\n        if (result) {\n          this.vendorService.createVendor(result);\n          this.snackBarService.showSuccess(\"Vendor added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(vendor: VendorGetDto): void {\n    const dialogRef = this.dialog.open(VendorDialogComponent, {\n      width: \"600px\",\n      data: { mode: \"edit\", vendor },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: VendorPatchDto = {\n            vendorName: result.vendorName,\n            address1: result.address1,\n            address2: result.address2,\n            city: result.city,\n            state: result.state,\n            zip: result.zip,\n            country: result.country,\n            phoneNumber: result.phoneNumber,\n            vendorRepName: result.vendorRepName,\n            vendorRepPhoneNumber: result.vendorRepPhoneNumber,\n            vendorRepEmailAddress: result.vendorRepEmailAddress,\n            accountingName: result.accountingName,\n            accountingPhoneNumber: result.accountingPhoneNumber,\n            accountingEmailAddress: result.accountingEmailAddress,\n            creditTermsDays: result.creditTermsDays,\n            creditLimitAmount: result.creditLimitAmount,\n            vendorNotes: result.vendorNotes,\n            logisticsNotes: result.logisticsNotes,\n            accountingNotes: result.accountingNotes,\n            lastAgingRequest: result.lastAgingRequest,\n          };\n\n          this.vendorService.updateVendor(vendor.id, update);\n          this.snackBarService.showSuccess(\"Vendor updated successfully\");\n        }\n      });\n  }\n\n  openViewDialog(vendor: VendorGetDto): void {\n    this.dialog.open(VendorViewDialogComponent, {\n      width: \"600px\",\n      data: { vendor },\n      disableClose: false,\n    });\n  }\n\n  deleteVendor(vendor: VendorGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`vendor \"${vendor.vendorName}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.vendorService.deleteVendor(vendor.id);\n          this.snackBarService.showSuccess(\"Vendor deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedVendors(): void {\n    const selectedIds = this.selection.selected.map((vendor) => vendor.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No vendors selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"vendor\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.vendorService.deleteManyVendors(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected vendors deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, \"\");\n    inputElement.focus(); // Optional: keeps focus on the input after clearing\n  }\n\n  // Function to update table data\n  private updateTable(vendors: VendorGetDto[]): void {\n    this.dataSource.data = vendors;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <span>Vendors</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new Vendor\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedVendors()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"vendorName\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let vendor\" mat-cell> {{ vendor.id }}</td>\n      </ng-container>\n\n      <!-- Vendor Name Column -->\n      <ng-container matColumnDef=\"vendorName\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> Vendor Name</th>\n        <td *matCellDef=\"let vendor\" mat-cell> {{ vendor.vendorName }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let vendor\" class=\"action-buttons\" mat-cell>\n          <button (click)=\"openViewDialog(vendor)\" color=\"primary\" mat-icon-button matTooltip=\"View Details\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n          <button (click)=\"openEditDialog(vendor)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteVendor(vendor)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No vendor data available</p>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { VendorGetDto } from \"../../../models/vendor.model\";\n\n@Component({\n  selector: \"app-vendor-view-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./vendor-view-dialog.component.html\",\n  styleUrls: [\"./vendor-view-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorViewDialogComponent implements OnInit {\n  protected readonly data: { vendor: VendorGetDto } = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<VendorViewDialogComponent>);\n\n  ngOnInit(): void {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Vendor Details</h2>\n<mat-dialog-content>\n  <div class=\"info-section\">\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Name:</span>\n      <span>{{ data.vendor.vendorName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Address 1:</span>\n      <span>{{ data.vendor.address1 }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Address 2:</span>\n      <span>{{ data.vendor.address2 }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">City:</span>\n      <span>{{ data.vendor.city }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">State:</span>\n      <span>{{ data.vendor.state }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Zip:</span>\n      <span>{{ data.vendor.zip }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Country:</span>\n      <span>{{ data.vendor.country }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Phone Number:</span>\n      <span>{{ data.vendor.phoneNumber }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Rep Name:</span>\n      <span>{{ data.vendor.vendorRepName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Rep Phone Number:</span>\n      <span>{{ data.vendor.vendorRepPhoneNumber }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Rep Email Address:</span>\n      <span>{{ data.vendor.vendorRepEmailAddress }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Accounting Name:</span>\n      <span>{{ data.vendor.accountingName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Accounting Phone Number:</span>\n      <span>{{ data.vendor.accountingPhoneNumber }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Accounting Email Address:</span>\n      <span>{{ data.vendor.accountingEmailAddress }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Credit Terms Days:</span>\n      <span>{{ data.vendor.creditTermsDays }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Credit Limit Amount:</span>\n      <span>{{ data.vendor.creditLimitAmount }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Notes:</span>\n      <span>{{ data.vendor.vendorNotes }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Logistics Notes:</span>\n      <span>{{ data.vendor.logisticsNotes }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Accounting Notes:</span>\n      <span>{{ data.vendor.accountingNotes }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Last Aging Request:</span>\n      <span>{{ data.vendor.lastAgingRequest | date: 'medium' }}</span>\n    </div>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"close()\" mat-button>Close</button>\n</mat-dialog-actions>\n","import { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  VendorGetDto,\n  VendorPatchDto,\n  VendorPostDto,\n} from \"../../models/vendor.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class VendorService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/vendors`;\n\n  // State signals\n  private vendorList = signal<VendorGetDto[]>([]);\n\n  // Exposed computed signals\n  public vendors = computed(() => this.vendorList());\n\n  constructor() {\n    // Load vendor data immediately when service is injected\n    this.loadAllVendors();\n  }\n\n  /**\n   * Load all vendors from the API and update the signal\n   */\n  loadAllVendors(): void {\n    this.http.get<VendorGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.vendorList.set(data),\n    });\n  }\n\n  /**\n   * Get a single vendor by ID\n   */\n  getVendorById(id: number): VendorGetDto | undefined {\n    return this.vendorList().find((vendor) => vendor.id === id);\n  }\n\n  /**\n   * Create a new vendor\n   */\n  createVendor(vendor: VendorPostDto): void {\n    this.http.post<VendorGetDto>(this.baseUrl, vendor).subscribe({\n      next: (newVendor) => {\n        // Update the signal with the new vendor\n        this.vendorList.update((list) => [...list, newVendor]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing vendor\n   */\n  updateVendor(id: number, vendorUpdate: VendorPatchDto): void {\n    this.http\n      .patch<VendorGetDto>(`${this.baseUrl}/${id}`, vendorUpdate)\n      .subscribe({\n        next: (updatedVendor) => {\n          // Update the specific vendor in the list\n          this.vendorList.update((list) =>\n            list.map((vendor) => (vendor.id === id ? updatedVendor : vendor)),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a vendor by ID\n   */\n  deleteVendor(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted vendor from the list\n        this.vendorList.update((list) =>\n          list.filter((vendor) => vendor.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple vendors by IDs\n   */\n  deleteManyVendors(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted vendors from the list\n          this.vendorList.update((list) =>\n            list.filter((vendor) => !ids.includes(vendor.id)),\n          );\n        },\n      });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      // Redirect to login if not authenticated\n      void this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n}\n","import { inject, Injectable } from \"@angular/core\";\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from \"@angular/common/http\";\nimport { finalize, Observable } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\nimport { LoadingService } from \"../services/loading.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept<T>(\n    req: HttpRequest<T>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<T>> {\n    // Get the token from the AuthService (or other storage like localStorage)\n    const token = this.authService.getToken(); // Make sure to implement getToken() method\n    const loadingService = inject(LoadingService);\n\n    if (token) {\n      // Clone the request and add the authorization header\n      const clonedRequest = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      const url = new URL(req.urlWithParams, window.location.origin);\n      const queryParams = url.searchParams;\n      const isInfiniteScroll =\n        queryParams.has(\"page\") && queryParams.get(\"page\") !== \"0\";\n\n      if (!isInfiniteScroll) loadingService.setLoading(true);\n      return next.handle(clonedRequest).pipe(\n        finalize(() => {\n          // Stop loading when the request completes (success or error)\n          if (!isInfiniteScroll) loadingService.setLoading(false);\n        }),\n      );\n    }\n\n    // If there's no token, continue with the original request\n    return next.handle(req);\n  }\n}\n","import { Injectable, signal } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { LoginResponse } from \"../models/login-response.model \";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  private tokenKey = \"authToken\";\n  private fullnameKey = \"fullname\";\n  private _firstName = signal<string | null>(null);\n  firstName = this._firstName.asReadonly();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) {}\n\n  login(username: string, password: string): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(\n      `${environment.apiUrl}/public/auth/login`,\n      {\n        username,\n        password,\n      },\n    );\n  }\n\n  passwordRequest(username: string): Observable<unknown> {\n    return this.http.post<unknown>(\n      `${environment.apiUrl}/public/auth/password-request`,\n      { username },\n    );\n  }\n\n  passwordReset(password: string, token: string): Observable<unknown> {\n    return this.http.post<unknown>(\n      `${environment.apiUrl}/public/auth/password-reset`,\n      { password, token },\n    );\n  }\n\n  saveFullnameAndToken(fullname: string, token: string): void {\n    localStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.fullnameKey, fullname);\n  }\n\n  // Retrieve the token (from sessionStorage first, then fallback to localStorage)\n  getToken(): string | null {\n    return localStorage.getItem(this.tokenKey);\n  }\n\n  getFullname(): string | null {\n    return localStorage.getItem(this.fullnameKey);\n  }\n\n  // Check if the user is logged in by verifying if a token exists\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem(this.tokenKey);\n    this._firstName.set(this.getFullname());\n    return !!token;\n  }\n\n  // Optional: method to log out\n  logout(): void {\n    localStorage.removeItem(this.tokenKey);\n    localStorage.removeItem(this.fullnameKey);\n    this._firstName.set(null);\n    void this.router.navigate([\"/login\"]);\n  }\n\n  // Check if token exists and is not expired\n  /*\n  isTokenValid(url?: string): boolean {\n    // Skip token validation if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication, skipping token validation:', url);\n      return true;\n    }\n\n    const token = this.getToken();\n    if (!token) {\n      console.warn('No token found');\n      return false;\n    }\n\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      console.warn('Invalid token payload');\n      return false;\n    }\n\n    const expiryTime = payload.exp * 1000; // Convert to milliseconds\n    const currentTime = Date.now();\n    const isValid = currentTime < expiryTime;\n    console.log('Token validity:', isValid); // Debug: Log token validity\n    return isValid;\n  }\n\n  // Decode the token to get its payload\n  private decodeToken(token: string): any | null {\n    try {\n      const payloadPart = token.split('.')[1];\n      const decodedPayload = atob(payloadPart);\n      const parsedPayload = JSON.parse(decodedPayload);\n      console.log('Decoded token payload:', parsedPayload); // Debug: Log decoded payload\n      return parsedPayload;\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      return null;\n    }\n  }\n*/\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private snackBarService: SnackbarService, private router: Router, private authService: AuthService) {}\n\n  handleError(error: unknown) {\n    if (error instanceof HttpErrorResponse) {\n      // Check network connectivity\n      if (!navigator.onLine) {\n        this.snackBarService.showError('No internet connection');\n        return;\n      }\n\n      // Handle client-side errors\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showError(error.error.message);\n        return;\n      }\n\n      // Handle specific HTTP status codes\n      switch (error.status) {\n        case 401:\n          this.authService.logout();\n          this.snackBarService.showError('Unauthorized. Please enter your credentials.');\n          this.router.navigate(['/login']);\n          break;\n\n        case 403: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 423: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 404:\n          this.snackBarService.showError('Resource not found.');\n          break;\n\n        case 413:\n          this.snackBarService.showError('File too large.');\n          break;\n        case 500: {\n          const errorMessage = error.error?.message || 'Please try again later.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n          break;\n        }\n        default: {\n          console.error('An error occurred:', error);\n          const errorMessage = error.error?.message || 'An unexpected error occurred.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n        }\n      }\n\n      // Log the full error for debugging\n      console.error('Full error details:', {\n        status: error.status,\n        statusText: error.statusText,\n        url: error.url,\n        error: error.error,\n      });\n    } else {\n      // Handle client-side/non-HTTP errors\n      console.error('Client-side error:', error);\n      this.snackBarService.showError('An unexpected error occurred');\n    }\n  }\n}\n","// src/app/services/loading.service.ts\n\nimport { Injectable, signal } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LoadingService {\n  // Use a signal to track loading state\n  private _loading = signal(false);\n\n  // Expose a readonly version of the loading signal\n  public loading = this._loading.asReadonly();\n\n  /**\n   * Set the loading state\n   * @param isLoading Whether the application is loading\n   */\n  setLoading(isLoading: boolean): void {\n    this._loading.set(isLoading);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpEvent } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/product.model';\nimport { AuthService } from './auth.service';\nimport { PaginatedResponse } from '../models/paginate-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  /**\n   * Fetch products with pagination and search term\n   */\n  getProducts(page: number, size: number, searchTerm: string): Observable<InventoryItem[]> {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('search', searchTerm);\n\n    return this.http.get<PaginatedResponse<InventoryItem>>(`${this.apiUrl}/products`, { params }).pipe(map((response) => response.content));\n  }\n\n  /**\n   * Upload a photo for a specific product\n   */\n  uploadProductImage(productId: number, file: File): Observable<HttpEvent<InventoryItem>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<InventoryItem>(`${this.apiUrl}/products/${productId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n\n  /**\n   * Delete a photo for a specific product\n   */\n  deleteProductPhoto(productId: number): Observable<void> {\n    const url = `${this.apiUrl}/products/${productId}/photos`; // Full API endpoint\n    return this.http.delete<void>(url); // Use DELETE HTTP method\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PwaService {\n  private isPwa = new BehaviorSubject<boolean>(false);\n  isPwa$ = this.isPwa.asObservable();\n\n  updateValue(isPwa: boolean): void {\n    this.isPwa.next(isPwa);\n  }\n}\n","// src/app/services/search.service.ts\n\nimport { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SearchTableService {\n  private searchSubjects = new Map<string, Subject<string>>();\n\n  /**\n   * Gets or creates a search observable for a specific entity type\n   * @param entityType The entity type identifier (e.g., 'fish', 'user', etc.)\n   * @param debounceMs Debounce time in milliseconds (default: 300ms)\n   * @returns An observable that emits search query values\n   */\n  getSearchObservable(\n    entityType: string,\n    debounceMs = 300,\n  ): Observable<string> {\n    if (!this.searchSubjects.has(entityType)) {\n      this.searchSubjects.set(entityType, new Subject<string>());\n    }\n\n    return this.searchSubjects\n      .get(entityType)!\n      .pipe(debounceTime(debounceMs), distinctUntilChanged());\n  }\n\n  /**\n   * Updates the search query for a specific entity type\n   * @param entityType The entity type identifier\n   * @param query The search query string\n   */\n  updateSearchQuery(entityType: string, query: string): void {\n    if (!this.searchSubjects.has(entityType)) {\n      this.searchSubjects.set(entityType, new Subject<string>());\n    }\n\n    this.searchSubjects.get(entityType)!.next(query);\n  }\n\n  /**\n   * Clears search subject for an entity type\n   * @param entityType The entity type identifier\n   */\n  //clearSearch(entityType: string): void {\n  //  if (this.searchSubjects.has(entityType)) {\n  //    const subject = this.searchSubjects.get(entityType)!;\n  //    subject.next(\"\");\n  //  }\n  //}\n\n  /**\n   * Destroys the search subject for an entity type\n   * @param entityType The entity type identifier\n   */\n  destroySearch(entityType: string): void {\n    if (this.searchSubjects.has(entityType)) {\n      const subject = this.searchSubjects.get(entityType)!;\n      subject.complete();\n      this.searchSubjects.delete(entityType);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarRef, MatSnackBarVerticalPosition, TextOnlySnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  // Define standard styles\n  private styles = {\n    error: 'error-snackbar',\n    success: 'success-snackbar',\n    warning: 'warning-snackbar',\n    info: 'info-snackbar',\n  };\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  private showSnackBar(message: string, style?: 'error' | 'success' | 'warning' | 'info', duration: number = this.duration) {\n    // Close any existing snackbar\n    this.closeSnackBar();\n\n    // Get the appropriate style class\n    const panelClass = style ? this.styles[style] : undefined;\n\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: panelClass,\n    });\n\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n\n    return this.snackBarRef;\n  }\n\n  // Convenience methods for different types of messages\n  showError(message: string, duration?: number) {\n    return this.showSnackBar(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration?: number) {\n    return this.showSnackBar(message, 'success', duration);\n  }\n\n  showWarning(message: string, duration?: number) {\n    return this.showSnackBar(message, 'warning', duration);\n  }\n\n  showInfo(message: string, duration?: number) {\n    return this.showSnackBar(message, 'info', duration);\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: \"https://pffc-app-uat-latest.onrender.com/api\",\n};\n","import { AppComponent } from \"./app/app.component\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { provideAnimations } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app/app-routing.module\";\nimport { bootstrapApplication, BrowserModule } from \"@angular/platform-browser\";\nimport { GlobalErrorHandlerService } from \"./app/services/global-error-handler.service\";\nimport { ErrorHandler, importProvidersFrom, isDevMode } from \"@angular/core\";\nimport {\n  HTTP_INTERCEPTORS,\n  provideHttpClient,\n  withInterceptorsFromDi,\n} from \"@angular/common/http\";\nimport { RouterModule } from \"@angular/router\";\nimport { AuthInterceptor } from \"./app/interceptors/auth.interceptor\";\nimport { provideServiceWorker } from \"@angular/service-worker\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      RouterModule,\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      MatSortModule,\n    ),\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimations(),\n    provideServiceWorker(\"ngsw-worker.js\", {\n      enabled: !isDevMode(),\n      registrationStrategy: \"registerWhenStable:30000\",\n    }),\n    importProvidersFrom(MatNativeDateModule),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","HomeComponent","LoginComponent","LogoutComponent","ProductsComponent","AuthGuard","PasswordRequestComponent","PasswordResetComponent","SidebarLayoutComponent","FishListComponent","CategoryListComponent","UserListComponent","HelpComponent","ProfileComponent","DataComponent","VendorListComponent","HarvestTypeListComponent","UnitTypeListComponent","PurchaseProductListComponent","OriginListComponent","routes","path","component","children","title","canActivate","redirectTo","AppRoutingModule","forRoot","imports","i1","exports","isDevMode","RouterOutlet","CommonModule","MatToolbarModule","MatIconModule","environment","LoadingIndicatorComponent","AppComponent","constructor","meta","swUpdate","apiUrl","showWarning","includes","alert","ngOnInit","setTitle","addTags","name","content","checkForUpdate","isEnabled","then","isUpdateAvailable","confirmUpdate","confirm","activateUpdate","window","location","reload","catch","error","console","i0","ɵɵdirectiveInject","Title","Meta","i2","SwUpdate","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","styles","changeDetection","MatButton","ɵɵlistener","AppInstallPromptComponent_Conditional_0_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","promptInstall","ɵɵtext","AppInstallPromptComponent_Conditional_2_Template_button_click_1_listener","_r3","showIosInstructions","AppInstallPromptComponent","pwaService","snackbarService","platform","deferredPrompt","isPwa$","isPwa","isRunningAsPWA","isIosButNotPwa","isIOS","plat","beforeInstallPromptHandler","event","preventDefault","updateValue","addEventListener","ngOnDestroy","removeEventListener","prompt","userChoice","showInfo","userAgent","navigator","toLowerCase","test","IOS","isStandalone","matchMedia","matches","isIOSStandalone","isFullscreen","innerHeight","screen","height","PwaService","SnackbarService","i3","Platform","consts","AppInstallPromptComponent_Template","ɵɵtemplate","AppInstallPromptComponent_Conditional_0_Template","AppInstallPromptComponent_Conditional_2_Template","ɵɵconditional","ɵɵpipeBind1","i4","AsyncPipe","inject","MAT_DIALOG_DATA","MatDialogModule","MatDialogRef","MatFormFieldModule","MatInputModule","MatButtonModule","FormBuilder","ReactiveFormsModule","Validators","CategoryDialogComponent","dialogTitle","data","dialogRef","fb","initForm","mode","onCancel","close","onSubmit","categoryForm","valid","id","category","getRawValue","group","categoryName","required","CategoryDialogComponent_Template","CategoryDialogComponent_Template_form_ngSubmit_2_listener","CategoryDialogComponent_mat_error_8_Template","CategoryDialogComponent_Template_button_click_10_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","tmp_2_0","get","hasError","invalid","ɵɵtextInterpolate1","NgIf","MatDialogTitle","MatDialogActions","MatDialogContent","MatFormField","MatLabel","MatError","MatInput","i5","i6","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","effect","signal","MatTableDataSource","MatTableModule","MatCheckboxModule","MatDialog","MatTooltipModule","SelectionModel","ConfirmationService","MatSort","MatSortModule","Subject","takeUntil","CategoryService","SearchTableService","CategoryListComponent_mat_icon_10_Template_mat_icon_click_0_listener","_r2","ctx_r2","searchInput_r4","ɵɵreference","clearSearch","CategoryListComponent_th_21_Template_mat_checkbox_change_1_listener","$event","_r5","toggleAllRows","selection","hasValue","isAllSelected","CategoryListComponent_td_22_Template_mat_checkbox_change_1_listener","row_r7","_r6","$implicit","toggle","CategoryListComponent_td_22_Template_mat_checkbox_click_1_listener","stopPropagation","isSelected","category_r8","category_r9","CategoryListComponent_td_31_Template_button_click_1_listener","category_r11","_r10","openEditDialog","CategoryListComponent_td_31_Template_button_click_4_listener","deleteCategory","searchQuery","dataSource","displayedColumns","ENTITY_TYPE","destroy$","categoryService","dialog","snackBarService","confirmationService","searchTableService","updateTable","categories","configureDataSource","setupSearch","ngAfterViewInit","configureSort","next","complete","destroySearch","sort","sortingDataAccessor","sortHeaderId","value","getSearchObservable","pipe","subscribe","searchValue","set","filter","trim","filterPredicate","searchStr","toString","numSelected","selected","length","numRows","clear","select","openAddDialog","open","width","afterClosed","result","createCategory","showSuccess","update","updateCategory","confirmDeletion","confirmed","deleteSelectedCategories","selectedIds","map","showError","confirmBulkDeletion","deleteManyCategory","onSearch","target","updateSearchQuery","inputElement","focus","viewQuery","CategoryListComponent_Query","CategoryListComponent_Template_input_input_8_listener","CategoryListComponent_mat_icon_10_Template","CategoryListComponent_Template_button_click_11_listener","CategoryListComponent_Template_button_click_14_listener","ɵɵelementContainerStart","CategoryListComponent_th_21_Template","CategoryListComponent_td_22_Template","CategoryListComponent_th_24_Template","CategoryListComponent_td_25_Template","CategoryListComponent_th_27_Template","CategoryListComponent_td_28_Template","CategoryListComponent_th_30_Template","CategoryListComponent_td_31_Template","CategoryListComponent_tr_32_Template","CategoryListComponent_tr_33_Template","CategoryListComponent_div_34_Template","CategoryListComponent_div_35_Template","filteredData","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatCheckbox","MatIcon","MatIconButton","MatMiniFabButton","MatToolbar","i7","MatTooltip","i8","MatSortHeader","computed","HttpClient","http","baseUrl","categoryList","loadAllCategories","getCategoryById","find","post","newCategory","list","categoryUpdate","patch","updatedCategory","delete","ids","body","factory","ɵfac","providedIn","ConfirmationDialogComponent","confirmButtonText","cancelButtonText","confirmButtonColor","onConfirm","ConfirmationDialogComponent_Template","ConfirmationDialogComponent_Template_button_click_5_listener","ConfirmationDialogComponent_Template_button_click_7_listener","message","ɵɵsanitizeHtml","disableClose","itemName","count","itemType","DataComponent_mat_icon_10_Template_mat_icon_click_0_listener","item_r5","item_r6","description","DataComponent_td_21_Template_button_click_1_listener","item_r8","_r7","navigateTo","route","router","DATA","navigate","Router","DataComponent_Query","DataComponent_Template_input_input_8_listener","DataComponent_mat_icon_10_Template","DataComponent_th_14_Template","DataComponent_td_15_Template","DataComponent_th_17_Template","DataComponent_td_18_Template","DataComponent_th_20_Template","DataComponent_td_21_Template","DataComponent_tr_22_Template","DataComponent_tr_23_Template","DataComponent_div_24_Template","DataComponent_div_25_Template","FishDialogComponent","fishForm","fish","disabled","FishDialogComponent_Template","FishDialogComponent_Template_form_ngSubmit_2_listener","FishDialogComponent_mat_error_8_Template","FishDialogComponent_mat_error_13_Template","FishDialogComponent_Template_button_click_15_listener","tmp_3_0","FishService","FishListComponent_th_19_Template_mat_checkbox_change_1_listener","FishListComponent_td_20_Template_mat_checkbox_change_1_listener","row_r4","FishListComponent_td_20_Template_mat_checkbox_click_1_listener","fish_r5","fish_r6","fish_r7","FishListComponent_td_32_Template_button_click_1_listener","fish_r9","_r8","FishListComponent_td_32_Template_button_click_4_listener","deleteFish","fishService","fishes","createFish","updateFish","deleteSelectedFishes","deleteManyFish","FishListComponent_Query","FishListComponent_Template_input_input_8_listener","FishListComponent_Template_button_click_9_listener","FishListComponent_Template_button_click_12_listener","FishListComponent_th_19_Template","FishListComponent_td_20_Template","FishListComponent_th_22_Template","FishListComponent_td_23_Template","FishListComponent_th_25_Template","FishListComponent_td_26_Template","FishListComponent_th_28_Template","FishListComponent_td_29_Template","FishListComponent_th_31_Template","FishListComponent_td_32_Template","FishListComponent_tr_33_Template","FishListComponent_tr_34_Template","FishListComponent_tr_35_Template","FishListComponent_div_36_Template","fishList","loadAllFish","getFishById","newFish","fishUpdate","updatedFish","HarvestTypeDialogComponent","harvestTypeForm","harvestType","HarvestTypeDialogComponent_Template","HarvestTypeDialogComponent_Template_form_ngSubmit_2_listener","HarvestTypeDialogComponent_mat_error_8_Template","HarvestTypeDialogComponent_Template_button_click_10_listener","HarvestTypeService","HarvestTypeListComponent_mat_icon_10_Template_mat_icon_click_0_listener","HarvestTypeListComponent_th_21_Template_mat_checkbox_change_1_listener","HarvestTypeListComponent_td_22_Template_mat_checkbox_change_1_listener","HarvestTypeListComponent_td_22_Template_mat_checkbox_click_1_listener","harvestType_r8","harvestType_r9","HarvestTypeListComponent_td_31_Template_button_click_1_listener","harvestType_r11","HarvestTypeListComponent_td_31_Template_button_click_4_listener","deleteHarvestType","harvestTypeService","harvestTypes","createHarvestType","updateHarvestType","deleteManyHarvestType","HarvestTypeListComponent_Query","HarvestTypeListComponent_Template_input_input_8_listener","HarvestTypeListComponent_mat_icon_10_Template","HarvestTypeListComponent_Template_button_click_11_listener","HarvestTypeListComponent_Template_button_click_14_listener","HarvestTypeListComponent_th_21_Template","HarvestTypeListComponent_td_22_Template","HarvestTypeListComponent_th_24_Template","HarvestTypeListComponent_td_25_Template","HarvestTypeListComponent_th_27_Template","HarvestTypeListComponent_td_28_Template","HarvestTypeListComponent_th_30_Template","HarvestTypeListComponent_td_31_Template","HarvestTypeListComponent_tr_32_Template","HarvestTypeListComponent_tr_33_Template","HarvestTypeListComponent_div_34_Template","HarvestTypeListComponent_div_35_Template","harvestTypeList","loadAllHarvestTypes","getHarvestTypeById","newHarvestType","harvestTypeUpdate","updatedHarvestType","MatCard","MatCardContent","HelpComponent_Template","authService","username","getFullname","page","logout","AuthService","HomeComponent_Template","MatProgressSpinnerModule","LoadingService","loadingService","LoadingIndicatorComponent_Template","LoadingIndicatorComponent_div_0_Template","loading","MatProgressSpinner","catchError","throwError","MatCardModule","ctx_r0","errorMessage","cdr","formBuilder","hidePassword","loginForm","password","onLogin","login","status","markForCheck","firstName","lastName","token","saveFullnameAndToken","togglePasswordVisibility","ChangeDetectorRef","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_7_listener","LoginComponent_mat_error_16_Template","LoginComponent_Template_button_click_23_listener","LoginComponent_mat_error_26_Template","LoginComponent_span_32_Template","LoginComponent_div_33_Template","LoginComponent_div_38_Template","LoginComponent_div_39_Template","tmp_1_0","tmp_4_0","ɵɵpureFunction0","_c0","MatPrefix","MatSuffix","i9","RouterLink","LogoutComponent_Template","OriginDialogComponent","originForm","origin","originName","OriginDialogComponent_Template","OriginDialogComponent_Template_form_ngSubmit_2_listener","OriginDialogComponent_mat_error_8_Template","OriginDialogComponent_Template_button_click_10_listener","OriginService","OriginListComponent_mat_icon_10_Template_mat_icon_click_0_listener","OriginListComponent_th_21_Template_mat_checkbox_change_1_listener","OriginListComponent_td_22_Template_mat_checkbox_change_1_listener","OriginListComponent_td_22_Template_mat_checkbox_click_1_listener","origin_r8","origin_r9","OriginListComponent_td_31_Template_button_click_1_listener","origin_r11","OriginListComponent_td_31_Template_button_click_4_listener","deleteOrigin","originService","origins","createOrigin","updateOrigin","deleteManyOrigin","OriginListComponent_Query","OriginListComponent_Template_input_input_8_listener","OriginListComponent_mat_icon_10_Template","OriginListComponent_Template_button_click_11_listener","OriginListComponent_Template_button_click_14_listener","OriginListComponent_th_21_Template","OriginListComponent_td_22_Template","OriginListComponent_th_24_Template","OriginListComponent_td_25_Template","OriginListComponent_th_27_Template","OriginListComponent_td_28_Template","OriginListComponent_th_30_Template","OriginListComponent_td_31_Template","OriginListComponent_tr_32_Template","OriginListComponent_tr_33_Template","OriginListComponent_div_34_Template","OriginListComponent_div_35_Template","originList","loadAllOrigins","getOriginById","newOrigin","originUpdate","updatedOrigin","passwordRequestForm","passwordRequest","PasswordRequestComponent_Template","PasswordRequestComponent_Template_form_ngSubmit_7_listener","PasswordRequestComponent_mat_error_18_Template","mismatchedPassword","hideConfirmPassword","passwordResetForm","minLength","specialCharacterValidator","confirmPassword","valueChanges","paramMap","params","passwordReset","control","hasSpecialCharacter","noSpecialCharacter","toggleConfirmPasswordVisibility","ActivatedRoute","PasswordResetComponent_Template","PasswordResetComponent_Template_form_ngSubmit_7_listener","PasswordResetComponent_Template_button_click_18_listener","PasswordResetComponent_mat_error_21_Template","PasswordResetComponent_Template_button_click_28_listener","PasswordResetComponent_mat_error_31_Template","PasswordResetComponent_div_33_Template","PasswordResetComponent_div_34_Template","PasswordResetComponent_div_35_Template","tmp_6_0","tmp_7_0","errors","tmp_8_0","i10","i11","ProfileComponent_Template","BehaviorSubject","FormControl","FormsModule","productService","size","searchTerm","showRelevantItems","showSixtySales","showWoh","showYield","showWithImages","originFilter","packSizeFilter","buyerFilter","minCompCost","minCompCostControl","uniqueOrigins","uniquePackSizes","uniqueBuyers","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","ProductService","ProductsComponent_Template","MatSelectModule","MatSlideToggleModule","harvestType_r1","origin_r2","category_r3","unitType_r4","unitTypeName","defaultBuyerUser_r5","ɵɵtextInterpolate2","PurchaseProductDialogComponent","productForm","formValues","postData","purchaseProductDescription","packSize","defaultCostPrice","harvestTypeId","shelfLife","isFixedPack","isActive","notes","isAllowLbs","rotationDays","defaultBuyerUserId","nonInventory","originId","categoryId","unitTypeId","patchData","purchaseProduct","min","defaultBuyerUser","unitType","PurchaseProductDialogComponent_Template","PurchaseProductDialogComponent_Template_form_ngSubmit_2_listener","PurchaseProductDialogComponent_mat_error_9_Template","PurchaseProductDialogComponent_mat_error_15_Template","PurchaseProductDialogComponent_mat_error_16_Template","PurchaseProductDialogComponent_mat_error_21_Template","PurchaseProductDialogComponent_mat_error_22_Template","PurchaseProductDialogComponent_mat_option_28_Template","PurchaseProductDialogComponent_mat_error_29_Template","PurchaseProductDialogComponent_mat_error_34_Template","PurchaseProductDialogComponent_mat_error_40_Template","PurchaseProductDialogComponent_mat_option_46_Template","PurchaseProductDialogComponent_mat_error_47_Template","PurchaseProductDialogComponent_mat_option_52_Template","PurchaseProductDialogComponent_mat_error_53_Template","PurchaseProductDialogComponent_mat_option_59_Template","PurchaseProductDialogComponent_mat_error_60_Template","PurchaseProductDialogComponent_mat_option_65_Template","PurchaseProductDialogComponent_mat_error_66_Template","PurchaseProductDialogComponent_Template_button_click_82_listener","tmp_5_0","tmp_9_0","tmp_10_0","tmp_12_0","tmp_14_0","unitTypes","tmp_16_0","defaultBuyerUsers","tmp_18_0","NgForOf","MatSelect","MatOption","MatSlideToggle","NumberValueAccessor","debounceTime","distinctUntilChanged","PurchaseProductService","PurchaseProductViewDialogComponent","UnitTypeService","UserService","InfiniteScrollDirective","PurchaseProductListComponent_mat_icon_10_Template_mat_icon_click_0_listener","PurchaseProductListComponent_th_21_Template_mat_checkbox_change_1_listener","PurchaseProductListComponent_td_22_Template_mat_checkbox_change_1_listener","product_r7","PurchaseProductListComponent_td_22_Template_mat_checkbox_click_1_listener","product_r8","product_r9","product_r10","product_r11","product_r12","product_r13","PurchaseProductListComponent_td_43_Template_button_click_1_listener","product_r15","_r14","openViewDialog","PurchaseProductListComponent_td_43_Template_button_click_4_listener","PurchaseProductListComponent_td_43_Template_button_click_7_listener","deletePurchaseProduct","searchInputSubject","purchaseProductService","unitTypeService","userService","purchaseProducts","loadAllUnitTypes","loadAllUsers","setSearchTerm","sortChange","setSortParameters","active","direction","getPropertyByPath","Date","getTime","onScroll","loadNextPage","users","createPurchaseProduct","updatePurchaseProduct","loadPurchaseProducts","deleteSelectedPurchaseProducts","product","deleteManyPurchaseProducts","obj","split","reduce","o","i","undefined","PurchaseProductListComponent_Query","PurchaseProductListComponent_Template_div_scrolled_0_listener","PurchaseProductListComponent_Template_input_input_8_listener","PurchaseProductListComponent_mat_icon_10_Template","PurchaseProductListComponent_Template_button_click_11_listener","PurchaseProductListComponent_Template_button_click_14_listener","PurchaseProductListComponent_th_21_Template","PurchaseProductListComponent_td_22_Template","PurchaseProductListComponent_th_24_Template","PurchaseProductListComponent_td_25_Template","PurchaseProductListComponent_th_27_Template","PurchaseProductListComponent_td_28_Template","PurchaseProductListComponent_th_30_Template","PurchaseProductListComponent_td_31_Template","PurchaseProductListComponent_th_33_Template","PurchaseProductListComponent_td_34_Template","PurchaseProductListComponent_th_36_Template","PurchaseProductListComponent_td_37_Template","PurchaseProductListComponent_th_39_Template","PurchaseProductListComponent_td_40_Template","PurchaseProductListComponent_th_42_Template","PurchaseProductListComponent_td_43_Template","PurchaseProductListComponent_tr_44_Template","PurchaseProductListComponent_tr_45_Template","PurchaseProductListComponent_div_46_Template","CurrencyPipe","HttpParams","purchaseProductsList","totalElements","total","totalPages","pages","currentPage","hasMoreData","pageSize","isLoading","currentSearchTerm","sortField","currentSortField","sortDirection","currentSortDirection","resetList","response","term","field","getPurchaseProductById","newPurchaseProduct","purchaseProductUpdate","updatePurchaseProductGetDto","purchaseProductGetDto","PurchaseProductViewDialogComponent_Template","PurchaseProductViewDialogComponent_Template_button_click_81_listener","MatSidenavModule","MatListModule","MatExpansionModule","MatDividerModule","name_r2","sidebarOpened","toggleSidebar","state","SidebarLayoutComponent_Query","SidebarLayoutComponent_Template_button_click_3_listener","SidebarLayoutComponent_span_11_Template","RouterLinkActive","MatSidenav","MatSidenavContainer","MatSidenavContent","MatNavList","MatListItem","MatListItemIcon","MatDivider","MatListItemTitle","MatAccordion","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","UnitTypeDialogComponent","unitTypeForm","UnitTypeDialogComponent_Template","UnitTypeDialogComponent_Template_form_ngSubmit_2_listener","UnitTypeDialogComponent_mat_error_8_Template","UnitTypeDialogComponent_Template_button_click_10_listener","UnitTypeListComponent_mat_icon_10_Template_mat_icon_click_0_listener","UnitTypeListComponent_th_21_Template_mat_checkbox_change_1_listener","UnitTypeListComponent_td_22_Template_mat_checkbox_change_1_listener","UnitTypeListComponent_td_22_Template_mat_checkbox_click_1_listener","unitType_r8","unitType_r9","UnitTypeListComponent_td_31_Template_button_click_1_listener","unitType_r11","UnitTypeListComponent_td_31_Template_button_click_4_listener","deleteUnitType","createUnitType","updateUnitType","deleteManyUnitType","UnitTypeListComponent_Query","UnitTypeListComponent_Template_input_input_8_listener","UnitTypeListComponent_mat_icon_10_Template","UnitTypeListComponent_Template_button_click_11_listener","UnitTypeListComponent_Template_button_click_14_listener","UnitTypeListComponent_th_21_Template","UnitTypeListComponent_td_22_Template","UnitTypeListComponent_th_24_Template","UnitTypeListComponent_td_25_Template","UnitTypeListComponent_th_27_Template","UnitTypeListComponent_td_28_Template","UnitTypeListComponent_th_30_Template","UnitTypeListComponent_td_31_Template","UnitTypeListComponent_tr_32_Template","UnitTypeListComponent_tr_33_Template","UnitTypeListComponent_div_34_Template","UnitTypeListComponent_div_35_Template","unitTypeList","getUnitTypeById","newUnitType","unitTypeUpdate","updatedUnitType","UserDialogComponent_div_10_mat_error_5_Template","userForm","user","lastLoginAt","ɵɵpipeBind2","loginCount","failedLoginAttemptsCount","UserDialogComponent","emailAddress","email","emailSignature","phoneNumber","phoneCarrier","preferredContact","isCommission","isLocked","UserDialogComponent_Template","UserDialogComponent_Template_form_ngSubmit_2_listener","UserDialogComponent_mat_error_9_Template","UserDialogComponent_div_10_Template","UserDialogComponent_mat_error_16_Template","UserDialogComponent_mat_error_21_Template","UserDialogComponent_mat_error_27_Template","UserDialogComponent_mat_error_28_Template","UserDialogComponent_div_55_Template","UserDialogComponent_Template_button_click_57_listener","DatePipe","UserViewDialogComponent","UserListComponent_mat_icon_10_Template_mat_icon_click_0_listener","UserListComponent_th_21_Template_mat_checkbox_change_1_listener","UserListComponent_td_22_Template_mat_checkbox_change_1_listener","UserListComponent_td_22_Template_mat_checkbox_click_1_listener","user_r8","user_r9","user_r10","getCommissionColor","user_r11","getUserCommission","getStatusColor","user_r12","getUserStatus","UserListComponent_td_40_Template_button_click_1_listener","user_r14","_r13","UserListComponent_td_40_Template_button_click_4_listener","UserListComponent_td_40_Template_button_click_7_listener","deleteUser","createUser","updateUser","deleteSelectedUsers","deleteManyUsers","UserListComponent_Query","UserListComponent_Template_input_input_8_listener","UserListComponent_mat_icon_10_Template","UserListComponent_Template_button_click_11_listener","UserListComponent_Template_button_click_14_listener","UserListComponent_th_21_Template","UserListComponent_td_22_Template","UserListComponent_th_24_Template","UserListComponent_td_25_Template","UserListComponent_th_27_Template","UserListComponent_td_28_Template","UserListComponent_th_30_Template","UserListComponent_td_31_Template","UserListComponent_th_33_Template","UserListComponent_td_34_Template","UserListComponent_th_36_Template","UserListComponent_td_37_Template","UserListComponent_th_39_Template","UserListComponent_td_40_Template","UserListComponent_tr_41_Template","UserListComponent_tr_42_Template","UserListComponent_div_43_Template","UserListComponent_div_44_Template","NgClass","getStatusText","getStatusClass","UserViewDialogComponent_Template","UserViewDialogComponent_Template_button_click_66_listener","userList","getUserById","newUser","userUpdate","updatedUser","MatDatepickerModule","MatNativeDateModule","VendorDialogComponent","vendorForm","dateValue","lastAgingRequestDate","timeValue","lastAgingRequestTime","hours","minutes","combinedDateTime","setHours","parseInt","lastAgingRequest","toISOString","vendor","formatTime","date","getHours","padStart","getMinutes","vendorName","address1","address2","city","zip","country","vendorRepName","vendorRepPhoneNumber","vendorRepEmailAddress","accountingName","accountingPhoneNumber","accountingEmailAddress","creditTermsDays","creditLimitAmount","vendorNotes","logisticsNotes","accountingNotes","patchValue","VendorDialogComponent_Template","VendorDialogComponent_Template_form_ngSubmit_2_listener","VendorDialogComponent_mat_error_9_Template","VendorDialogComponent_Template_button_click_107_listener","lastAgingPicker_r2","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","VendorService","VendorViewDialogComponent","VendorListComponent_mat_icon_10_Template_mat_icon_click_0_listener","VendorListComponent_th_21_Template_mat_checkbox_change_1_listener","VendorListComponent_td_22_Template_mat_checkbox_change_1_listener","VendorListComponent_td_22_Template_mat_checkbox_click_1_listener","vendor_r8","vendor_r9","VendorListComponent_td_31_Template_button_click_1_listener","vendor_r11","VendorListComponent_td_31_Template_button_click_4_listener","VendorListComponent_td_31_Template_button_click_7_listener","deleteVendor","vendorService","vendors","createVendor","updateVendor","deleteSelectedVendors","deleteManyVendors","VendorListComponent_Query","VendorListComponent_Template_input_input_8_listener","VendorListComponent_mat_icon_10_Template","VendorListComponent_Template_button_click_11_listener","VendorListComponent_Template_button_click_14_listener","VendorListComponent_th_21_Template","VendorListComponent_td_22_Template","VendorListComponent_th_24_Template","VendorListComponent_td_25_Template","VendorListComponent_th_27_Template","VendorListComponent_td_28_Template","VendorListComponent_th_30_Template","VendorListComponent_td_31_Template","VendorListComponent_tr_32_Template","VendorListComponent_tr_33_Template","VendorListComponent_div_34_Template","VendorListComponent_div_35_Template","VendorViewDialogComponent_Template","VendorViewDialogComponent_Template_button_click_106_listener","vendorList","loadAllVendors","getVendorById","newVendor","vendorUpdate","updatedVendor","isLoggedIn","ɵɵinject","finalize","AuthInterceptor","intercept","req","getToken","clonedRequest","clone","setHeaders","Authorization","url","URL","urlWithParams","queryParams","searchParams","isInfiniteScroll","has","setLoading","handle","tokenKey","fullnameKey","_firstName","asReadonly","fullname","localStorage","setItem","getItem","removeItem","HttpErrorResponse","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","statusText","_loading","getProducts","uploadProductImage","productId","file","formData","FormData","append","reportProgress","observe","deleteProductPhoto","searchSubjects","Map","entityType","debounceMs","query","subject","matSnackBar","duration","verticalPosition","horizontalPos","action","success","warning","info","showSnackBar","style","closeSnackBar","panelClass","snackBarRef","horizontalPosition","onAction","dismiss","MatSnackBar","production","MatSnackBarModule","MatMenuModule","provideAnimations","bootstrapApplication","BrowserModule","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","provideServiceWorker","providers","provide","useClass","multi","enabled","registrationStrategy","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}