{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/app-install-prompt/app-install-prompt.component.ts","./src/app/components/app-install-prompt/app-install-prompt.component.html","./src/app/components/categoty/category-dialog/category-dialog.component.ts","./src/app/components/categoty/category-dialog/category-dialog.component.html","./src/app/components/categoty/category-list/category-list.component.ts","./src/app/components/categoty/category-list/category-list.component.html","./src/app/components/categoty/category.service.ts","./src/app/components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/components/confirmation-dialog/confirmation-dialog.component.html","./src/app/components/confirmation-dialog/confirmation-service.service.ts","./src/app/components/data/data.component.ts","./src/app/components/data/data.component.html","./src/app/components/harvest-type/harvest-type-dialog/harvest-type-dialog.component.ts","./src/app/components/harvest-type/harvest-type-dialog/harvest-type-dialog.component.html","./src/app/components/harvest-type/harvest-type-list/harvest-type-list.component.ts","./src/app/components/harvest-type/harvest-type-list/harvest-type-list.component.html","./src/app/components/harvest-type/harvest-type.service.ts","./src/app/components/help/help.component.ts","./src/app/components/help/help.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/loading-indicator/loading-indicator.component.ts","./src/app/components/loading-indicator/loading-indicator.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/origin/origin-dialog/origin-dialog.component.ts","./src/app/components/origin/origin-dialog/origin-dialog.component.html","./src/app/components/origin/origin-list/origin-list.component.ts","./src/app/components/origin/origin-list/origin-list.component.html","./src/app/components/origin/origin.service.ts","./src/app/components/password-request/password-request.component.ts","./src/app/components/password-request/password-request.component.html","./src/app/components/password-reset/password-reset.component.ts","./src/app/components/password-reset/password-reset.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/purchase-product/purchase-product-dialog/purchase-product-dialog.component.ts","./src/app/components/purchase-product/purchase-product-dialog/purchase-product-dialog.component.html","./src/app/components/purchase-product/purchase-product-list/purchase-product-list.component.ts","./src/app/components/purchase-product/purchase-product-list/purchase-product-list.component.html","./src/app/components/purchase-product/purchase-product-service.ts","./src/app/components/purchase-product/purchase-product-view/purchase-product-view.component.ts","./src/app/components/purchase-product/purchase-product-view/purchase-product-view.component.html","./src/app/components/sidebar-layout/sidebar-layout.component.ts","./src/app/components/sidebar-layout/sidebar-layout.component.html","./src/app/components/unit-type/unit-type-dialog/unit-type-dialog.component.ts","./src/app/components/unit-type/unit-type-dialog/unit-type-dialog.component.html","./src/app/components/unit-type/unit-type-list/unit-type-list.component.ts","./src/app/components/unit-type/unit-type-list/unit-type-list.component.html","./src/app/components/unit-type/unit-type.service.ts","./src/app/components/user/user-dialog/user-dialog-component.ts","./src/app/components/user/user-dialog/user-dialog-component.html","./src/app/components/user/user-list/user-list-component.ts","./src/app/components/user/user-list/user-list-component.html","./src/app/components/user/user-view-dialog/user-view-dialog.component.ts","./src/app/components/user/user-view-dialog/user-view-dialog-component.html","./src/app/components/user/user.service.ts","./src/app/components/vendor/vendor-dialog/vendor-dialog.component.ts","./src/app/components/vendor/vendor-dialog/vendor-dialog.component.html","./src/app/components/vendor/vendor-list/vendor-list.component.ts","./src/app/components/vendor/vendor-list/vendor-list.component.html","./src/app/components/vendor/vendor-view-dialog/vendor-view-dialog.component.ts","./src/app/components/vendor/vendor-view-dialog/vendor-view-dialog.component.html","./src/app/components/vendor/vendor.service.ts","./src/app/directives/auto-mark-touched.directive.ts","./src/app/guards/auth.guard.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/loading.service.ts","./src/app/services/pwa.service.ts","./src/app/services/search-table.service.ts","./src/app/services/snackbar.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { LogoutComponent } from \"./components/logout/logout.component\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { PasswordRequestComponent } from \"./components/password-request/password-request.component\";\nimport { PasswordResetComponent } from \"./components/password-reset/password-reset.component\";\nimport { SidebarLayoutComponent } from \"./components/sidebar-layout/sidebar-layout.component\";\nimport { CategoryListComponent } from \"./components/categoty/category-list/category-list.component\";\nimport { UserListComponent } from \"./components/user/user-list/user-list-component\";\nimport { HelpComponent } from \"./components/help/help.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\";\nimport { DataComponent } from \"./components/data/data.component\";\nimport { VendorListComponent } from \"./components/vendor/vendor-list/vendor-list.component\";\nimport { HarvestTypeListComponent } from \"./components/harvest-type/harvest-type-list/harvest-type-list.component\";\nimport { UnitTypeListComponent } from \"./components/unit-type/unit-type-list/unit-type-list.component\";\nimport { PurchaseProductListComponent } from \"./components/purchase-product/purchase-product-list/purchase-product-list.component\";\nimport { OriginListComponent } from \"./components/origin/origin-list/origin-list.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SidebarLayoutComponent,\n    children: [\n      {\n        path: \"home\",\n        component: HomeComponent,\n        title: \"Home\",\n        canActivate: [AuthGuard],\n      },\n      { path: \"login\", component: LoginComponent, title: \"Login\" },\n      { path: \"logout\", component: LogoutComponent, title: \"Logout\" },\n      {\n        path: \"password-request\",\n        component: PasswordRequestComponent,\n        title: \"Password Request\",\n      },\n      {\n        path: \"password-reset/:token\",\n        component: PasswordResetComponent,\n        title: \"Password Reset\",\n      },\n      { path: \"help\", component: HelpComponent, title: \"Help\" },\n      {\n        path: \"categories\",\n        component: CategoryListComponent,\n        title: \"Categories\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"origins\",\n        component: OriginListComponent,\n        title: \"Origins\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"unit-types\",\n        component: UnitTypeListComponent,\n        title: \"Unit Types\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"users\",\n        component: UserListComponent,\n        title: \"Users\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"vendors\",\n        component: VendorListComponent,\n        title: \"Vendors\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"profile\",\n        component: ProfileComponent,\n        title: \"Profile\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"data\",\n        component: DataComponent,\n        title: \"Data\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"purchase-products\",\n        component: PurchaseProductListComponent,\n        title: \"Purchase Product\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"harvest-types\",\n        component: HarvestTypeListComponent,\n        title: \"Harvest Types\",\n        canActivate: [AuthGuard],\n      },\n\n      { path: \"**\", redirectTo: \"home\" }, // Wildcard route to handle unmatched paths, redirect to log  in\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  isDevMode,\n  OnInit,\n} from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { environment } from \"src/environments/environment\";\nimport { Meta, Title } from \"@angular/platform-browser\";\nimport { SwUpdate } from \"@angular/service-worker\";\nimport { LoadingIndicatorComponent } from \"./components/loading-indicator/loading-indicator.component\";\n\n@Component({\n  standalone: true,\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    RouterOutlet,\n    LoadingIndicatorComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n\n  //isOrderForm: boolean = false;\n\n  constructor(\n    private title: Title,\n    private meta: Meta,\n    private swUpdate: SwUpdate,\n  ) {\n    // Check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes(\"prod\")) {\n      this.showWarning = true;\n      alert(\"WARNING: Angular is in Dev mode but connected to production !!!\");\n    }\n  }\n\n  ngOnInit(): void {\n    this.title.setTitle(\"Pacific Fresh Fish Company App\");\n    this.meta.addTags([\n      {\n        name: \"description\",\n        content:\n          \"Pacific Fresh Fish Company application created by lb-advisors\",\n      },\n      { name: \"keywords\", content: \"PFF, lb-advisors, Allintel\" },\n      { name: \"robots\", content: \"index, follow\" },\n    ]);\n\n    this.checkForUpdate();\n  }\n\n  private checkForUpdate() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate\n        .checkForUpdate()\n        .then((isUpdateAvailable) => {\n          if (isUpdateAvailable) {\n            const confirmUpdate = confirm(\n              \"A new version is available. Do you want to load it?\",\n            );\n            if (confirmUpdate) {\n              this.swUpdate.activateUpdate().then(() => {\n                window.location.reload();\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error while checking for updates:\", error);\n        });\n    }\n  }\n}\n","<main>\n  <app-loading-indicator></app-loading-indicator>\n  <router-outlet></router-outlet>\n</main>\n","import { Platform } from \"@angular/cdk/platform\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { PwaService } from \"src/app/services/pwa.service\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\nimport { MatButton } from \"@angular/material/button\";\n\n@Component({\n  standalone: true,\n  selector: \"app-install-prompt\",\n  imports: [CommonModule, MatButton],\n  templateUrl: \"./app-install-prompt.component.html\",\n  styleUrls: [\"./app-install-prompt.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppInstallPromptComponent implements OnInit, OnDestroy {\n  beforeInstallPromptHandler?: (event: BeforeInstallPromptEvent) => void;\n  deferredPrompt: BeforeInstallPromptEvent | null = null;\n  isPwa$: Observable<boolean>;\n  isIosButNotPwa: boolean;\n  isPwa: boolean;\n  plat: boolean;\n\n  constructor(\n    private pwaService: PwaService,\n    private snackbarService: SnackbarService,\n    public platform: Platform,\n  ) {\n    this.isPwa$ = this.pwaService.isPwa$;\n    this.isPwa = this.isRunningAsPWA();\n    this.isIosButNotPwa = this.isIOS() && !this.isRunningAsPWA();\n    this.plat = this.isIOS();\n  }\n\n  ngOnInit() {\n    this.beforeInstallPromptHandler = (event: BeforeInstallPromptEvent) => {\n      // Prevent the mini-infobar from appearing\n      event.preventDefault();\n      this.deferredPrompt = event;\n      this.pwaService.updateValue(true);\n    };\n\n    window.addEventListener(\n      \"beforeinstallprompt\",\n      this.beforeInstallPromptHandler as EventListener,\n    );\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener(\n      \"beforeinstallprompt\",\n      this.beforeInstallPromptHandler as EventListener,\n    );\n    this.pwaService.updateValue(false);\n  }\n\n  promptInstall() {\n    if (this.deferredPrompt) {\n      // Store the prompt() promise and handle it\n      this.deferredPrompt\n        .prompt()\n        .then(() => {\n          // After prompt() resolves, then handle the user choice\n          return this.deferredPrompt?.userChoice;\n        })\n        .then(() => {\n          this.deferredPrompt = null;\n          this.pwaService.updateValue(false);\n        });\n    }\n  }\n\n  showIosInstructions() {\n    this.snackbarService.showInfo(\n      \"To install this web app on your device, tap the Menu button and then 'Add to Home Screen' button\",\n      20000,\n    );\n  }\n\n  private isIOS(): boolean {\n    const userAgent = window.navigator.userAgent.toLowerCase();\n    return /iphone|ipad|ipod|mac/.test(userAgent) || this.platform.IOS;\n  }\n\n  private isRunningAsPWA(): boolean {\n    const isStandalone = window.matchMedia(\n      \"(display-mode: standalone)\",\n    ).matches;\n    const isIOSStandalone = (navigator as Navigator & { standalone?: boolean })\n      .standalone;\n    const isFullscreen = window.innerHeight === screen.height;\n\n    return isStandalone || isIOSStandalone || isFullscreen;\n  }\n}\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  userChoice: Promise<{ outcome: \"accepted\" | \"dismissed\"; platform: string }>;\n\n  prompt(): Promise<void>;\n}\n","@if ( (isPwa$ | async) === true) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"promptInstall()\">\n    Install as an Application\n  </button>\n</div>\n} @else if (isIosButNotPwa) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"showIosInstructions()\">\n    Install as an Application\n  </button>\n</div>\n}","// src/app/components/category-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { CategoryGetDto } from \"../../../models/category.model\";\nimport { AutoMarkTouchedDirective } from \"../../../directives/auto-mark-touched.directive\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  category?: CategoryGetDto;\n}\n\n@Component({\n  selector: \"app-category-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    AutoMarkTouchedDirective,\n  ],\n  templateUrl: \"./category-dialog.component.html\",\n  styleUrls: [\"./category-dialog.component.css\"],\n})\nexport class CategoryDialogComponent implements OnInit {\n  categoryForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<CategoryDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New Category\" : \"Edit Category\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.categoryForm.valid) {\n      this.dialogRef.close({\n        id: this.data.category?.id,\n        ...this.categoryForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.categoryForm = this.fb.group({\n      categoryName: [\n        this.data.category?.categoryName || \"\",\n        [Validators.required],\n      ],\n    });\n  }\n}\n","<!-- src/app/components/category-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"categoryForm\" [formGroup]=\"categoryForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"categoryName\" matInput placeholder=\"Enter category name\">\n      <mat-error *ngIf=\"categoryForm.get('categoryName')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"categoryForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/category-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  CategoryGetDto,\n  CategoryPatchDto,\n  CategoryPostDto,\n} from \"../../../models/category.model\";\nimport { CategoryDialogComponent } from \"../category-dialog/category-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { CategoryService } from \"../category.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\n\n@Component({\n  selector: \"app-category-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./category-list.component.html\",\n  styleUrls: [\"./category-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<CategoryGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"name\", \"actions\"];\n  selection = new SelectionModel<CategoryGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"category\";\n  private destroy$ = new Subject<void>();\n\n  private categoryService = inject(CategoryService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the categoryes signal changes\n    effect(() => {\n      this.updateTable(this.categoryService.categories());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadCategoryes() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: CategoryGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof CategoryGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (\n      category: CategoryGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        category.id.toString().includes(searchStr) ||\n        category.categoryName.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(CategoryDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: CategoryPostDto) => {\n        if (result) {\n          this.categoryService.createCategory(result);\n          this.snackBarService.showSuccess(\"Category added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(category: CategoryGetDto): void {\n    const dialogRef = this.dialog.open(CategoryDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", category },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: CategoryPatchDto = {\n            categoryName: result.categoryName,\n          };\n\n          this.categoryService.updateCategory(category.id, update);\n          this.snackBarService.showSuccess(\"Category updated successfully\");\n        }\n      });\n  }\n\n  deleteCategory(category: CategoryGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`category \"${category.categoryName}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.categoryService.deleteCategory(category.id);\n          this.snackBarService.showSuccess(\"Category deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedCategories(): void {\n    const selectedIds = this.selection.selected.map((category) => category.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No category selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"category\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.categoryService.deleteManyCategory(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected category deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n\n  // Function to update table data\n  private updateTable(categories: CategoryGetDto[]): void {\n    this.dataSource.data = categories;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/Category-list/unit-type-list.component.html -->\n\n<div>\n  <mat-toolbar color=\"primary\">\n    <span>Categories</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new Category\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedCategories()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"categoryName\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let category\" mat-cell> {{ category.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header=\"categoryName\"> Name</th>\n        <td *matCellDef=\"let category\" mat-cell> {{ category.categoryName }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let category\" mat-cell>\n          <button (click)=\"openEditDialog(category)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteCategory(category)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns ; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No Category data available</p>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  CategoryGetDto,\n  CategoryPatchDto,\n  CategoryPostDto,\n} from \"../../models/category.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CategoryService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/categories`;\n\n  // State signals\n  private categoryList = signal<CategoryGetDto[]>([]);\n\n  // Exposed computed signals\n  public categories = computed(() => this.categoryList());\n\n  constructor() {\n    // Load category data immediately when service is injected\n    this.loadAllCategories();\n  }\n\n  /**\n   * Load all category from the API and update the signal\n   */\n  loadAllCategories(): void {\n    this.http.get<CategoryGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.categoryList.set(data),\n    });\n  }\n\n  /**\n   * Get a single category by ID\n   */\n  getCategoryById(id: number): CategoryGetDto | undefined {\n    return this.categoryList().find((category) => category.id === id);\n  }\n\n  /**\n   * Create a new category\n   */\n  createCategory(category: CategoryPostDto): void {\n    this.http.post<CategoryGetDto>(this.baseUrl, category).subscribe({\n      next: (newCategory) => {\n        // Update the signal with the new category\n        this.categoryList.update((list) => [...list, newCategory]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing category\n   */\n  updateCategory(id: number, categoryUpdate: CategoryPatchDto): void {\n    this.http\n      .patch<CategoryGetDto>(`${this.baseUrl}/${id}`, categoryUpdate)\n      .subscribe({\n        next: (updatedCategory) => {\n          // Update the specific category in the list\n          this.categoryList.update((list) =>\n            list.map((category) =>\n              category.id === id ? updatedCategory : category,\n            ),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a category by ID\n   */\n  deleteCategory(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted category from the list\n        this.categoryList.update((list) =>\n          list.filter((category) => category.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple category by IDs\n   */\n  deleteManyCategory(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted category from the list\n          this.categoryList.update((list) =>\n            list.filter((category) => !ids.includes(category.id)),\n          );\n        },\n      });\n  }\n}\n","// src/app/components/confirmation-dialog/confirmation-dialog.component.ts\n\nimport { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\n\nexport interface ConfirmationDialogData {\n  title: string;\n  message: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  confirmButtonColor?: \"primary\" | \"accent\" | \"warn\";\n}\n\n@Component({\n  selector: \"app-confirmation-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmationDialogComponent {\n  data: ConfirmationDialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<ConfirmationDialogComponent>);\n\n  constructor() {\n    // Set default values if not provided\n    this.data.confirmButtonText = this.data.confirmButtonText || \"Confirm\";\n    this.data.cancelButtonText = this.data.cancelButtonText || \"Cancel\";\n    this.data.confirmButtonColor = this.data.confirmButtonColor || \"warn\";\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n","<!-- src/app/components/confirmation-dialog/confirmation-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ data.title }}</h2>\n\n<mat-dialog-content>\n  <p [innerHTML]=\"data.message\"></p>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"onCancel()\" mat-button>\n    {{ data.cancelButtonText }}\n  </button>\n  <button\n    (click)=\"onConfirm()\"\n    [color]=\"data.confirmButtonColor\"\n    mat-raised-button>\n    {{ data.confirmButtonText }}\n  </button>\n</mat-dialog-actions>\n","// src/app/services/confirmation.service.ts\n\nimport { inject, Injectable } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { Observable } from \"rxjs\";\nimport {\n  ConfirmationDialogComponent,\n  ConfirmationDialogData,\n} from \"./confirmation-dialog.component\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ConfirmationService {\n  private dialog = inject(MatDialog);\n\n  /**\n   * Opens a confirmation dialog\n   * @param data Configuration data for the dialog\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirm(data: ConfirmationDialogData): Observable<boolean | undefined> {\n    const dialogRef: MatDialogRef<ConfirmationDialogComponent, boolean> =\n      this.dialog.open(ConfirmationDialogComponent, {\n        width: \"400px\",\n        disableClose: true,\n        data,\n      });\n\n    return dialogRef.afterClosed();\n  }\n\n  /**\n   * Convenience method for delete confirmations\n   * @param itemName The name of the item being deleted\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirmDeletion(\n    itemName: string = \"this item\",\n  ): Observable<boolean | undefined> {\n    return this.confirm({\n      title: \"Confirm Deletion\",\n      message: `Are you sure you want to delete ${itemName}? This action cannot be undone.`,\n      confirmButtonText: \"Delete\",\n      confirmButtonColor: \"warn\",\n    });\n  }\n\n  /**\n   * Convenience method for bulk delete confirmations\n   * @param count The number of items being deleted\n   * @param itemType The type of items being deleted (e.g., 'fish', 'records')\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirmBulkDeletion(\n    count: number,\n    itemType: string = \"items\",\n  ): Observable<boolean | undefined> {\n    return this.confirm({\n      title: \"Confirm Bulk Deletion\",\n      message: `Are you sure you want to delete ${count} ${itemType}? This action cannot be undone.`,\n      confirmButtonText: \"Delete All\",\n      confirmButtonColor: \"warn\",\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Router } from \"@angular/router\";\n\n// Interface for our data structure\ninterface DataItem {\n  name: string;\n  description: string;\n  route: string;\n}\n\n@Component({\n  selector: \"app-data\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./data.component.html\",\n  styleUrls: [\"./data.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<DataItem>([]);\n  displayedColumns: string[] = [\"name\", \"description\", \"actions\"];\n  searchQuery = signal<string>(\"\");\n\n  // Hard-coded data array\n  private readonly DATA: DataItem[] = [\n    {\n      name: \"Customers\",\n      description: \"List of customers - not implemented yet\",\n      route: \"/customers\",\n    },\n    {\n      name: \"Vendors\",\n      description: \"List of vendors\",\n      route: \"/vendors\",\n    },\n    {\n      name: \"Purchase Products\",\n      description: \"List of purchase products\",\n      route: \"/purchase-products\",\n    },\n    {\n      name: \"Sale products\",\n      description: \"List of sale products - not implemented yet\",\n      route: \"/sales-products\",\n    },\n    {\n      name: \"Category\",\n      description: \"List of categories\",\n      route: \"/categories\",\n    },\n    {\n      name: \"Origin\",\n      description: \"List of origins\",\n      route: \"/origins\",\n    },\n    {\n      name: \"Harvest Type\",\n      description: \"List of harvest types\",\n      route: \"/harvest-types\",\n    },\n  ];\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.dataSource.data = this.DATA;\n    this.configureDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.configureSort();\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: DataItem,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof DataItem];\n      return value.toLowerCase();\n    };\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    this.dataSource.filterPredicate = (data: DataItem, filter: string) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        data.name.toLowerCase().includes(searchStr) ||\n        data.description.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /**\n   * Navigate to the specified route\n   */\n  navigateTo(route: string): void {\n    void this.router.navigate([route]);\n  }\n\n  /**\n   * Handle search input changes\n   */\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchQuery.set(value);\n    this.dataSource.filter = value.trim().toLowerCase();\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <span>Data Explorer</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"name\" matSortDirection=\"asc\">\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Name</th>\n        <td *matCellDef=\"let item\" mat-cell>{{ item.name }}</td>\n      </ng-container>\n\n      <!-- Description Column -->\n      <ng-container matColumnDef=\"description\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Description</th>\n        <td *matCellDef=\"let item\" mat-cell>{{ item.description }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell>Actions</th>\n        <td *matCellDef=\"let item\" class=\"action-buttons\" mat-cell>\n          <button (click)=\"navigateTo(item.route)\" color=\"primary\" mat-icon-button matTooltip=\"View\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" class=\"data-row\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No data available</p>\n  </div>\n</div>\n","// src/app/components/harvestType-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { HarvestTypeGetDto } from \"../../../models/harvest-type.model\";\nimport { AutoMarkTouchedDirective } from \"../../../directives/auto-mark-touched.directive\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  harvestType?: HarvestTypeGetDto;\n}\n\n@Component({\n  selector: \"app-harvestType-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    AutoMarkTouchedDirective,\n  ],\n  templateUrl: \"./harvest-type-dialog.component.html\",\n  styleUrls: [\"./harvest-type-dialog.component.css\"],\n})\nexport class HarvestTypeDialogComponent implements OnInit {\n  harvestTypeForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<HarvestTypeDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New HarvestType\" : \"Edit HarvestType\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.harvestTypeForm.valid) {\n      this.dialogRef.close({\n        id: this.data.harvestType?.id,\n        ...this.harvestTypeForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.harvestTypeForm = this.fb.group({\n      harvestType: [\n        this.data.harvestType?.harvestType || \"\",\n        [Validators.required],\n      ],\n    });\n  }\n}\n","<!-- src/app/components/harvestType-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"harvestTypeForm\" [formGroup]=\"harvestTypeForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"harvestType\" matInput placeholder=\"Enter name\">\n      <mat-error *ngIf=\"harvestTypeForm.get('harvestType')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"harvestTypeForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/harvestType-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport { HarvestTypeDialogComponent } from \"../harvest-type-dialog/harvest-type-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { HarvestTypeService } from \"../harvest-type.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\nimport {\n  HarvestTypeGetDto,\n  HarvestTypePatchDto,\n  HarvestTypePostDto,\n} from \"../../../models/harvest-type.model\";\n\n@Component({\n  selector: \"app-harvestType-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./harvest-type-list.component.html\",\n  styleUrls: [\"./harvest-type-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HarvestTypeListComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<HarvestTypeGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"name\", \"actions\"];\n  selection = new SelectionModel<HarvestTypeGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"harvestType\";\n  private destroy$ = new Subject<void>();\n\n  private harvestTypeService = inject(HarvestTypeService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    effect(() => {\n      this.updateTable(this.harvestTypeService.harvestTypes());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadHarvestTypees() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: HarvestTypeGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof HarvestTypeGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (\n      harvestType: HarvestTypeGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        harvestType.id.toString().includes(searchStr) ||\n        harvestType.harvestType.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(HarvestTypeDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: HarvestTypePostDto) => {\n        if (result) {\n          this.harvestTypeService.createHarvestType(result);\n          this.snackBarService.showSuccess(\"HarvestType added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(harvestType: HarvestTypeGetDto): void {\n    const dialogRef = this.dialog.open(HarvestTypeDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", harvestType },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: HarvestTypePatchDto = {\n            harvestType: result.harvestType,\n          };\n\n          this.harvestTypeService.updateHarvestType(harvestType.id, update);\n          this.snackBarService.showSuccess(\"HarvestType updated successfully\");\n        }\n      });\n  }\n\n  deleteHarvestType(harvestType: HarvestTypeGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`harvestType \"${harvestType.harvestType}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.harvestTypeService.deleteHarvestType(harvestType.id);\n          this.snackBarService.showSuccess(\"HarvestType deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedCategories(): void {\n    const selectedIds = this.selection.selected.map(\n      (harvestType) => harvestType.id,\n    );\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No harvestType selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"harvestType\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.harvestTypeService.deleteManyHarvestType(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected harvestType deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n\n  // Function to update table data\n  private updateTable(categories: HarvestTypeGetDto[]): void {\n    this.dataSource.data = categories;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/HarvestType-list/unit-type-list.component.html -->\n\n<div>\n  <mat-toolbar color=\"primary\">\n    <span>Harvest Types</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new HarvestType\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedCategories()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"harvestType\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let harvestType\" mat-cell> {{ harvestType.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header=\"harvestType\"> Name</th>\n        <td *matCellDef=\"let harvestType\" mat-cell> {{ harvestType.harvestType }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let harvestType\" mat-cell>\n          <button (click)=\"openEditDialog(harvestType)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteHarvestType(harvestType)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns ; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No HarvestType data available</p>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  HarvestTypeGetDto,\n  HarvestTypePatchDto,\n  HarvestTypePostDto,\n} from \"../../models/harvest-type.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HarvestTypeService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/harvest-types`;\n\n  // State signals\n  private harvestTypeList = signal<HarvestTypeGetDto[]>([]);\n\n  // Exposed computed signals\n  public harvestTypes = computed(() => this.harvestTypeList());\n\n  constructor() {\n    // Load harvestType data immediately when service is injected\n    this.loadAllHarvestTypes();\n  }\n\n  /**\n   * Load all harvestType from the API and update the signal\n   */\n  loadAllHarvestTypes(): void {\n    this.http.get<HarvestTypeGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.harvestTypeList.set(data),\n    });\n  }\n\n  /**\n   * Get a single harvestType by ID\n   */\n  getHarvestTypeById(id: number): HarvestTypeGetDto | undefined {\n    return this.harvestTypeList().find((harvestType) => harvestType.id === id);\n  }\n\n  /**\n   * Create a new harvestType\n   */\n  createHarvestType(harvestType: HarvestTypePostDto): void {\n    this.http.post<HarvestTypeGetDto>(this.baseUrl, harvestType).subscribe({\n      next: (newHarvestType) => {\n        // Update the signal with the new harvestType\n        this.harvestTypeList.update((list) => [...list, newHarvestType]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing harvestType\n   */\n  updateHarvestType(id: number, harvestTypeUpdate: HarvestTypePatchDto): void {\n    this.http\n      .patch<HarvestTypeGetDto>(`${this.baseUrl}/${id}`, harvestTypeUpdate)\n      .subscribe({\n        next: (updatedHarvestType) => {\n          // Update the specific harvestType in the list\n          this.harvestTypeList.update((list) =>\n            list.map((harvestType) =>\n              harvestType.id === id ? updatedHarvestType : harvestType,\n            ),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a harvestType by ID\n   */\n  deleteHarvestType(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted harvestType from the list\n        this.harvestTypeList.update((list) =>\n          list.filter((harvestType) => harvestType.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple harvestType by IDs\n   */\n  deleteManyHarvestType(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted harvestType from the list\n          this.harvestTypeList.update((list) =>\n            list.filter((harvestType) => !ids.includes(harvestType.id)),\n          );\n        },\n      });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { MatCard, MatCardContent } from \"@angular/material/card\";\nimport { MatToolbar } from \"@angular/material/toolbar\";\n\n@Component({\n  selector: \"app-help\",\n  standalone: true,\n  imports: [MatCard, MatCardContent, MatToolbar],\n  templateUrl: \"./help.component.html\",\n  styleUrl: \"./help.component.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HelpComponent {}\n","<div>\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>Help</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"main-container mat-elevation-z8\">\n    <mat-card class=\"main-card\">\n      <mat-card-content>\n\n        TBD: some help information\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatCard, MatCardContent } from \"@angular/material/card\";\nimport { MatToolbar } from \"@angular/material/toolbar\";\n\n@Component({\n  standalone: true,\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n  imports: [CommonModule, MatCard, MatCardContent, MatToolbar],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  username!: string | null;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.username = this.authService.getFullname();\n  }\n}\n","<div>\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>Home</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"main-container mat-elevation-z8\">\n    <mat-card class=\"main-card\">\n      <mat-card-content>\n\n        Welcome to the new PFFC application.\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","// src/app/components/loading-indicator/loading-indicator.component.ts\n\nimport { Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { LoadingService } from \"../../services/loading.service\";\n\n@Component({\n  selector: \"app-loading-indicator\",\n  standalone: true,\n  imports: [CommonModule, MatProgressSpinnerModule],\n  templateUrl: \"./loading-indicator.component.html\",\n  styleUrls: [\"./loading-indicator.component.css\"],\n})\nexport class LoadingIndicatorComponent {\n  loadingService = inject(LoadingService);\n}\n","<div *ngIf=\"loadingService.loading()\" class=\"loading-overlay\">\n  <div class=\"spinner-container\">\n    <mat-spinner diameter=\"40\"></mat-spinner>\n    <span>Loading...</span>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  isDevMode,\n} from \"@angular/core\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule } from \"@angular/common\";\nimport { catchError, throwError } from \"rxjs\";\nimport { LoginResponse } from \"src/app/models/login-response.model \";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIcon } from \"@angular/material/icon\";\nimport { AppInstallPromptComponent } from \"../app-install-prompt/app-install-prompt.component\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { environment } from \"../../../environments/environment\";\nimport { AutoMarkTouchedDirective } from \"../../directives/auto-mark-touched.directive\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIcon,\n    ReactiveFormsModule,\n    RouterModule,\n    AppInstallPromptComponent,\n    AutoMarkTouchedDirective,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  hidePassword = true;\n  loading = false;\n  errorMessage: string | null = null;\n\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: [\"\", [Validators.required]],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.errorMessage = null;\n    const { username, password } = this.loginForm.value;\n    this.authService\n      .login(username, password)\n      .pipe(\n        catchError((error) => {\n          this.errorMessage = `Login failed. ${error.status === 401 ? \"Please check your username and password\" : error.error?.message || \"Please check your username and password\"}.`;\n          this.loading = false;\n          this.cdr.markForCheck();\n          return throwError(() => error);\n        }),\n      )\n      .subscribe({\n        next: ({ firstName, lastName, token }: LoginResponse) => {\n          this.authService.saveFullnameAndToken(\n            `${firstName ?? \"\"} ${lastName ?? \"\"}`.trim(),\n            token,\n          );\n          void this.router.navigate([\"/home\"]);\n        },\n      });\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n","<div>\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>Login</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"main-container\">\n    <mat-card class=\"main-card\">\n      <mat-card-content>\n\n        <form (ngSubmit)=\"onLogin()\" [autoMarkTouched]=\"loginForm\" [formGroup]=\"loginForm\" class=\"login-form\">\n          <h2 class=\"form-title\">Sign in to your account</h2>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Username</mat-label>\n            <input\n              autocomplete=\"username\"\n              formControlName=\"username\"\n              matInput\n              placeholder=\"Enter your username\"\n              type=\"text\">\n            <mat-icon matPrefix>person</mat-icon>\n            <mat-error *ngIf=\"loginForm.get('username')?.invalid\">\n              Username is required\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Password</mat-label>\n            <input\n              [type]=\"hidePassword ? 'password' : 'text'\"\n              autocomplete=\"current-password\"\n              formControlName=\"password\"\n              matInput\n              placeholder=\"Enter your password\">\n            <mat-icon matPrefix>lock</mat-icon>\n            <button\n              (click)=\"togglePasswordVisibility()\"\n              aria-label=\"Toggle password visibility\"\n              mat-icon-button\n              matSuffix\n              type=\"button\">\n              <mat-icon>{{ hidePassword ? 'visibility' : 'visibility_off' }}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"loginForm.get('password')?.invalid\">\n              Password is required\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"forgot-password\">\n            <a [routerLink]=\"['/password-request']\" class=\"forgot-link\">\n              Forgot password?\n            </a>\n          </div>\n\n          <div class=\"form-actions\">\n            <button\n              [disabled]=\"loading || loginForm.invalid\"\n              class=\"login-button\"\n              color=\"primary\"\n              mat-raised-button\n              type=\"submit\">\n              <span *ngIf=\"!loading\">Login</span>\n            </button>\n          </div>\n\n          <div *ngIf=\"errorMessage\" class=\"error-message\">\n            <mat-icon>error_outline</mat-icon>\n            {{ errorMessage }}\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n<app-install-prompt></app-install-prompt>\n\n<footer class=\"text-align-center\">\n  <div>\n    © 2025- Pacific Fresh Fish Company\n  </div>\n  <div *ngIf=\"isDevMode\">UAT ENVIRONMENT</div>\n  <div *ngIf=\"isDevMode\">{{ apiUrl }}</div>\n</footer>\n\n\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { SnackbarService } from \"../../services/snackbar.service\";\n\n@Component({\n  selector: \"app-logout\",\n  templateUrl: \"./logout.component.html\",\n  styleUrls: [\"./logout.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LogoutComponent {\n  constructor(\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.authService.logout();\n    this.snackbarService.showSuccess(\"You have been logged out\");\n  }\n}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">You have been logged out.</h1>\n\n","// src/app/components/origin-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { OriginGetDto } from \"../../../models/origin.model\";\nimport { AutoMarkTouchedDirective } from \"../../../directives/auto-mark-touched.directive\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  origin?: OriginGetDto;\n}\n\n@Component({\n  selector: \"app-origin-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    AutoMarkTouchedDirective,\n  ],\n  templateUrl: \"./origin-dialog.component.html\",\n  styleUrls: [\"./origin-dialog.component.css\"],\n})\nexport class OriginDialogComponent implements OnInit {\n  originForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<OriginDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New Origin\" : \"Edit Origin\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.originForm.valid) {\n      this.dialogRef.close({\n        id: this.data.origin?.id,\n        ...this.originForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.originForm = this.fb.group({\n      originName: [this.data.origin?.originName || \"\", [Validators.required]],\n    });\n  }\n}\n","<!-- src/app/components/origin-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"originForm\" [formGroup]=\"originForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"originName\" matInput placeholder=\"Enter origin name\">\n      <mat-error *ngIf=\"originForm.get('originName')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"originForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/origin-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  OriginGetDto,\n  OriginPatchDto,\n  OriginPostDto,\n} from \"../../../models/origin.model\";\nimport { OriginDialogComponent } from \"../origin-dialog/origin-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { OriginService } from \"../origin.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\n\n@Component({\n  selector: \"app-origin-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./origin-list.component.html\",\n  styleUrls: [\"./origin-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OriginListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<OriginGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"name\", \"actions\"];\n  selection = new SelectionModel<OriginGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"origin\";\n  private destroy$ = new Subject<void>();\n\n  private originService = inject(OriginService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the origines signal changes\n    effect(() => {\n      this.updateTable(this.originService.origins());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadOrigines() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: OriginGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof OriginGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (\n      origin: OriginGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        origin.id.toString().includes(searchStr) ||\n        origin.originName.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(OriginDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: OriginPostDto) => {\n        if (result) {\n          this.originService.createOrigin(result);\n          this.snackBarService.showSuccess(\"Origin added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(origin: OriginGetDto): void {\n    const dialogRef = this.dialog.open(OriginDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", origin },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: OriginPatchDto = {\n            originName: result.originName,\n          };\n\n          this.originService.updateOrigin(origin.id, update);\n          this.snackBarService.showSuccess(\"Origin updated successfully\");\n        }\n      });\n  }\n\n  deleteOrigin(origin: OriginGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`origin \"${origin.originName}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.originService.deleteOrigin(origin.id);\n          this.snackBarService.showSuccess(\"Origin deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedCategories(): void {\n    const selectedIds = this.selection.selected.map((origin) => origin.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No origin selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"origin\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.originService.deleteManyOrigin(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected origin deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n\n  // Function to update table data\n  private updateTable(categories: OriginGetDto[]): void {\n    this.dataSource.data = categories;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/Origin-list/unit-type-list.component.html -->\n\n<div>\n  <mat-toolbar color=\"primary\">\n    <span>Origins</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new Origin\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedCategories()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"originName\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let origin\" mat-cell> {{ origin.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header=\"originName\"> Name</th>\n        <td *matCellDef=\"let origin\" mat-cell> {{ origin.originName }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let origin\" mat-cell>\n          <button (click)=\"openEditDialog(origin)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteOrigin(origin)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns ; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No Origin data available</p>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  OriginGetDto,\n  OriginPatchDto,\n  OriginPostDto,\n} from \"../../models/origin.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OriginService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/origins`;\n\n  // State signals\n  private originList = signal<OriginGetDto[]>([]);\n\n  // Exposed computed signals\n  public origins = computed(() => this.originList());\n\n  constructor() {\n    // Load origin data immediately when service is injected\n    this.loadAllOrigins();\n  }\n\n  /**\n   * Load all origin from the API and update the signal\n   */\n  loadAllOrigins(): void {\n    this.http.get<OriginGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.originList.set(data),\n    });\n  }\n\n  /**\n   * Get a single origin by ID\n   */\n  getOriginById(id: number): OriginGetDto | undefined {\n    return this.originList().find((origin) => origin.id === id);\n  }\n\n  /**\n   * Create a new origin\n   */\n  createOrigin(origin: OriginPostDto): void {\n    this.http.post<OriginGetDto>(this.baseUrl, origin).subscribe({\n      next: (newOrigin) => {\n        // Update the signal with the new origin\n        this.originList.update((list) => [...list, newOrigin]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing origin\n   */\n  updateOrigin(id: number, originUpdate: OriginPatchDto): void {\n    this.http\n      .patch<OriginGetDto>(`${this.baseUrl}/${id}`, originUpdate)\n      .subscribe({\n        next: (updatedOrigin) => {\n          // Update the specific origin in the list\n          this.originList.update((list) =>\n            list.map((origin) => (origin.id === id ? updatedOrigin : origin)),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a origin by ID\n   */\n  deleteOrigin(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted origin from the list\n        this.originList.update((list) =>\n          list.filter((origin) => origin.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple origin by IDs\n   */\n  deleteManyOrigin(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted origin from the list\n          this.originList.update((list) =>\n            list.filter((origin) => !ids.includes(origin.id)),\n          );\n        },\n      });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule } from \"@angular/common\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\nimport { MatToolbar } from \"@angular/material/toolbar\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIcon } from \"@angular/material/icon\";\nimport { AutoMarkTouchedDirective } from \"../../directives/auto-mark-touched.directive\";\n\n@Component({\n  selector: \"app-password-request\",\n  templateUrl: \"./password-request.component.html\",\n  styleUrls: [\"./password-request.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIcon,\n    ReactiveFormsModule,\n    RouterModule,\n    MatToolbar,\n    AutoMarkTouchedDirective,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordRequestComponent {\n  passwordRequestForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordRequestForm = this.formBuilder.group({\n      username: [\"\", [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    const { username } = this.passwordRequestForm.value;\n\n    this.authService.passwordRequest(username).subscribe({\n      next: () => {\n        this.snackbarService.showInfo(\n          `An email has been sent to ${username} to reset your password`,\n        );\n        void this.router.navigate([\"/login\"]);\n      },\n    });\n  }\n}\n","<div class=\"container\">\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>New Password Request</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"form-container\">\n    <mat-card class=\"password-request-card\">\n      <mat-card-content>\n        <form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"passwordRequestForm\" [formGroup]=\"passwordRequestForm\"\n              class=\"password-form\">\n          <h2 class=\"form-title\">Reset your password</h2>\n\n          <p class=\"form-description\">\n            Enter your username below and we'll send you instructions to reset your password.\n          </p>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Username</mat-label>\n            <input\n              autocomplete=\"username\"\n              formControlName=\"username\"\n              matInput\n              placeholder=\"Enter your username\"\n              type=\"text\">\n            <mat-icon matPrefix>person</mat-icon>\n            <mat-error *ngIf=\"passwordRequestForm.get('username')?.invalid\">\n              Username is required\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"form-actions\">\n            <button\n              mat-stroked-button\n              routerLink=\"/login\"\n              type=\"button\">\n              Back to Login\n            </button>\n            <button\n              [disabled]=\"passwordRequestForm.invalid\"\n              color=\"primary\"\n              mat-raised-button\n              type=\"submit\">\n              Submit Password Request\n            </button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\nimport {\n  ActivatedRoute,\n  ParamMap,\n  Router,\n  RouterModule,\n} from \"@angular/router\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule } from \"@angular/common\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { AutoMarkTouchedDirective } from \"../../directives/auto-mark-touched.directive\";\n\n@Component({\n  selector: \"app-password-reset\",\n  templateUrl: \"./password-reset.component.html\",\n  styleUrls: [\"./password-reset.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    RouterModule,\n    AutoMarkTouchedDirective,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordResetComponent implements OnInit {\n  passwordResetForm: FormGroup;\n  token: string = \"\";\n  mismatchedPassword: boolean = false;\n  hidePassword = true;\n  hideConfirmPassword = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordResetForm = this.formBuilder.group({\n      password: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          this.specialCharacterValidator,\n        ],\n      ],\n      confirmPassword: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          this.specialCharacterValidator,\n        ],\n      ],\n    });\n  }\n\n  ngOnInit(): void {\n    this.passwordResetForm\n      .get(\"confirmPassword\")\n      ?.valueChanges.subscribe(() => {\n        this.mismatchedPassword = false;\n      });\n\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.token = params.get(\"token\") || \"\";\n      if (!this.token) {\n        // no JWT found\n        void this.router.navigate([\"/login\"]);\n      }\n    });\n  }\n\n  onSubmit() {\n    const { password, confirmPassword } = this.passwordResetForm.value;\n\n    if (password !== confirmPassword) {\n      this.mismatchedPassword = true;\n      return;\n    }\n\n    this.authService.passwordReset(password, this.token).subscribe({\n      next: () => {\n        this.snackbarService.showSuccess(\"Your password has been reset\");\n        void this.router.navigate([\"/login\"]); // Navigate to /products on success\n      },\n    });\n  }\n\n  specialCharacterValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    // Regular expression for special characters\n    const hasSpecialCharacter = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n    return hasSpecialCharacter ? null : { noSpecialCharacter: true };\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  toggleConfirmPasswordVisibility() {\n    this.hideConfirmPassword = !this.hideConfirmPassword;\n  }\n}\n","<div class=\"container\">\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>New Password</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"form-container\">\n    <mat-card class=\"password-reset-card\">\n      <mat-card-content>\n        <form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"passwordResetForm\" [formGroup]=\"passwordResetForm\"\n              class=\"password-form\">\n          <h2 class=\"form-title\">Create your new password</h2>\n\n          <p class=\"form-description\">\n            Please enter and confirm your new password below.\n          </p>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Password</mat-label>\n            <input\n              [type]=\"hidePassword ? 'password' : 'text'\"\n              autocomplete=\"new-password\"\n              formControlName=\"password\"\n              matInput\n              placeholder=\"Enter your password\">\n            <mat-icon matPrefix>lock</mat-icon>\n            <button\n              (click)=\"togglePasswordVisibility()\"\n              aria-label=\"Toggle password visibility\"\n              mat-icon-button\n              matSuffix\n              type=\"button\">\n              <mat-icon>{{ hidePassword ? 'visibility' : 'visibility_off' }}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"passwordResetForm.get('password')?.invalid\">\n              Password is required\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Re-enter your password</mat-label>\n            <input\n              [type]=\"hideConfirmPassword ? 'password' : 'text'\"\n              autocomplete=\"new-password\"\n              formControlName=\"confirmPassword\"\n              matInput\n              placeholder=\"Confirm your password\">\n            <mat-icon matPrefix>lock</mat-icon>\n            <button\n              (click)=\"toggleConfirmPasswordVisibility()\"\n              aria-label=\"Toggle confirm password visibility\"\n              mat-icon-button\n              matSuffix\n              type=\"button\">\n              <mat-icon>{{ hideConfirmPassword ? 'visibility' : 'visibility_off' }}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"passwordResetForm.get('confirmPassword')?.invalid\">\n              Please confirm your password\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"password-requirements\">\n            <div\n              *ngIf=\"passwordResetForm.get('password')?.errors?.['minlength']\"\n              class=\"error-item\">\n              <mat-icon>error_outline</mat-icon>\n              Your password needs to have at least 5 characters.\n            </div>\n\n            <div\n              *ngIf=\"passwordResetForm.get('password')?.errors?.['noSpecialCharacter']\"\n              class=\"error-item\">\n              <mat-icon>error_outline</mat-icon>\n              Your password needs to contain at least one special character: {{ '[!@#$%^&*(),.?\":{}|<>]' }}\n            </div>\n\n            <div *ngIf=\"mismatchedPassword\" class=\"error-item\">\n              <mat-icon>error_outline</mat-icon>\n              The 2 entries do not match.\n            </div>\n          </div>\n\n          <div class=\"form-actions\">\n            <button\n              mat-stroked-button\n              routerLink=\"/login\"\n              type=\"button\">\n              Back to Login\n            </button>\n            <button\n              [disabled]=\"passwordResetForm.invalid\"\n              color=\"primary\"\n              mat-raised-button\n              type=\"submit\">\n              Submit New Password\n            </button>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { MatCard, MatCardContent } from \"@angular/material/card\";\nimport { MatToolbar } from \"@angular/material/toolbar\";\n\n@Component({\n  selector: \"app-profile\",\n  standalone: true,\n  imports: [MatCard, MatCardContent, MatToolbar],\n  templateUrl: \"./profile.component.html\",\n  styleUrl: \"./profile.component.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProfileComponent {}\n","<div>\n  <!-- Header section -->\n  <mat-toolbar class=\"header-toolbar\" color=\"primary\">\n    <span>Profile</span>\n  </mat-toolbar>\n\n  <!-- Card container for the form -->\n  <div class=\"main-container mat-elevation-z8\">\n    <mat-card class=\"main-card\">\n      <mat-card-content>\n\n        TBD\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport {\n  PurchaseProductGetDto,\n  PurchaseProductPatchDto,\n  PurchaseProductPostDto,\n} from \"../../../models/purchase-product.model\";\nimport { OriginGetDto } from \"../../../models/origin.model\";\nimport { CategoryGetDto } from \"../../../models/category.model\";\nimport { UnitTypeGetDto } from \"../../../models/unit-type.model\";\nimport { UserNameGetDto } from \"../../../models/user-name.model\";\nimport { HarvestTypeGetDto } from \"../../../models/harvest-type.model\";\nimport { AutoMarkTouchedDirective } from \"../../../directives/auto-mark-touched.directive\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  purchaseProduct?: PurchaseProductGetDto;\n  origins: OriginGetDto[];\n  harvestTypes: HarvestTypeGetDto[];\n  categories: CategoryGetDto[];\n  unitTypes: UnitTypeGetDto[];\n  defaultBuyerUsers: UserNameGetDto[];\n}\n\n@Component({\n  selector: \"app-purchase-product-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n    AutoMarkTouchedDirective,\n  ],\n  templateUrl: \"./purchase-product-dialog.component.html\",\n  styleUrls: [\"./purchase-product-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PurchaseProductDialogComponent implements OnInit {\n  productForm!: FormGroup;\n  dialogTitle = \"\";\n  protected readonly data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<PurchaseProductDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\"\n        ? \"Add New Purchase Product\"\n        : \"Edit Purchase Product\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.productForm.valid) {\n      const formValues = this.productForm.getRawValue();\n\n      if (this.data.mode === \"add\") {\n        const postData: PurchaseProductPostDto = {\n          purchaseProductDescription: formValues.purchaseProductDescription,\n          packSize: formValues.packSize,\n          defaultCostPrice: formValues.defaultCostPrice,\n          harvestTypeId: formValues.harvestTypeId,\n          shelfLife: formValues.shelfLife,\n          isFixedPack: formValues.isFixedPack,\n          isActive: formValues.isActive,\n          notes: formValues.notes,\n          isAllowLbs: formValues.isAllowLbs,\n          rotationDays: formValues.rotationDays,\n          defaultBuyerUserId: formValues.defaultBuyerUserId,\n          nonInventory: formValues.nonInventory,\n          originId: formValues.originId,\n          categoryId: formValues.categoryId,\n          unitTypeId: formValues.unitTypeId,\n        };\n\n        this.dialogRef.close(postData);\n      } else {\n        const patchData: PurchaseProductPatchDto = {\n          id: this.data.purchaseProduct!.id,\n          purchaseProductDescription: formValues.purchaseProductDescription,\n          packSize: formValues.packSize,\n          defaultCostPrice: formValues.defaultCostPrice,\n          harvestTypeId: formValues.harvestTypeId,\n          shelfLife: formValues.shelfLife,\n          isFixedPack: formValues.isFixedPack,\n          isActive: formValues.isActive,\n          notes: formValues.notes,\n          isAllowLbs: formValues.isAllowLbs,\n          rotationDays: formValues.rotationDays,\n          defaultBuyerUserId: formValues.defaultBuyerUserId,\n          nonInventory: formValues.nonInventory,\n          originId: formValues.originId,\n          categoryId: formValues.categoryId,\n          unitTypeId: formValues.unitTypeId,\n        };\n\n        this.dialogRef.close(patchData);\n      }\n    }\n  }\n\n  private initForm(): void {\n    this.productForm = this.fb.group({\n      purchaseProductDescription: [\n        this.data.purchaseProduct?.purchaseProductDescription || \"\",\n        [Validators.required],\n      ],\n      packSize: [\n        this.data.purchaseProduct?.packSize || 0,\n        [Validators.required, Validators.min(0)],\n      ],\n      defaultCostPrice: [\n        this.data.purchaseProduct?.defaultCostPrice || 0,\n        [Validators.required, Validators.min(0)],\n      ],\n      harvestTypeId: [\n        this.data.purchaseProduct?.harvestType?.id || \"\",\n        [Validators.required],\n      ],\n      shelfLife: [\n        this.data.purchaseProduct?.shelfLife || 0,\n        [Validators.min(0)],\n      ],\n      isFixedPack: [this.data.purchaseProduct?.isFixedPack || false],\n      isActive: [this.data.purchaseProduct?.isActive || true],\n      notes: [this.data.purchaseProduct?.notes || \"\"],\n      isAllowLbs: [this.data.purchaseProduct?.isAllowLbs || false],\n      rotationDays: [\n        this.data.purchaseProduct?.rotationDays || 0,\n        [Validators.min(0)],\n      ],\n      defaultBuyerUserId: [\n        this.data.purchaseProduct?.defaultBuyerUser?.id || null,\n        [Validators.required],\n      ],\n      nonInventory: [this.data.purchaseProduct?.nonInventory || false],\n      originId: [\n        this.data.purchaseProduct?.origin?.id || null,\n        [Validators.required],\n      ],\n      categoryId: [\n        this.data.purchaseProduct?.category?.id || null,\n        [Validators.required],\n      ],\n      unitTypeId: [\n        this.data.purchaseProduct?.unitType?.id || null,\n        [Validators.required],\n      ],\n    });\n  }\n}\n","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"productForm\" [formGroup]=\"productForm\">\n  <mat-dialog-content>\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Product Description</mat-label>\n        <input formControlName=\"purchaseProductDescription\" matInput placeholder=\"Enter product description\">\n        <mat-error *ngIf=\"productForm.get('purchaseProductDescription')?.hasError('required')\">\n          Product description is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Pack Size</mat-label>\n        <input formControlName=\"packSize\" matInput placeholder=\"Enter pack size\" type=\"number\">\n        <mat-error *ngIf=\"productForm.get('packSize')?.hasError('required')\">\n          Pack size is required\n        </mat-error>\n        <mat-error *ngIf=\"productForm.get('packSize')?.hasError('min')\">\n          Pack size must be greater than or equal to 0\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Default Cost Price</mat-label>\n        <input formControlName=\"defaultCostPrice\" matInput placeholder=\"Enter default cost price\" type=\"number\">\n        <mat-error *ngIf=\"productForm.get('defaultCostPrice')?.hasError('required')\">\n          Default cost price is required\n        </mat-error>\n        <mat-error *ngIf=\"productForm.get('defaultCostPrice')?.hasError('min')\">\n          Default cost price must be greater than or equal to 0\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>HarvestType</mat-label>\n        <mat-select formControlName=\"harvestTypeId\">\n          <mat-option *ngFor=\"let harvestType of data.harvestTypes\" [value]=\"harvestType.id\">\n            {{ harvestType.harvestType }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('harvestTypeId')?.hasError('required')\">\n          Harvest type is required\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Shelf Life (days)</mat-label>\n        <input formControlName=\"shelfLife\" matInput placeholder=\"Enter shelf life in days\" type=\"number\">\n        <mat-error *ngIf=\"productForm.get('shelfLife')?.hasError('min')\">\n          Shelf life must be greater than or equal to 0\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Rotation Days</mat-label>\n        <input formControlName=\"rotationDays\" matInput placeholder=\"Enter rotation days\" type=\"number\">\n        <mat-error *ngIf=\"productForm.get('rotationDays')?.hasError('min')\">\n          Rotation days must be greater than or equal to 0\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Origin</mat-label>\n        <mat-select formControlName=\"originId\">\n          <mat-option *ngFor=\"let origin of data.origins\" [value]=\"origin.id\">\n            {{ origin.originName }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('originId')?.hasError('required')\">\n          Origin is required\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Category</mat-label>\n        <mat-select formControlName=\"categoryId\">\n          <mat-option *ngFor=\"let category of data.categories\" [value]=\"category.id\">\n            {{ category.categoryName }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('categoryId')?.hasError('required')\">\n          Category is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Unit Type</mat-label>\n        <mat-select formControlName=\"unitTypeId\">\n          <mat-option *ngFor=\"let unitType of data.unitTypes\" [value]=\"unitType.id\">\n            {{ unitType.unitTypeName }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('unitTypeId')?.hasError('required')\">\n          Unit type is required\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Default Buyer</mat-label>\n        <mat-select formControlName=\"defaultBuyerUserId\">\n          <mat-option *ngFor=\"let defaultBuyerUser of data.defaultBuyerUsers\" [value]=\"defaultBuyerUser.id\">\n            {{ defaultBuyerUser.firstName }} {{ defaultBuyerUser.lastName }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"productForm.get('defaultBuyerUserId')?.hasError('required')\">\n          Default buyer is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"toggles-row\">\n      <mat-slide-toggle formControlName=\"isFixedPack\">Fixed Pack</mat-slide-toggle>\n      <mat-slide-toggle formControlName=\"isActive\">Active</mat-slide-toggle>\n      <mat-slide-toggle formControlName=\"isAllowLbs\">Allow Lbs</mat-slide-toggle>\n      <mat-slide-toggle formControlName=\"nonInventory\">Non-Inventory</mat-slide-toggle>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Notes</mat-label>\n        <textarea formControlName=\"notes\" matInput placeholder=\"Enter notes\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"productForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, takeUntil } from \"rxjs/operators\";\n\nimport {\n  PurchaseProductGetDto,\n  PurchaseProductPatchDto,\n  PurchaseProductPostDto,\n} from \"../../../models/purchase-product.model\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { PurchaseProductService } from \"../purchase-product-service\";\nimport { PurchaseProductViewDialogComponent } from \"../purchase-product-view/purchase-product-view.component\";\nimport { PurchaseProductDialogComponent } from \"../purchase-product-dialog/purchase-product-dialog.component\";\nimport { HarvestTypeService } from \"../../harvest-type/harvest-type.service\";\nimport { UnitTypeService } from \"../../unit-type/unit-type.service\";\nimport { CategoryService } from \"../../categoty/category.service\";\nimport { UserService } from \"../../user/user.service\";\nimport { InfiniteScrollDirective } from \"ngx-infinite-scroll\";\nimport { OriginService } from \"../../origin/origin.service\";\n\n@Component({\n  selector: \"app-purchase-product-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n    InfiniteScrollDirective,\n  ],\n  templateUrl: \"./purchase-product-list.component.html\",\n  styleUrls: [\"./purchase-product-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PurchaseProductListComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<PurchaseProductGetDto>([]);\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"purchaseProductDescription\",\n    \"category\",\n    \"origin\",\n    \"packSize\",\n    \"defaultCostPrice\",\n    \"actions\",\n  ];\n\n  selection = new SelectionModel<PurchaseProductGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n  private searchInputSubject = new Subject<string>();\n  private destroy$ = new Subject<void>();\n  private purchaseProductService = inject(PurchaseProductService);\n  private harvestTypeService = inject(HarvestTypeService);\n  private originService = inject(OriginService);\n  private unitTypeService = inject(UnitTypeService);\n  private categoryService = inject(CategoryService);\n  private userService = inject(UserService); // TODO\n\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n\n  constructor() {\n    // Effect to update the table data whenever the products signal changes\n    effect(() => {\n      this.updateTable(this.purchaseProductService.purchaseProducts());\n    });\n  }\n\n  ngOnInit(): void {\n    this.originService.loadAllOrigins();\n    this.harvestTypeService.loadAllHarvestTypes();\n    this.unitTypeService.loadAllUnitTypes();\n    this.categoryService.loadAllCategories();\n    this.userService.loadAllUsers();\n\n    // Setup debounced search\n    this.searchInputSubject\n      .pipe(debounceTime(400), distinctUntilChanged(), takeUntil(this.destroy$))\n      .subscribe((searchTerm) => {\n        this.purchaseProductService.setSearchTerm(searchTerm);\n      });\n  }\n\n  ngAfterViewInit() {\n    // Configure sorting\n    this.configureSort();\n\n    this.sort.sortChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      // Pass the sort parameters to the service\n      this.purchaseProductService.setSortParameters(\n        this.sort.active,\n        this.sort.direction,\n      );\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.purchaseProductService.setSearchTerm(\"\");\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: PurchaseProductGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = this.getPropertyByPath(data, sortHeaderId);\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else if (value instanceof Date) {\n        return value.getTime(); // Convert Date to timestamp (number) for sorting\n      } else if (value == null) {\n        return \"\"; // Treat null/undefined as an empty string\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchQuery.set(value);\n    this.searchInputSubject.next(value);\n  }\n\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.searchInputSubject.next(\"\");\n    inputElement.focus();\n  }\n\n  onScroll(): void {\n    this.purchaseProductService.loadNextPage();\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(PurchaseProductDialogComponent, {\n      width: \"600px\",\n      data: {\n        mode: \"add\",\n        origins: this.originService.origins(),\n        harvestTypes: this.harvestTypeService.harvestTypes(),\n        categories: this.categoryService.categories(),\n        unitTypes: this.unitTypeService.unitTypes(),\n        defaultBuyerUsers: this.userService.users(),\n      },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: PurchaseProductPostDto) => {\n        if (result) {\n          this.purchaseProductService.createPurchaseProduct(result);\n          this.snackBarService.showSuccess(\n            \"Purchase product added successfully\",\n          );\n        }\n      });\n  }\n\n  openEditDialog(purchaseProduct: PurchaseProductGetDto): void {\n    // Implementation for editing a purchase product\n    // Similar to the vendor component's implementation\n    const dialogRef = this.dialog.open(PurchaseProductDialogComponent, {\n      width: \"600px\",\n      data: {\n        mode: \"edit\",\n        purchaseProduct: purchaseProduct,\n        origins: this.originService.origins(),\n        harvestTypes: this.harvestTypeService.harvestTypes(),\n        categories: this.categoryService.categories(),\n        unitTypes: this.unitTypeService.unitTypes(),\n        defaultBuyerUsers: this.userService.users(),\n      },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: PurchaseProductPatchDto) => {\n        if (result) {\n          this.purchaseProductService.updatePurchaseProduct(\n            purchaseProduct.id,\n            result,\n          );\n          this.snackBarService.showSuccess(\"Vendor added successfully\");\n        }\n      });\n  }\n\n  openViewDialog(purchaseProduct: PurchaseProductGetDto): void {\n    this.dialog.open(PurchaseProductViewDialogComponent, {\n      width: \"600px\",\n      data: { purchaseProduct },\n      disableClose: false,\n    });\n  }\n\n  deletePurchaseProduct(purchaseProduct: PurchaseProductGetDto): void {\n    this.confirmationService\n      .confirmDeletion(\n        `purchase product \"${purchaseProduct.purchaseProductDescription}\"`,\n      )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.purchaseProductService\n            .deletePurchaseProduct(purchaseProduct.id)\n            .subscribe({\n              next: () => {\n                // Reload first page after deletion\n                this.purchaseProductService.loadPurchaseProducts(0, true);\n                this.snackBarService.showSuccess(\n                  \"Purchase product deleted successfully\",\n                );\n              },\n            });\n        }\n      });\n  }\n\n  deleteSelectedPurchaseProducts(): void {\n    const selectedIds = this.selection.selected.map((product) => product.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No purchase products selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"purchase product\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.purchaseProductService\n            .deleteManyPurchaseProducts(selectedIds)\n            .subscribe({\n              next: () => {\n                // Reload first page after deletion\n                this.purchaseProductService.loadPurchaseProducts(0, true);\n                this.selection.clear();\n                this.snackBarService.showSuccess(\n                  \"Selected purchase products deleted successfully\",\n                );\n              },\n            });\n        }\n      });\n  }\n\n  /**\n   * Helper to get nested properties like 'category.name'\n   */\n  private getPropertyByPath(obj: any, path: string): any {\n    return path.split(\".\").reduce((o, i) => (o ? o[i] : undefined), obj);\n  }\n\n  // Function to update table data\n  private updateTable(purchaseProducts: PurchaseProductGetDto[]): void {\n    this.dataSource.data = purchaseProducts;\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<div\n  (scrolled)=\"onScroll()\"\n  [infiniteScrollDistance]=\"2\"\n  [infiniteScrollThrottle]=\"50\"\n  [scrollWindow]=\"false\"\n  class=\"container\"\n  infiniteScroll\n>\n  <mat-toolbar color=\"primary\">\n    <span>Purchase Products</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab\n            matTooltip=\"Add new Purchase Product\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedPurchaseProducts()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"purchaseProductDescription\"\n           matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let product\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(product) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(product)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>ID</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.id }}</td>\n      </ng-container>\n\n      <!-- Description Column -->\n      <ng-container matColumnDef=\"purchaseProductDescription\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Description</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.purchaseProductDescription }}</td>\n      </ng-container>\n\n      <!-- Category Column -->\n      <ng-container matColumnDef=\"category\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Category</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.category?.categoryName }}</td>\n      </ng-container>\n\n      <!-- Origin Column -->\n      <ng-container matColumnDef=\"origin\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Origin</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.origin?.originName }}</td>\n      </ng-container>\n\n      <!-- Pack Size Column -->\n      <ng-container matColumnDef=\"packSize\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Pack Size</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.packSize }} {{ product.unitType?.name }}</td>\n      </ng-container>\n\n      <!-- Cost Price Column -->\n      <ng-container matColumnDef=\"defaultCostPrice\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Default Cost</th>\n        <td *matCellDef=\"let product\" mat-cell>{{ product.defaultCostPrice | currency }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell>Actions</th>\n        <td *matCellDef=\"let product\" class=\"action-buttons\" mat-cell>\n          <button (click)=\"openViewDialog(product)\" color=\"primary\" mat-icon-button matTooltip=\"View Details\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n          <button (click)=\"openEditDialog(product)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deletePurchaseProduct(product)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No purchase products available</p>\n  </div>\n</div>\n","import { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"../../../environments/environment\";\nimport {\n  PurchaseProductGetDto,\n  PurchaseProductPatchDto,\n  PurchaseProductPostDto,\n} from \"../../models/purchase-product.model\";\nimport { PaginatedResponse } from \"../../models/paginate-response.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PurchaseProductService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/purchase-products`;\n\n  // State signals\n  private purchaseProductsList = signal<PurchaseProductGetDto[]>([]);\n  // Exposed computed signals\n  public purchaseProducts = computed(() => this.purchaseProductsList());\n  private totalElements = signal<number>(0);\n  private totalPages = signal<number>(0);\n  private currentPage = signal<number>(0);\n  public page = computed(() => this.currentPage());\n  public hasMoreData = computed(\n    () => this.currentPage() < this.totalPages() - 1,\n  );\n  private pageSize = signal<number>(50);\n  public size = computed(() => this.pageSize());\n  private loading = signal<boolean>(false);\n  public isLoading = computed(() => this.loading());\n  private searchTerm = signal<string>(\"\");\n\n  private sortField = signal<string>(\"purchaseProductDescription\");\n\n  private sortDirection = signal<string>(\"asc\");\n\n  constructor() {\n    // Initial load of first page\n    this.loadPurchaseProducts(0);\n  }\n\n  /**\n   * Load purchase products with pagination and optional search\n   */\n  loadPurchaseProducts(page: number, resetList: boolean = false): void {\n    this.loading.set(true);\n\n    let params = new HttpParams()\n      .set(\"page\", page.toString())\n      .set(\"size\", this.pageSize().toString())\n      .set(\"sort\", `${this.sortField()},${this.sortDirection()}`); // Add this line\n\n    if (this.searchTerm()) {\n      params = params.set(\"search\", this.searchTerm());\n    }\n\n    this.http\n      .get<PaginatedResponse<PurchaseProductGetDto>>(this.baseUrl, { params })\n      .subscribe({\n        next: (response) => {\n          this.totalElements.set(response.totalElements);\n          this.totalPages.set(response.totalPages);\n          this.currentPage.set(page);\n\n          if (resetList) {\n            this.purchaseProductsList.set(response.content);\n          } else {\n            this.purchaseProductsList.update((list) => [\n              ...list,\n              ...response.content,\n            ]);\n          }\n\n          this.loading.set(false);\n        },\n        error: () => {\n          this.loading.set(false);\n        },\n      });\n  }\n\n  /**\n   * Load next page of purchase products\n   */\n  loadNextPage(): void {\n    if (this.hasMoreData() && !this.isLoading()) {\n      this.loadPurchaseProducts(this.currentPage() + 1);\n    }\n  }\n\n  /**\n   * Set search term and reload from first page\n   */\n  setSearchTerm(term: string): void {\n    this.searchTerm.set(term);\n    this.loadPurchaseProducts(0, true);\n  }\n\n  setSortParameters(field: string, direction: string): void {\n    this.sortField.set(field);\n    this.sortDirection.set(direction);\n    // Reload data with new sort parameters\n    this.loadPurchaseProducts(0, true);\n  }\n\n  /**\n   * Get a single purchase product by ID\n   */\n  getPurchaseProductById(id: number): Observable<PurchaseProductGetDto> {\n    return this.http.get<PurchaseProductGetDto>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Create a new purchase product\n   */\n  createPurchaseProduct(purchaseProduct: PurchaseProductPostDto): void {\n    this.http\n      .post<PurchaseProductGetDto>(this.baseUrl, purchaseProduct)\n      .subscribe({\n        next: (newPurchaseProduct) => {\n          // Update the signal with the new vendor\n          this.purchaseProductsList.update((list) => [\n            ...list,\n            newPurchaseProduct,\n          ]);\n        },\n      });\n  }\n\n  /**\n   * Update an existing purchase product\n   */\n  updatePurchaseProduct(\n    id: number,\n    purchaseProductUpdate: PurchaseProductPatchDto,\n  ): void {\n    this.http\n      .patch<PurchaseProductGetDto>(\n        `${this.baseUrl}/${id}`,\n        purchaseProductUpdate,\n      )\n      .subscribe({\n        next: (updatePurchaseProductGetDto) => {\n          this.purchaseProductsList.update((list) =>\n            list.map((purchaseProductGetDto) =>\n              purchaseProductGetDto.id === id\n                ? updatePurchaseProductGetDto\n                : purchaseProductGetDto,\n            ),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a purchase product by ID\n   */\n  deletePurchaseProduct(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Delete multiple purchase products by IDs\n   */\n  deleteManyPurchaseProducts(ids: number[]): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/bulk`, { body: { ids } });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { PurchaseProductGetDto } from \"../../../models/purchase-product.model\";\n\n@Component({\n  selector: \"app-purchase-product-view-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./purchase-product-view.component.html\",\n  styleUrls: [\"./purchase-product-view.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PurchaseProductViewDialogComponent implements OnInit {\n  protected readonly data: { purchaseProduct: PurchaseProductGetDto } =\n    inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<PurchaseProductViewDialogComponent>);\n\n  ngOnInit(): void {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Purchase Product Details</h2>\n<mat-dialog-content>\n  <div class=\"info-section\">\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Product Description:</span>\n      <span>{{ data.purchaseProduct.purchaseProductDescription }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Pack Size:</span>\n      <span>{{ data.purchaseProduct.packSize }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Default Cost Price:</span>\n      <span>{{ data.purchaseProduct.defaultCostPrice | currency }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Harvest Type:</span>\n      <span>{{ data.purchaseProduct.harvestType?.harvestType }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Shelf Life:</span>\n      <span>{{ data.purchaseProduct.shelfLife }} days</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Fixed Pack:</span>\n      <span>{{ data.purchaseProduct.isFixedPack ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Active:</span>\n      <span>{{ data.purchaseProduct.isActive ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Allow Lbs:</span>\n      <span>{{ data.purchaseProduct.isAllowLbs ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Rotation Days:</span>\n      <span>{{ data.purchaseProduct.rotationDays }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Non-Inventory:</span>\n      <span>{{ data.purchaseProduct.nonInventory ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Default Buyer:</span>\n      <span>{{ data.purchaseProduct.defaultBuyerUser?.firstName }} {{ data.purchaseProduct.defaultBuyerUser?.lastName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Origin:</span>\n      <span>{{ data.purchaseProduct.origin?.originName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Category:</span>\n      <span>{{ data.purchaseProduct.category?.categoryName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Unit Type:</span>\n      <span>{{ data.purchaseProduct.unitType?.unitTypeName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Notes:</span>\n      <span>{{ data.purchaseProduct.notes }}</span>\n    </div>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"close()\" mat-button>Close</button>\n</mat-dialog-actions>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  inject,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule, NgOptimizedImage } from \"@angular/common\";\nimport { RouterModule, RouterOutlet } from \"@angular/router\";\nimport { MatSidenav, MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-sidebar-layout\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    RouterOutlet,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatTooltipModule,\n    NgOptimizedImage,\n  ],\n  templateUrl: \"sidebar-layout.component.html\",\n  styleUrl: \"sidebar-layout.component.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidebarLayoutComponent {\n  @ViewChild(\"drawer\") drawer!: MatSidenav;\n\n  authService = inject(AuthService);\n  // Signal to track sidebar state\n  sidebarOpened = signal(true);\n  firstName = computed(() => this.authService.firstName());\n\n  // Toggle sidebar open/closed\n  toggleSidebar(): void {\n    this.sidebarOpened.update((state) => !state);\n  }\n}\n","<div class=\"sidebar-container\">\n  <mat-toolbar color=\"primary\">\n    <div class=\"toolbar-left\">\n      <button (click)=\"toggleSidebar()\" [matTooltip]=\"sidebarOpened() ? 'Hide menu' : 'Show menu'\" mat-icon-button>\n        <mat-icon>{{ sidebarOpened() ? 'menu_open' : 'menu' }}</mat-icon>\n      </button>\n      <span class=\"toolbar-title\">PFFC Application</span>\n    </div>\n\n    <div class=\"toolbar-center\">\n      <img alt=\"Logo\" class=\"logo\" height=\"50\" ngSrc=\"./assets/logo.png\" width=\"145\">\n    </div>\n\n    <div class=\"toolbar-right\">\n      <span *ngIf=\"firstName() as name\" class=\"logged-in\">Logged in as {{ name }}</span>\n    </div>\n  </mat-toolbar>\n  <mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer [opened]=\"sidebarOpened()\" class=\"sidenav\" mode=\"side\">\n      <!-- Regular menu items -->\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/dashboard\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>dashboard</mat-icon>\n          <span matListItemTitle>Home</span>\n        </a>\n\n        <a mat-list-item routerLink=\"/data\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>storage</mat-icon>\n          <span matListItemTitle>Data Explorer</span>\n        </a>\n      </mat-nav-list>\n\n      <mat-divider></mat-divider>\n\n      <mat-accordion>\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"/users\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>people</mat-icon>\n              <span matListItemTitle>Users</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/roles\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>verified_user</mat-icon>\n              <span matListItemTitle>Roles</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/permissions\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>security</mat-icon>\n              <span matListItemTitle>Permissions</span>\n            </a>\n          </mat-nav-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n\n\n      <!-- Expandable menu items with submenus -->\n      <mat-accordion>\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <div class=\"panel-title-content\">\n                <mat-icon>settings</mat-icon>\n                <span>Administration</span>\n              </div>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"/users\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>people</mat-icon>\n              <span matListItemTitle>Users</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/roles\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>verified_user</mat-icon>\n              <span matListItemTitle>Roles (TODO)</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/permissions\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>security</mat-icon>\n              <span matListItemTitle>Permissions (TODO)</span>\n            </a>\n          </mat-nav-list>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <div class=\"panel-title-content\">\n                <mat-icon>insert_chart</mat-icon>\n                <span>Reports (TODO)</span>\n              </div>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"/reports/summary\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>summarize</mat-icon>\n              <span matListItemTitle>Summary (TODO)</span>\n            </a>\n            <a mat-list-item routerLink=\"/reports/analytics\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>analytics</mat-icon>\n              <span matListItemTitle>Analytics (TODO)</span>\n            </a>\n            <a mat-list-item routerLink=\"/reports/export\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>download</mat-icon>\n              <span matListItemTitle>Export (TODO)</span>\n            </a>\n          </mat-nav-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n\n      <mat-divider></mat-divider>\n\n      <!-- Bottom menu items -->\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/profile\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>account_circle</mat-icon>\n          <span matListItemTitle>Profile</span>\n        </a>\n        <a mat-list-item routerLink=\"/help\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>help</mat-icon>\n          <span matListItemTitle>Help</span>\n        </a>\n        <a mat-list-item routerLink=\"/logout\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>exit_to_app</mat-icon>\n          <span matListItemTitle>Logout</span>\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content class=\"sidenav-content\">\n      <div class=\"content-container\">\n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","// src/app/components/unitType-dialog/unit-type-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { UnitTypeGetDto } from \"../../../models/unit-type.model\";\nimport { AutoMarkTouchedDirective } from \"../../../directives/auto-mark-touched.directive\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  unitType?: UnitTypeGetDto;\n}\n\n@Component({\n  selector: \"app-unitType-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    AutoMarkTouchedDirective,\n  ],\n  templateUrl: \"./unit-type-dialog.component.html\",\n  styleUrls: [\"./unit-type-dialog.component.css\"],\n})\nexport class UnitTypeDialogComponent implements OnInit {\n  unitTypeForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<UnitTypeDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New UnitType\" : \"Edit UnitType\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.unitTypeForm.valid) {\n      this.dialogRef.close({\n        id: this.data.unitType?.id,\n        ...this.unitTypeForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.unitTypeForm = this.fb.group({\n      unitTypeName: [\n        this.data.unitType?.unitTypeName || \"\",\n        [Validators.required],\n      ],\n    });\n  }\n}\n","<!-- src/app/components/unitType-dialog/unit-type-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"unitTypeForm\" [formGroup]=\"unitTypeForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"unitTypeName\" matInput placeholder=\"Enter unit type name\">\n      <mat-error *ngIf=\"unitTypeForm.get('unitTypeName')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"unitTypeForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/unitType-list/unit-type-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  UnitTypeGetDto,\n  UnitTypePatchDto,\n  UnitTypePostDto,\n} from \"../../../models/unit-type.model\";\nimport { UnitTypeDialogComponent } from \"../unit-type-dialog/unit-type-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { UnitTypeService } from \"../unit-type.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\n\n@Component({\n  selector: \"app-unitType-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./unit-type-list.component.html\",\n  styleUrls: [\"./unit-type-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitTypeListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<UnitTypeGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"name\", \"actions\"];\n  selection = new SelectionModel<UnitTypeGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"unitType\";\n  private destroy$ = new Subject<void>();\n\n  private unitTypeService = inject(UnitTypeService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the unitTypees signal changes\n    effect(() => {\n      this.updateTable(this.unitTypeService.unitTypes());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadUnitTypees() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: UnitTypeGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof UnitTypeGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (\n      unitType: UnitTypeGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        unitType.id.toString().includes(searchStr) ||\n        unitType.unitTypeName.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(UnitTypeDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: UnitTypePostDto) => {\n        if (result) {\n          this.unitTypeService.createUnitType(result);\n          this.snackBarService.showSuccess(\"UnitType added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(unitType: UnitTypeGetDto): void {\n    const dialogRef = this.dialog.open(UnitTypeDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", unitType },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: UnitTypePatchDto = {\n            unitTypeName: result.unitTypeName,\n          };\n\n          this.unitTypeService.updateUnitType(unitType.id, update);\n          this.snackBarService.showSuccess(\"UnitType updated successfully\");\n        }\n      });\n  }\n\n  deleteUnitType(unitType: UnitTypeGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`unitType \"${unitType.unitTypeName}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.unitTypeService.deleteUnitType(unitType.id);\n          this.snackBarService.showSuccess(\"UnitType deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedCategories(): void {\n    const selectedIds = this.selection.selected.map((unitType) => unitType.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No unitType selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"unitType\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.unitTypeService.deleteManyUnitType(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected unitType deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  /**\n   * Clear the search input\n   */\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchQuery.set(\"\");\n    this.dataSource.filter = \"\";\n    inputElement.focus();\n  }\n\n  // Function to update table data\n  private updateTable(categories: UnitTypeGetDto[]): void {\n    this.dataSource.data = categories;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/UnitType-list/unit-type-list.component.html -->\n\n<div>\n  <mat-toolbar color=\"primary\">\n    <span>Unit Types</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new UnitType\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedCategories()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"unitTypeName\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let unitType\" mat-cell> {{ unitType.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header=\"unitTypeName\"> Name</th>\n        <td *matCellDef=\"let unitType\" mat-cell> {{ unitType.unitTypeName }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let unitType\" mat-cell>\n          <button (click)=\"openEditDialog(unitType)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteUnitType(unitType)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns ; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No UnitType data available</p>\n  </div>\n</div>\n","// src/app/services/unit-type.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  UnitTypeGetDto,\n  UnitTypePatchDto,\n  UnitTypePostDto,\n} from \"../../models/unit-type.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UnitTypeService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/unit-types`;\n\n  // State signals\n  private unitTypeList = signal<UnitTypeGetDto[]>([]);\n\n  // Exposed computed signals\n  public unitTypes = computed(() => this.unitTypeList());\n\n  constructor() {\n    // Load unitType data immediately when service is injected\n    this.loadAllUnitTypes();\n  }\n\n  /**\n   * Load all unitType from the API and update the signal\n   */\n  loadAllUnitTypes(): void {\n    this.http.get<UnitTypeGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.unitTypeList.set(data),\n    });\n  }\n\n  /**\n   * Get a single unitType by ID\n   */\n  getUnitTypeById(id: number): UnitTypeGetDto | undefined {\n    return this.unitTypeList().find((unitType) => unitType.id === id);\n  }\n\n  /**\n   * Create a new unitType\n   */\n  createUnitType(unitType: UnitTypePostDto): void {\n    this.http.post<UnitTypeGetDto>(this.baseUrl, unitType).subscribe({\n      next: (newUnitType) => {\n        // Update the signal with the new unitType\n        this.unitTypeList.update((list) => [...list, newUnitType]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing unitType\n   */\n  updateUnitType(id: number, unitTypeUpdate: UnitTypePatchDto): void {\n    this.http\n      .patch<UnitTypeGetDto>(`${this.baseUrl}/${id}`, unitTypeUpdate)\n      .subscribe({\n        next: (updatedUnitType) => {\n          // Update the specific unitType in the list\n          this.unitTypeList.update((list) =>\n            list.map((unitType) =>\n              unitType.id === id ? updatedUnitType : unitType,\n            ),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a unitType by ID\n   */\n  deleteUnitType(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted unitType from the list\n        this.unitTypeList.update((list) =>\n          list.filter((unitType) => unitType.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple unitType by IDs\n   */\n  deleteManyUnitType(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted unitType from the list\n          this.unitTypeList.update((list) =>\n            list.filter((unitType) => !ids.includes(unitType.id)),\n          );\n        },\n      });\n  }\n}\n","// src/app/components/user-dialog/user-dialog.component.ts\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { UserGetDto } from \"../../../models/user.model\";\nimport { AutoMarkTouchedDirective } from \"../../../directives/auto-mark-touched.directive\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  user?: UserGetDto;\n}\n\n@Component({\n  selector: \"app-user-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n    AutoMarkTouchedDirective,\n  ],\n  templateUrl: \"./user-dialog-component.html\",\n  styleUrls: [\"./user-dialog-component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserDialogComponent implements OnInit {\n  userForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<UserDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle = this.data.mode === \"add\" ? \"Add New User\" : \"Edit User\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.userForm.valid) {\n      this.dialogRef.close({\n        id: this.data.user?.id,\n        ...this.userForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.userForm = this.fb.group({\n      username: [this.data.user?.username || \"\", [Validators.required]],\n      password: [\"\"],\n      firstName: [this.data.user?.firstName || \"\", [Validators.required]],\n      lastName: [this.data.user?.lastName || \"\", [Validators.required]],\n      emailAddress: [this.data.user?.emailAddress || \"\", [Validators.email]],\n      emailSignature: [this.data.user?.emailSignature || \"\"],\n      phoneNumber: [this.data.user?.phoneNumber || \"\"],\n      phoneCarrier: [this.data.user?.phoneCarrier || \"\"],\n      preferredContact: [this.data.user?.preferredContact || \"\"],\n      isCommission: [this.data.user?.isCommission || false],\n      isEnabled: [this.data.mode === \"add\" ? true : this.data.user?.isEnabled],\n      isLocked: [this.data.mode === \"add\" ? false : this.data.user?.isLocked],\n      // These fields are only included on creation, not for updates\n      lastLoginAt: [\n        this.data.mode === \"add\" ? null : this.data.user?.lastLoginAt,\n      ],\n      loginCount: [this.data.mode === \"add\" ? 0 : this.data.user?.loginCount],\n      failedLoginAttemptsCount: [\n        this.data.mode === \"add\" ? 0 : this.data.user?.failedLoginAttemptsCount,\n      ],\n    });\n  }\n}\n","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"userForm\" [formGroup]=\"userForm\">\n  <mat-dialog-content>\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Username</mat-label>\n        <input formControlName=\"username\" matInput placeholder=\"Enter username\">\n        <mat-error *ngIf=\"userForm.get('username')?.hasError('required')\">\n          Username is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div *ngIf=\"data.mode === 'add'\" class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Password</mat-label>\n        <input formControlName=\"password\" matInput placeholder=\"Enter password\">\n        <mat-error *ngIf=\"userForm.get('password')?.hasError('required')\">\n          Password is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>First Name</mat-label>\n        <input formControlName=\"firstName\" matInput placeholder=\"Enter first name\">\n        <mat-error *ngIf=\"userForm.get('firstName')?.hasError('required')\">\n          First name is required\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Last Name</mat-label>\n        <input formControlName=\"lastName\" matInput placeholder=\"Enter last name\">\n        <mat-error *ngIf=\"userForm.get('lastName')?.hasError('required')\">\n          Last name is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Email Address</mat-label>\n        <input formControlName=\"emailAddress\" matInput placeholder=\"Enter email address\" type=\"email\">\n        <mat-error *ngIf=\"userForm.get('emailAddress')?.hasError('required')\">\n          Email address is required\n        </mat-error>\n        <mat-error *ngIf=\"userForm.get('emailAddress')?.hasError('email')\">\n          Please enter a valid email address\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Email Signature</mat-label>\n        <textarea formControlName=\"emailSignature\" matInput placeholder=\"Enter email signature\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Phone Number</mat-label>\n        <input formControlName=\"phoneNumber\" matInput placeholder=\"Enter phone number\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Phone Carrier</mat-label>\n        <input formControlName=\"phoneCarrier\" matInput placeholder=\"Enter phone carrier\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Preferred Contact</mat-label>\n        <input formControlName=\"preferredContact\" matInput placeholder=\"Enter preferred Contact\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"toggles-row\">\n      <mat-slide-toggle color=\"primary\" formControlName=\"isCommission\">Commission Based</mat-slide-toggle>\n      <mat-slide-toggle color=\"primary\" formControlName=\"isEnabled\">Enabled</mat-slide-toggle>\n      <mat-slide-toggle color=\"warn\" formControlName=\"isLocked\">Locked</mat-slide-toggle>\n    </div>\n\n    <div *ngIf=\"data.mode === 'edit'\" class=\"info-section\">\n      <h3>Account Information</h3>\n      <p>\n        <span class=\"info-label\">Last Login:</span>\n        <span>{{ data.user?.lastLoginAt ? (data.user?.lastLoginAt | date:'medium') : 'Never' }}</span>\n      </p>\n      <p>\n        <span class=\"info-label\">Login Count:</span>\n        <span>{{ data.user?.loginCount }}</span>\n      </p>\n      <p>\n        <span class=\"info-label\">Failed Login Attempts:</span>\n        <span>{{ data.user?.failedLoginAttemptsCount }}</span>\n      </p>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"userForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  UserGetDto,\n  UserPatchDto,\n  UserPostDto,\n} from \"../../../models/user.model\";\nimport { UserDialogComponent } from \"../user-dialog/user-dialog-component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { UserService } from \"../user.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\nimport { UserViewDialogComponent } from \"../user-view-dialog/user-view-dialog.component\";\n\n@Component({\n  selector: \"app-user-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./user-list-component.html\",\n  styleUrls: [\"./user-list-component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<UserGetDto>([]);\n  displayedColumns: string[] = [];\n  allColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"username\",\n    \"fullName\",\n    \"commission\",\n    \"status\",\n    \"actions\",\n  ];\n\n  selection = new SelectionModel<UserGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"user\";\n  private destroy$ = new Subject<void>();\n\n  private userService = inject(UserService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the users signal changes\n    effect(() => {\n      this.updateTable(this.userService.users());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadUsers() as the service loads data on construction\n    this.configureDataSource();\n    this.setDisplayedColumns();\n    window.onresize = () => this.setDisplayedColumns();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  setDisplayedColumns() {\n    if (window.innerWidth < 768) {\n      this.displayedColumns = [\"id\", \"username\", \"fullName\", \"actions\"]; // Only show essential columns on mobile\n    } else {\n      this.displayedColumns = this.allColumns; // Show all columns on larger screens\n    }\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: UserGetDto,\n      sortHeaderId: string,\n    ) => {\n      // Handle fullName sorting\n      if (sortHeaderId === \"fullName\") {\n        return `${data.firstName} ${data.lastName}`.toLowerCase();\n      }\n\n      // Handle commission sorting\n      if (sortHeaderId === \"commission\") {\n        if (data.isCommission) return \"yes\";\n        else return \"no\";\n      }\n\n      // Handle status sorting\n      if (sortHeaderId === \"status\") {\n        if (!data.isEnabled) return \"disabled\";\n        if (data.isLocked) return \"locked\";\n        return \"active\";\n      }\n\n      const value = data[sortHeaderId as keyof UserGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else if (typeof value === \"boolean\") {\n        return value ? 1 : 0; // Convert boolean to numeric for sorting\n      } else if (value == null) {\n        return \"\"; // Treat null/undefined as an empty string\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    this.dataSource.filterPredicate = (user: UserGetDto, filter: string) => {\n      const searchStr = filter.toLowerCase();\n\n      return (\n        (user.id?.toString() ?? \"\").includes(searchStr) ||\n        (user.username?.toLowerCase() ?? \"\").includes(searchStr) ||\n        (user.firstName?.toLowerCase() ?? \"\").includes(searchStr) ||\n        (user.lastName?.toLowerCase() ?? \"\").includes(searchStr) ||\n        `${user.firstName ?? \"\"} ${user.lastName ?? \"\"}`\n          .toLowerCase()\n          .includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(UserDialogComponent, {\n      width: \"600px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: UserPostDto) => {\n        if (result) {\n          this.userService.createUser(result);\n          this.snackBarService.showSuccess(\"User added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(user: UserGetDto): void {\n    const dialogRef = this.dialog.open(UserDialogComponent, {\n      width: \"600px\",\n      data: { mode: \"edit\", user },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: UserPatchDto = {\n            username: result.username,\n            preferredContact: result.preferredContact,\n            emailAddress: result.emailAddress,\n            emailSignature: result.emailSignature,\n            phoneNumber: result.phoneNumber,\n            phoneCarrier: result.phoneCarrier,\n            isCommission: result.isCommission,\n            firstName: result.firstName,\n            lastName: result.lastName,\n            isEnabled: result.isEnabled,\n            isLocked: result.isLocked,\n          };\n\n          this.userService.updateUser(user.id, update);\n          this.snackBarService.showSuccess(\"User updated successfully\");\n        }\n      });\n  }\n\n  openViewDialog(user: UserGetDto): void {\n    this.dialog.open(UserViewDialogComponent, {\n      width: \"600px\",\n      data: { user },\n      disableClose: false,\n    });\n  }\n\n  deleteUser(user: UserGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`user \"${user.username}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.userService.deleteUser(user.id);\n          this.snackBarService.showSuccess(\"User deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedUsers(): void {\n    const selectedIds = this.selection.selected.map((user) => user.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No users selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"user\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.userService.deleteManyUsers(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected users deleted successfully\",\n          );\n        }\n      });\n  }\n\n  getUserCommission(user: UserGetDto): string {\n    if (user.isCommission) {\n      return \"Yes\";\n    } else {\n      return \"No\";\n    }\n  }\n\n  getCommissionColor(user: UserGetDto): string {\n    if (user.isCommission) {\n      return \"primary\";\n    } else {\n      return \"accent\";\n    }\n  }\n\n  getUserStatus(user: UserGetDto): string {\n    if (!user.isEnabled) return \"Disabled\";\n    if (user.isLocked) return \"Locked\";\n    return \"Active\";\n  }\n\n  getStatusColor(user: UserGetDto): string {\n    if (!user.isEnabled) return \"warn\";\n    if (user.isLocked) return \"accent\";\n    return \"primary\";\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, \"\");\n    inputElement.focus(); // Optional: keeps focus on the input after clearing\n  }\n\n  // Function to update table data\n  private updateTable(users: UserGetDto[]): void {\n    this.dataSource.data = users;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <span>Users</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new User\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedUsers()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"username\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let user\" mat-cell> {{ user.id }}</td>\n      </ng-container>\n\n      <!-- Username Column -->\n      <ng-container matColumnDef=\"username\">\n        <th *matHeaderCellDef class=\"mat-typography font-weight-bold\" mat-header-cell mat-sort-header> Username</th>\n        <td *matCellDef=\"let user\" mat-cell> {{ user.username }}</td>\n      </ng-container>\n\n      <!-- Full Name Column -->\n      <ng-container matColumnDef=\"fullName\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> Full Name</th>\n        <td *matCellDef=\"let user\" mat-cell> {{ user.firstName }} {{ user.lastName }}</td>\n      </ng-container>\n\n      <!-- Commission Column -->\n      <ng-container matColumnDef=\"commission\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> Commission</th>\n        <td *matCellDef=\"let user\" mat-cell>\n          <span [ngClass]=\"'mat-' + getCommissionColor(user) + '-text'\">\n            {{ getUserCommission(user) }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Status Column -->\n      <ng-container matColumnDef=\"status\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> Status</th>\n        <td *matCellDef=\"let user\" mat-cell>\n          <span [ngClass]=\"'mat-' + getStatusColor(user) + '-text'\">\n            {{ getUserStatus(user) }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let user\" class=\"action-buttons\" mat-cell>\n          <button (click)=\"openViewDialog(user)\" color=\"primary\" mat-icon-button matTooltip=\"View Details\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n          <button (click)=\"openEditDialog(user)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteUser(user)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n\n    <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n      <p>No results matching \"{{ searchQuery() }}</p>\n    </div>\n    <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n      <p>No user data available</p>\n    </div>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { UserGetDto } from \"../../../models/user.model\";\n\n@Component({\n  selector: \"app-user-view-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./user-view-dialog-component.html\",\n  styleUrls: [\"./user-view-dialog-component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserViewDialogComponent implements OnInit {\n  protected readonly data: { user: UserGetDto } = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<UserViewDialogComponent>);\n\n  ngOnInit(): void {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  getStatusText(): string {\n    const user = this.data.user;\n    if (!user.isEnabled) return \"Disabled\";\n    if (user.isLocked) return \"Locked\";\n    return \"Active\";\n  }\n\n  getStatusClass(): string {\n    const user = this.data.user;\n    if (!user.isEnabled) return \"mat-warn-text\";\n    if (user.isLocked) return \"mat-accent-text\";\n    return \"mat-primary-text\";\n  }\n}\n","<h2 mat-dialog-title>User Details</h2>\n<mat-dialog-content>\n  <div class=\"info-section\">\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Username:</span>\n      <span>{{ data.user.username }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Full Name:</span>\n      <span>{{ data.user.firstName }} {{ data.user.lastName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Email Address:</span>\n      <span>{{ data.user.emailAddress || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Email Signature:</span>\n      <span>{{ data.user.emailSignature || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Phone Number:</span>\n      <span>{{ data.user.phoneNumber || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Phone Carrier:</span>\n      <span>{{ data.user.phoneCarrier || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Preferred Contact:</span>\n      <span>{{ data.user.preferredContact || 'Not provided' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Commission Based:</span>\n      <span>{{ data.user.isCommission ? 'Yes' : 'No' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Status:</span>\n      <span [ngClass]=\"getStatusClass()\">{{ getStatusText() }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Last Login:</span>\n      <span>{{ data.user.lastLoginAt ? (data.user.lastLoginAt | date:'medium') : 'Never' }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Login Count:</span>\n      <span>{{ data.user.loginCount }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Failed Login Attempts:</span>\n      <span>{{ data.user.failedLoginAttemptsCount }}</span>\n    </div>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"close()\" mat-button>Close</button>\n</mat-dialog-actions>\n","// src/app/services/user.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { UserGetDto, UserPatchDto, UserPostDto } from \"../../models/user.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/users`;\n\n  // State signals\n  private userList = signal<UserGetDto[]>([]);\n\n  // Exposed computed signals\n  public users = computed(() => this.userList());\n\n  constructor() {\n    // Load user data immediately when service is injected\n    this.loadAllUsers();\n  }\n\n  /**\n   * Load all users from the API and update the signal\n   */\n  loadAllUsers(): void {\n    this.http.get<UserGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.userList.set(data),\n    });\n  }\n\n  /**\n   * Get a single user by ID\n   */\n  getUserById(id: number): UserGetDto | undefined {\n    return this.userList().find((user) => user.id === id);\n  }\n\n  /**\n   * Create a new user\n   */\n  createUser(user: UserPostDto): void {\n    this.http.post<UserGetDto>(this.baseUrl, user).subscribe({\n      next: (newUser) => {\n        // Update the signal with the new user\n        this.userList.update((list) => [...list, newUser]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing user\n   */\n  updateUser(id: number, userUpdate: UserPatchDto): void {\n    this.http.patch<UserGetDto>(`${this.baseUrl}/${id}`, userUpdate).subscribe({\n      next: (updatedUser) => {\n        // Update the specific user in the list\n        this.userList.update((list) =>\n          list.map((user) => (user.id === id ? updatedUser : user)),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete a user by ID\n   */\n  deleteUser(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted user from the list\n        this.userList.update((list) => list.filter((user) => user.id !== id));\n      },\n    });\n  }\n\n  /**\n   * Delete multiple users by IDs\n   */\n  deleteManyUsers(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted category from the list\n          this.userList.update((list) =>\n            list.filter((user) => !ids.includes(user.id)),\n          );\n        },\n      });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { VendorGetDto } from \"../../../models/vendor.model\";\nimport {\n  MatDatepickerInput,\n  MatDatepickerModule,\n  MatDatepickerToggle,\n} from \"@angular/material/datepicker\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { AutoMarkTouchedDirective } from \"../../../directives/auto-mark-touched.directive\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  vendor?: VendorGetDto;\n}\n\n@Component({\n  selector: \"app-vendor-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    AutoMarkTouchedDirective,\n  ],\n  templateUrl: \"./vendor-dialog.component.html\",\n  styleUrls: [\"./vendor-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorDialogComponent implements OnInit {\n  vendorForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<VendorDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle =\n      this.data.mode === \"add\" ? \"Add New Vendor\" : \"Edit Vendor\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    // Get the form values\n    const formValues = this.vendorForm.getRawValue();\n\n    // Combine date and time if both exist\n    const dateValue = formValues.lastAgingRequestDate;\n    const timeValue = formValues.lastAgingRequestTime;\n\n    if (dateValue && timeValue) {\n      // Split the time string into hours and minutes\n      const [hours, minutes] = timeValue.split(\":\");\n\n      // Create a new date object from the date value\n      const combinedDateTime = new Date(dateValue);\n\n      // Set the hours and minutes\n      combinedDateTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n\n      // Replace the separate date and time fields with the combined field\n      delete formValues.lastAgingRequestDate;\n      delete formValues.lastAgingRequestTime;\n      formValues.lastAgingRequest = combinedDateTime.toISOString();\n    }\n\n    // Close the dialog with the combined data\n    this.dialogRef.close({\n      id: this.data.vendor?.id,\n      ...formValues,\n    });\n  }\n\n  // Format time as HH:MM for time input\n  formatTime(date: Date): string {\n    return (\n      date.getHours().toString().padStart(2, \"0\") +\n      \":\" +\n      date.getMinutes().toString().padStart(2, \"0\")\n    );\n  }\n\n  private initForm(): void {\n    this.vendorForm = this.fb.group({\n      vendorName: [this.data.vendor?.vendorName || \"\", [Validators.required]],\n      address1: [this.data.vendor?.address1 || \"\"],\n      address2: [this.data.vendor?.address2 || \"\"],\n      city: [this.data.vendor?.city || \"\"],\n      state: [this.data.vendor?.state || \"\"],\n      zip: [this.data.vendor?.zip || \"\"],\n      country: [this.data.vendor?.country || \"\"],\n      phoneNumber: [this.data.vendor?.phoneNumber || \"\"],\n      vendorRepName: [this.data.vendor?.vendorRepName || \"\"],\n      vendorRepPhoneNumber: [\n        this.data.vendor?.vendorRepPhoneNumber || \"\",\n        [Validators.required],\n      ],\n      vendorRepEmailAddress: [this.data.vendor?.vendorRepEmailAddress || \"\"],\n      accountingName: [this.data.vendor?.accountingName || \"\"],\n      accountingPhoneNumber: [this.data.vendor?.accountingPhoneNumber || \"\"],\n      accountingEmailAddress: [this.data.vendor?.accountingEmailAddress || \"\"],\n      creditTermsDays: [this.data.vendor?.creditTermsDays || 0],\n      creditLimitAmount: [this.data.vendor?.creditLimitAmount || 0],\n      vendorNotes: [this.data.vendor?.vendorNotes || \"\"],\n      logisticsNotes: [this.data.vendor?.logisticsNotes || \"\"],\n      accountingNotes: [this.data.vendor?.accountingNotes || \"\"],\n      lastAgingRequestDate: new FormControl(null),\n      lastAgingRequestTime: new FormControl(null),\n    });\n\n    if (this.data.vendor?.lastAgingRequest) {\n      const date = new Date(this.data.vendor.lastAgingRequest);\n      this.vendorForm.patchValue({\n        lastAgingRequestDate: date,\n        lastAgingRequestTime: this.formatTime(date),\n      });\n    }\n  }\n}\n","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [autoMarkTouched]=\"vendorForm\" [formGroup]=\"vendorForm\">\n  <mat-dialog-content>\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Name</mat-label>\n        <input formControlName=\"vendorName\" matInput placeholder=\"Enter vendor name\">\n        <mat-error *ngIf=\"vendorForm.get('vendorName')?.hasError('required')\">\n          Vendor name is required\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Address 1</mat-label>\n        <input formControlName=\"address1\" matInput placeholder=\"Enter address 1\">\n\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Address 2</mat-label>\n        <input formControlName=\"address2\" matInput placeholder=\"Enter address 2\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>City</mat-label>\n        <input formControlName=\"city\" matInput placeholder=\"Enter city\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>State</mat-label>\n        <input formControlName=\"state\" matInput placeholder=\"Enter state\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Zip</mat-label>\n        <input formControlName=\"zip\" matInput placeholder=\"Enter zip\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Country</mat-label>\n        <input formControlName=\"country\" matInput placeholder=\"Enter country\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Phone Number</mat-label>\n        <input formControlName=\"phoneNumber\" matInput placeholder=\"Enter phone number\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Rep Name</mat-label>\n        <input formControlName=\"vendorRepName\" matInput placeholder=\"Enter vendor rep name\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Rep Phone Number</mat-label>\n        <input formControlName=\"vendorRepPhoneNumber\" matInput placeholder=\"Enter vendor rep phone number\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Rep Email Address</mat-label>\n        <input formControlName=\"vendorRepEmailAddress\" matInput placeholder=\"Enter vendor rep email address\"\n               type=\"email\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Accounting Name</mat-label>\n        <input formControlName=\"accountingName\" matInput placeholder=\"Enter accounting name\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Accounting Phone Number</mat-label>\n        <input formControlName=\"accountingPhoneNumber\" matInput placeholder=\"Enter accounting phone number\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Accounting Email Address</mat-label>\n        <input formControlName=\"accountingEmailAddress\" matInput placeholder=\"Enter accounting email address\"\n               type=\"email\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Credit Terms Days</mat-label>\n        <input formControlName=\"creditTermsDays\" matInput min=\"0\" placeholder=\"Enter credit terms days\" type=\"number\">\n        <mat-error *ngIf=\"vendorForm.get('creditTermsDays')?.hasError('min')\">\n          Credit Terms Days cannot be negative\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Credit Limit Amount</mat-label>\n        <input formControlName=\"creditLimitAmount\" matInput min=\"0\" placeholder=\"Enter credit limit amount\"\n               type=\"number\">\n        <mat-error *ngIf=\"vendorForm.get('creditLimitAmount')?.hasError('min')\">\n          Credit Limit Amount cannot be negative\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Vendor Notes</mat-label>\n        <textarea formControlName=\"vendorNotes\" matInput placeholder=\"Enter vendor notes\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Logistics Notes</mat-label>\n        <textarea formControlName=\"logisticsNotes\" matInput placeholder=\"Enter logistics notes\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Accounting Notes</mat-label>\n        <textarea formControlName=\"accountingNotes\" matInput placeholder=\"Enter accounting notes\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Last Aging Request Date</mat-label>\n        <input\n          [matDatepicker]=\"lastAgingPicker\"\n          formControlName=\"lastAgingRequestDate\"\n          matInput\n          placeholder=\"MM/DD/YYYY\">\n        <mat-datepicker-toggle [for]=\"lastAgingPicker\" matSuffix></mat-datepicker-toggle>\n        <mat-datepicker #lastAgingPicker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Last Aging Request Time</mat-label>\n        <input\n          formControlName=\"lastAgingRequestTime\"\n          matInput\n          placeholder=\"HH:MM\"\n          type=\"time\">\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"vendorForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport {\n  VendorGetDto,\n  VendorPatchDto,\n  VendorPostDto,\n} from \"../../../models/vendor.model\";\nimport { VendorDialogComponent } from \"../vendor-dialog/vendor-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { VendorService } from \"../vendor.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\nimport { VendorViewDialogComponent } from \"../vendor-view-dialog/vendor-view-dialog.component\";\n\n@Component({\n  selector: \"app-vendor-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./vendor-list.component.html\",\n  styleUrls: [\"./vendor-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<VendorGetDto>([]);\n  displayedColumns: string[] = [\"select\", \"id\", \"vendorName\", \"actions\"];\n\n  selection = new SelectionModel<VendorGetDto>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"vendor\";\n  private destroy$ = new Subject<void>();\n\n  private vendorService = inject(VendorService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the vendors signal changes\n    effect(() => {\n      this.updateTable(this.vendorService.vendors());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadVendors() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: VendorGetDto,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof VendorGetDto];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else if (value instanceof Date) {\n        return value.getTime(); // Convert Date to timestamp (number) for sorting\n      } else if (value == null) {\n        return \"\"; // Treat null/undefined as an empty string\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    this.dataSource.filterPredicate = (\n      vendor: VendorGetDto,\n      filter: string,\n    ) => {\n      const searchStr = filter.toLowerCase();\n\n      return (\n        (vendor.id?.toString() ?? \"\").includes(searchStr) ||\n        (vendor.vendorName?.toLowerCase() ?? \"\").includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(VendorDialogComponent, {\n      width: \"600px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: VendorPostDto) => {\n        if (result) {\n          this.vendorService.createVendor(result);\n          this.snackBarService.showSuccess(\"Vendor added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(vendor: VendorGetDto): void {\n    const dialogRef = this.dialog.open(VendorDialogComponent, {\n      width: \"600px\",\n      data: { mode: \"edit\", vendor },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: VendorPatchDto = {\n            vendorName: result.vendorName,\n            address1: result.address1,\n            address2: result.address2,\n            city: result.city,\n            state: result.state,\n            zip: result.zip,\n            country: result.country,\n            phoneNumber: result.phoneNumber,\n            vendorRepName: result.vendorRepName,\n            vendorRepPhoneNumber: result.vendorRepPhoneNumber,\n            vendorRepEmailAddress: result.vendorRepEmailAddress,\n            accountingName: result.accountingName,\n            accountingPhoneNumber: result.accountingPhoneNumber,\n            accountingEmailAddress: result.accountingEmailAddress,\n            creditTermsDays: result.creditTermsDays,\n            creditLimitAmount: result.creditLimitAmount,\n            vendorNotes: result.vendorNotes,\n            logisticsNotes: result.logisticsNotes,\n            accountingNotes: result.accountingNotes,\n            lastAgingRequest: result.lastAgingRequest,\n          };\n\n          this.vendorService.updateVendor(vendor.id, update);\n          this.snackBarService.showSuccess(\"Vendor updated successfully\");\n        }\n      });\n  }\n\n  openViewDialog(vendor: VendorGetDto): void {\n    this.dialog.open(VendorViewDialogComponent, {\n      width: \"600px\",\n      data: { vendor },\n      disableClose: false,\n    });\n  }\n\n  deleteVendor(vendor: VendorGetDto): void {\n    this.confirmationService\n      .confirmDeletion(`vendor \"${vendor.vendorName}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.vendorService.deleteVendor(vendor.id);\n          this.snackBarService.showSuccess(\"Vendor deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedVendors(): void {\n    const selectedIds = this.selection.selected.map((vendor) => vendor.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No vendors selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"vendor\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.vendorService.deleteManyVendors(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected vendors deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  clearSearch(inputElement: HTMLInputElement): void {\n    inputElement.value = \"\";\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, \"\");\n    inputElement.focus(); // Optional: keeps focus on the input after clearing\n  }\n\n  // Function to update table data\n  private updateTable(vendors: VendorGetDto[]): void {\n    this.dataSource.data = vendors;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <span>Vendors</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input #searchInput (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n      <mat-icon (click)=\"clearSearch(searchInput)\" *ngIf=\"searchQuery().length > 0\" class=\"clear-search\">close\n      </mat-icon>\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new Vendor\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedVendors()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n  <div class=\"mat-elevation-z8 main-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"vendorName\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let vendor\" mat-cell> {{ vendor.id }}</td>\n      </ng-container>\n\n      <!-- Vendor Name Column -->\n      <ng-container matColumnDef=\"vendorName\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> Vendor Name</th>\n        <td *matCellDef=\"let vendor\" mat-cell> {{ vendor.vendorName }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let vendor\" class=\"action-buttons\" mat-cell>\n          <button (click)=\"openViewDialog(vendor)\" color=\"primary\" mat-icon-button matTooltip=\"View Details\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n          <button (click)=\"openEditDialog(vendor)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteVendor(vendor)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n  </div>\n  <div *ngIf=\"dataSource.data.length > 0 && dataSource.filteredData.length === 0\" class=\"no-data\">\n    <p>No results matching \"{{ searchQuery() }}</p>\n  </div>\n  <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n    <p>No vendor data available</p>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  OnInit,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { VendorGetDto } from \"../../../models/vendor.model\";\n\n@Component({\n  selector: \"app-vendor-view-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./vendor-view-dialog.component.html\",\n  styleUrls: [\"./vendor-view-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorViewDialogComponent implements OnInit {\n  protected readonly data: { vendor: VendorGetDto } = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<VendorViewDialogComponent>);\n\n  ngOnInit(): void {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Vendor Details</h2>\n<mat-dialog-content>\n  <div class=\"info-section\">\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Name:</span>\n      <span>{{ data.vendor.vendorName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Address 1:</span>\n      <span>{{ data.vendor.address1 }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Address 2:</span>\n      <span>{{ data.vendor.address2 }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">City:</span>\n      <span>{{ data.vendor.city }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">State:</span>\n      <span>{{ data.vendor.state }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Zip:</span>\n      <span>{{ data.vendor.zip }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Country:</span>\n      <span>{{ data.vendor.country }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Phone Number:</span>\n      <span>{{ data.vendor.phoneNumber }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Rep Name:</span>\n      <span>{{ data.vendor.vendorRepName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Rep Phone Number:</span>\n      <span>{{ data.vendor.vendorRepPhoneNumber }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Rep Email Address:</span>\n      <span>{{ data.vendor.vendorRepEmailAddress }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Accounting Name:</span>\n      <span>{{ data.vendor.accountingName }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Accounting Phone Number:</span>\n      <span>{{ data.vendor.accountingPhoneNumber }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Accounting Email Address:</span>\n      <span>{{ data.vendor.accountingEmailAddress }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Credit Terms Days:</span>\n      <span>{{ data.vendor.creditTermsDays }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Credit Limit Amount:</span>\n      <span>{{ data.vendor.creditLimitAmount }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Vendor Notes:</span>\n      <span>{{ data.vendor.vendorNotes }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Logistics Notes:</span>\n      <span>{{ data.vendor.logisticsNotes }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Accounting Notes:</span>\n      <span>{{ data.vendor.accountingNotes }}</span>\n    </div>\n    <div class=\"detail-item\">\n      <span class=\"info-label\">Last Aging Request:</span>\n      <span>{{ data.vendor.lastAgingRequest | date: 'medium' }}</span>\n    </div>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"close()\" mat-button>Close</button>\n</mat-dialog-actions>\n","import { computed, inject, Injectable, signal } from \"@angular/core\";\nimport {\n  VendorGetDto,\n  VendorPatchDto,\n  VendorPostDto,\n} from \"../../models/vendor.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class VendorService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/vendors`;\n\n  // State signals\n  private vendorList = signal<VendorGetDto[]>([]);\n\n  // Exposed computed signals\n  public vendors = computed(() => this.vendorList());\n\n  constructor() {\n    // Load vendor data immediately when service is injected\n    this.loadAllVendors();\n  }\n\n  /**\n   * Load all vendors from the API and update the signal\n   */\n  loadAllVendors(): void {\n    this.http.get<VendorGetDto[]>(this.baseUrl).subscribe({\n      next: (data) => this.vendorList.set(data),\n    });\n  }\n\n  /**\n   * Get a single vendor by ID\n   */\n  getVendorById(id: number): VendorGetDto | undefined {\n    return this.vendorList().find((vendor) => vendor.id === id);\n  }\n\n  /**\n   * Create a new vendor\n   */\n  createVendor(vendor: VendorPostDto): void {\n    this.http.post<VendorGetDto>(this.baseUrl, vendor).subscribe({\n      next: (newVendor) => {\n        // Update the signal with the new vendor\n        this.vendorList.update((list) => [...list, newVendor]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing vendor\n   */\n  updateVendor(id: number, vendorUpdate: VendorPatchDto): void {\n    this.http\n      .patch<VendorGetDto>(`${this.baseUrl}/${id}`, vendorUpdate)\n      .subscribe({\n        next: (updatedVendor) => {\n          // Update the specific vendor in the list\n          this.vendorList.update((list) =>\n            list.map((vendor) => (vendor.id === id ? updatedVendor : vendor)),\n          );\n        },\n      });\n  }\n\n  /**\n   * Delete a vendor by ID\n   */\n  deleteVendor(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted vendor from the list\n        this.vendorList.update((list) =>\n          list.filter((vendor) => vendor.id !== id),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete multiple vendors by IDs\n   */\n  deleteManyVendors(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted vendors from the list\n          this.vendorList.update((list) =>\n            list.filter((vendor) => !ids.includes(vendor.id)),\n          );\n        },\n      });\n  }\n}\n","import { FormGroup } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[autoMarkTouched]\",\n  standalone: true,\n})\nexport class AutoMarkTouchedDirective implements OnInit, OnDestroy {\n  @Input(\"autoMarkTouched\") formGroup!: FormGroup;\n  private subscriptions: Subscription[] = [];\n\n  constructor() {}\n\n  ngOnInit() {\n    this.markFormGroupTouched(this.formGroup);\n  }\n\n  ngOnDestroy() {\n    // Clean up all subscriptions when the component is destroyed\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach((control) => {\n      // Store the subscription so we can clean it up later\n      const subscription = control.valueChanges.subscribe(() => {\n        control.markAsTouched();\n      });\n\n      this.subscriptions.push(subscription);\n\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      // Redirect to login if not authenticated\n      void this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n}\n","import { inject, Injectable } from \"@angular/core\";\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from \"@angular/common/http\";\nimport { finalize, Observable } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\nimport { LoadingService } from \"../services/loading.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept<T>(\n    req: HttpRequest<T>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<T>> {\n    // Get the token from the AuthService (or other storage like localStorage)\n    const token = this.authService.getToken(); // Make sure to implement getToken() method\n    const loadingService = inject(LoadingService);\n\n    if (token) {\n      // Clone the request and add the authorization header\n      const clonedRequest = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      const url = new URL(req.urlWithParams, window.location.origin);\n      const queryParams = url.searchParams;\n      const isInfiniteScroll =\n        queryParams.has(\"page\") && queryParams.get(\"page\") !== \"0\";\n\n      if (!isInfiniteScroll) loadingService.setLoading(true);\n      return next.handle(clonedRequest).pipe(\n        finalize(() => {\n          // Stop loading when the request completes (success or error)\n          if (!isInfiniteScroll) loadingService.setLoading(false);\n        }),\n      );\n    }\n\n    // If there's no token, continue with the original request\n    return next.handle(req);\n  }\n}\n","import { Injectable, signal } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { LoginResponse } from \"../models/login-response.model \";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  private tokenKey = \"authToken\";\n  private fullnameKey = \"fullname\";\n  private _firstName = signal<string | null>(null);\n  firstName = this._firstName.asReadonly();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) {}\n\n  login(username: string, password: string): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(\n      `${environment.apiUrl}/public/auth/login`,\n      {\n        username,\n        password,\n      },\n    );\n  }\n\n  passwordRequest(username: string): Observable<unknown> {\n    return this.http.post<unknown>(\n      `${environment.apiUrl}/public/auth/password-request`,\n      { username },\n    );\n  }\n\n  passwordReset(password: string, token: string): Observable<unknown> {\n    return this.http.post<unknown>(\n      `${environment.apiUrl}/public/auth/password-reset`,\n      { password, token },\n    );\n  }\n\n  saveFullnameAndToken(fullname: string, token: string): void {\n    localStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.fullnameKey, fullname);\n  }\n\n  // Retrieve the token (from sessionStorage first, then fallback to localStorage)\n  getToken(): string | null {\n    return localStorage.getItem(this.tokenKey);\n  }\n\n  getFullname(): string | null {\n    return localStorage.getItem(this.fullnameKey);\n  }\n\n  // Check if the user is logged in by verifying if a token exists\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem(this.tokenKey);\n    this._firstName.set(this.getFullname());\n    return !!token;\n  }\n\n  // Optional: method to log out\n  logout(): void {\n    localStorage.removeItem(this.tokenKey);\n    localStorage.removeItem(this.fullnameKey);\n    this._firstName.set(null);\n    void this.router.navigate([\"/login\"]);\n  }\n\n  // Check if token exists and is not expired\n  /*\n  isTokenValid(url?: string): boolean {\n    // Skip token validation if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication, skipping token validation:', url);\n      return true;\n    }\n\n    const token = this.getToken();\n    if (!token) {\n      console.warn('No token found');\n      return false;\n    }\n\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      console.warn('Invalid token payload');\n      return false;\n    }\n\n    const expiryTime = payload.exp * 1000; // Convert to milliseconds\n    const currentTime = Date.now();\n    const isValid = currentTime < expiryTime;\n    console.log('Token validity:', isValid); // Debug: Log token validity\n    return isValid;\n  }\n\n  // Decode the token to get its payload\n  private decodeToken(token: string): any | null {\n    try {\n      const payloadPart = token.split('.')[1];\n      const decodedPayload = atob(payloadPart);\n      const parsedPayload = JSON.parse(decodedPayload);\n      console.log('Decoded token payload:', parsedPayload); // Debug: Log decoded payload\n      return parsedPayload;\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      return null;\n    }\n  }\n*/\n}\n","import { ErrorHandler, Injectable } from \"@angular/core\";\nimport { SnackbarService } from \"./snackbar.service\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(\n    private snackBarService: SnackbarService,\n    private router: Router,\n    private authService: AuthService,\n  ) {}\n\n  handleError(error: unknown) {\n    if (error instanceof HttpErrorResponse) {\n      // Check network connectivity\n      if (!navigator.onLine) {\n        this.snackBarService.showError(\"No internet connection\");\n        return;\n      }\n\n      // Handle client-side errors\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showError(error.error.message);\n        return;\n      }\n\n      // Handle specific HTTP status codes\n      switch (error.status) {\n        case 401:\n          this.authService.logout();\n          this.snackBarService.showError(\n            \"Unauthorized. Please enter your credentials.\",\n          );\n          void this.router.navigate([\"/login\"]);\n          break;\n\n        case 403: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || \"Try again.\";\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 423: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || \"Try again.\";\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 404:\n          this.snackBarService.showError(\"Resource not found.\");\n          break;\n\n        case 413:\n          this.snackBarService.showError(\"File too large.\");\n          break;\n        case 500: {\n          const errorMessage =\n            error.error?.message || \"Please try again later.\";\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n          break;\n        }\n        default: {\n          console.error(\"An error occurred:\", error);\n          const errorMessage =\n            error.error?.message || \"An unexpected error occurred.\";\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n        }\n      }\n\n      // Log the full error for debugging\n      console.error(\"Full error details:\", {\n        status: error.status,\n        statusText: error.statusText,\n        url: error.url,\n        error: error.error,\n      });\n    } else {\n      // Handle client-side/non-HTTP errors\n      console.error(\"Client-side error:\", error);\n      this.snackBarService.showError(\"An unexpected error occurred\");\n    }\n  }\n}\n","// src/app/services/loading.service.ts\n\nimport { Injectable, signal } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LoadingService {\n  // Use a signal to track loading state\n  private _loading = signal(false);\n\n  // Expose a readonly version of the loading signal\n  public loading = this._loading.asReadonly();\n\n  /**\n   * Set the loading state\n   * @param isLoading Whether the application is loading\n   */\n  setLoading(isLoading: boolean): void {\n    this._loading.set(isLoading);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PwaService {\n  private isPwa = new BehaviorSubject<boolean>(false);\n  isPwa$ = this.isPwa.asObservable();\n\n  updateValue(isPwa: boolean): void {\n    this.isPwa.next(isPwa);\n  }\n}\n","// src/app/services/search.service.ts\n\nimport { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SearchTableService {\n  private searchSubjects = new Map<string, Subject<string>>();\n\n  /**\n   * Gets or creates a search observable for a specific entity type\n   * @param entityType The entity type identifier (e.g., 'fish', 'user', etc.)\n   * @param debounceMs Debounce time in milliseconds (default: 300ms)\n   * @returns An observable that emits search query values\n   */\n  getSearchObservable(\n    entityType: string,\n    debounceMs = 300,\n  ): Observable<string> {\n    if (!this.searchSubjects.has(entityType)) {\n      this.searchSubjects.set(entityType, new Subject<string>());\n    }\n\n    return this.searchSubjects\n      .get(entityType)!\n      .pipe(debounceTime(debounceMs), distinctUntilChanged());\n  }\n\n  /**\n   * Updates the search query for a specific entity type\n   * @param entityType The entity type identifier\n   * @param query The search query string\n   */\n  updateSearchQuery(entityType: string, query: string): void {\n    if (!this.searchSubjects.has(entityType)) {\n      this.searchSubjects.set(entityType, new Subject<string>());\n    }\n\n    this.searchSubjects.get(entityType)!.next(query);\n  }\n\n  /**\n   * Clears search subject for an entity type\n   * @param entityType The entity type identifier\n   */\n  //clearSearch(entityType: string): void {\n  //  if (this.searchSubjects.has(entityType)) {\n  //    const subject = this.searchSubjects.get(entityType)!;\n  //    subject.next(\"\");\n  //  }\n  //}\n\n  /**\n   * Destroys the search subject for an entity type\n   * @param entityType The entity type identifier\n   */\n  destroySearch(entityType: string): void {\n    if (this.searchSubjects.has(entityType)) {\n      const subject = this.searchSubjects.get(entityType)!;\n      subject.complete();\n      this.searchSubjects.delete(entityType);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarRef, MatSnackBarVerticalPosition, TextOnlySnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  // Define standard styles\n  private styles = {\n    error: 'error-snackbar',\n    success: 'success-snackbar',\n    warning: 'warning-snackbar',\n    info: 'info-snackbar',\n  };\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  private showSnackBar(message: string, style?: 'error' | 'success' | 'warning' | 'info', duration: number = this.duration) {\n    // Close any existing snackbar\n    this.closeSnackBar();\n\n    // Get the appropriate style class\n    const panelClass = style ? this.styles[style] : undefined;\n\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: panelClass,\n    });\n\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n\n    return this.snackBarRef;\n  }\n\n  // Convenience methods for different types of messages\n  showError(message: string, duration?: number) {\n    return this.showSnackBar(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration?: number) {\n    return this.showSnackBar(message, 'success', duration);\n  }\n\n  showWarning(message: string, duration?: number) {\n    return this.showSnackBar(message, 'warning', duration);\n  }\n\n  showInfo(message: string, duration?: number) {\n    return this.showSnackBar(message, 'info', duration);\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: \"https://pffc-app-uat-latest.onrender.com/api\",\n};\n","import { AppComponent } from \"./app/app.component\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { provideAnimations } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app/app-routing.module\";\nimport { bootstrapApplication, BrowserModule } from \"@angular/platform-browser\";\nimport { GlobalErrorHandlerService } from \"./app/services/global-error-handler.service\";\nimport { ErrorHandler, importProvidersFrom, isDevMode } from \"@angular/core\";\nimport {\n  HTTP_INTERCEPTORS,\n  provideHttpClient,\n  withInterceptorsFromDi,\n} from \"@angular/common/http\";\nimport { RouterModule } from \"@angular/router\";\nimport { AuthInterceptor } from \"./app/interceptors/auth.interceptor\";\nimport { provideServiceWorker } from \"@angular/service-worker\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      RouterModule,\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      MatSortModule,\n    ),\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimations(),\n    provideServiceWorker(\"ngsw-worker.js\", {\n      enabled: !isDevMode(),\n      registrationStrategy: \"registerWhenStable:30000\",\n    }),\n    importProvidersFrom(MatNativeDateModule),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","HomeComponent","LoginComponent","LogoutComponent","AuthGuard","PasswordRequestComponent","PasswordResetComponent","SidebarLayoutComponent","CategoryListComponent","UserListComponent","HelpComponent","ProfileComponent","DataComponent","VendorListComponent","HarvestTypeListComponent","UnitTypeListComponent","PurchaseProductListComponent","OriginListComponent","routes","path","component","children","title","canActivate","redirectTo","AppRoutingModule","forRoot","imports","i1","exports","isDevMode","RouterOutlet","CommonModule","MatToolbarModule","MatIconModule","environment","LoadingIndicatorComponent","AppComponent","constructor","meta","swUpdate","apiUrl","showWarning","includes","alert","ngOnInit","setTitle","addTags","name","content","checkForUpdate","isEnabled","then","isUpdateAvailable","confirmUpdate","confirm","activateUpdate","window","location","reload","catch","error","console","i0","ɵɵdirectiveInject","Title","Meta","i2","SwUpdate","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","styles","changeDetection","MatButton","ɵɵlistener","AppInstallPromptComponent_Conditional_0_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","promptInstall","ɵɵtext","AppInstallPromptComponent_Conditional_2_Template_button_click_1_listener","_r3","showIosInstructions","AppInstallPromptComponent","pwaService","snackbarService","platform","deferredPrompt","isPwa$","isPwa","isRunningAsPWA","isIosButNotPwa","isIOS","plat","beforeInstallPromptHandler","event","preventDefault","updateValue","addEventListener","ngOnDestroy","removeEventListener","prompt","userChoice","showInfo","userAgent","navigator","toLowerCase","test","IOS","isStandalone","matchMedia","matches","isIOSStandalone","isFullscreen","innerHeight","screen","height","PwaService","SnackbarService","i3","Platform","consts","AppInstallPromptComponent_Template","ɵɵtemplate","AppInstallPromptComponent_Conditional_0_Template","AppInstallPromptComponent_Conditional_2_Template","ɵɵconditional","ɵɵpipeBind1","i4","AsyncPipe","inject","MAT_DIALOG_DATA","MatDialogModule","MatDialogRef","MatFormFieldModule","MatInputModule","MatButtonModule","FormBuilder","ReactiveFormsModule","Validators","AutoMarkTouchedDirective","CategoryDialogComponent","dialogTitle","data","dialogRef","fb","initForm","mode","onCancel","close","onSubmit","categoryForm","valid","id","category","getRawValue","group","categoryName","required","CategoryDialogComponent_Template","CategoryDialogComponent_Template_form_ngSubmit_2_listener","CategoryDialogComponent_mat_error_8_Template","CategoryDialogComponent_Template_button_click_10_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","tmp_3_0","get","hasError","invalid","ɵɵtextInterpolate1","NgIf","MatDialogTitle","MatDialogActions","MatDialogContent","MatFormField","MatLabel","MatError","MatInput","i5","i6","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","effect","signal","MatTableDataSource","MatTableModule","MatCheckboxModule","MatDialog","MatTooltipModule","SelectionModel","ConfirmationService","MatSort","MatSortModule","Subject","takeUntil","CategoryService","SearchTableService","CategoryListComponent_mat_icon_10_Template_mat_icon_click_0_listener","_r2","ctx_r2","searchInput_r4","ɵɵreference","clearSearch","CategoryListComponent_th_21_Template_mat_checkbox_change_1_listener","$event","_r5","toggleAllRows","selection","hasValue","isAllSelected","CategoryListComponent_td_22_Template_mat_checkbox_change_1_listener","row_r7","_r6","$implicit","toggle","CategoryListComponent_td_22_Template_mat_checkbox_click_1_listener","stopPropagation","isSelected","category_r8","category_r9","CategoryListComponent_td_31_Template_button_click_1_listener","category_r11","_r10","openEditDialog","CategoryListComponent_td_31_Template_button_click_4_listener","deleteCategory","searchQuery","dataSource","displayedColumns","ENTITY_TYPE","destroy$","categoryService","dialog","snackBarService","confirmationService","searchTableService","updateTable","categories","configureDataSource","setupSearch","ngAfterViewInit","configureSort","next","complete","destroySearch","sort","sortingDataAccessor","sortHeaderId","value","getSearchObservable","pipe","subscribe","searchValue","set","filter","trim","filterPredicate","searchStr","toString","numSelected","selected","length","numRows","clear","select","openAddDialog","open","width","afterClosed","result","createCategory","showSuccess","update","updateCategory","confirmDeletion","confirmed","deleteSelectedCategories","selectedIds","map","showError","confirmBulkDeletion","deleteManyCategory","onSearch","target","updateSearchQuery","inputElement","focus","viewQuery","CategoryListComponent_Query","CategoryListComponent_Template_input_input_8_listener","CategoryListComponent_mat_icon_10_Template","CategoryListComponent_Template_button_click_11_listener","CategoryListComponent_Template_button_click_14_listener","ɵɵelementContainerStart","CategoryListComponent_th_21_Template","CategoryListComponent_td_22_Template","CategoryListComponent_th_24_Template","CategoryListComponent_td_25_Template","CategoryListComponent_th_27_Template","CategoryListComponent_td_28_Template","CategoryListComponent_th_30_Template","CategoryListComponent_td_31_Template","CategoryListComponent_tr_32_Template","CategoryListComponent_tr_33_Template","CategoryListComponent_div_34_Template","CategoryListComponent_div_35_Template","filteredData","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatCheckbox","MatIcon","MatIconButton","MatMiniFabButton","MatToolbar","i7","MatTooltip","i8","MatSortHeader","computed","HttpClient","http","baseUrl","categoryList","loadAllCategories","getCategoryById","find","post","newCategory","list","categoryUpdate","patch","updatedCategory","delete","ids","body","factory","ɵfac","providedIn","ConfirmationDialogComponent","confirmButtonText","cancelButtonText","confirmButtonColor","onConfirm","ConfirmationDialogComponent_Template","ConfirmationDialogComponent_Template_button_click_5_listener","ConfirmationDialogComponent_Template_button_click_7_listener","message","ɵɵsanitizeHtml","disableClose","itemName","count","itemType","DataComponent_mat_icon_10_Template_mat_icon_click_0_listener","item_r5","item_r6","description","DataComponent_td_21_Template_button_click_1_listener","item_r8","_r7","navigateTo","route","router","DATA","navigate","Router","DataComponent_Query","DataComponent_Template_input_input_8_listener","DataComponent_mat_icon_10_Template","DataComponent_th_14_Template","DataComponent_td_15_Template","DataComponent_th_17_Template","DataComponent_td_18_Template","DataComponent_th_20_Template","DataComponent_td_21_Template","DataComponent_tr_22_Template","DataComponent_tr_23_Template","DataComponent_div_24_Template","DataComponent_div_25_Template","HarvestTypeDialogComponent","harvestTypeForm","harvestType","HarvestTypeDialogComponent_Template","HarvestTypeDialogComponent_Template_form_ngSubmit_2_listener","HarvestTypeDialogComponent_mat_error_8_Template","HarvestTypeDialogComponent_Template_button_click_10_listener","HarvestTypeService","HarvestTypeListComponent_mat_icon_10_Template_mat_icon_click_0_listener","HarvestTypeListComponent_th_21_Template_mat_checkbox_change_1_listener","HarvestTypeListComponent_td_22_Template_mat_checkbox_change_1_listener","HarvestTypeListComponent_td_22_Template_mat_checkbox_click_1_listener","harvestType_r8","harvestType_r9","HarvestTypeListComponent_td_31_Template_button_click_1_listener","harvestType_r11","HarvestTypeListComponent_td_31_Template_button_click_4_listener","deleteHarvestType","harvestTypeService","harvestTypes","createHarvestType","updateHarvestType","deleteManyHarvestType","HarvestTypeListComponent_Query","HarvestTypeListComponent_Template_input_input_8_listener","HarvestTypeListComponent_mat_icon_10_Template","HarvestTypeListComponent_Template_button_click_11_listener","HarvestTypeListComponent_Template_button_click_14_listener","HarvestTypeListComponent_th_21_Template","HarvestTypeListComponent_td_22_Template","HarvestTypeListComponent_th_24_Template","HarvestTypeListComponent_td_25_Template","HarvestTypeListComponent_th_27_Template","HarvestTypeListComponent_td_28_Template","HarvestTypeListComponent_th_30_Template","HarvestTypeListComponent_td_31_Template","HarvestTypeListComponent_tr_32_Template","HarvestTypeListComponent_tr_33_Template","HarvestTypeListComponent_div_34_Template","HarvestTypeListComponent_div_35_Template","harvestTypeList","loadAllHarvestTypes","getHarvestTypeById","newHarvestType","harvestTypeUpdate","updatedHarvestType","MatCard","MatCardContent","HelpComponent_Template","authService","username","getFullname","AuthService","HomeComponent_Template","MatProgressSpinnerModule","LoadingService","loadingService","LoadingIndicatorComponent_Template","LoadingIndicatorComponent_div_0_Template","loading","MatProgressSpinner","catchError","throwError","MatCardModule","ctx_r0","errorMessage","cdr","formBuilder","hidePassword","loginForm","password","onLogin","login","status","markForCheck","firstName","lastName","token","saveFullnameAndToken","togglePasswordVisibility","ChangeDetectorRef","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_7_listener","LoginComponent_mat_error_16_Template","LoginComponent_Template_button_click_23_listener","LoginComponent_mat_error_26_Template","LoginComponent_span_32_Template","LoginComponent_div_33_Template","LoginComponent_div_38_Template","LoginComponent_div_39_Template","tmp_2_0","tmp_5_0","ɵɵpureFunction0","_c0","MatPrefix","MatSuffix","i9","RouterLink","logout","LogoutComponent_Template","OriginDialogComponent","originForm","origin","originName","OriginDialogComponent_Template","OriginDialogComponent_Template_form_ngSubmit_2_listener","OriginDialogComponent_mat_error_8_Template","OriginDialogComponent_Template_button_click_10_listener","OriginService","OriginListComponent_mat_icon_10_Template_mat_icon_click_0_listener","OriginListComponent_th_21_Template_mat_checkbox_change_1_listener","OriginListComponent_td_22_Template_mat_checkbox_change_1_listener","OriginListComponent_td_22_Template_mat_checkbox_click_1_listener","origin_r8","origin_r9","OriginListComponent_td_31_Template_button_click_1_listener","origin_r11","OriginListComponent_td_31_Template_button_click_4_listener","deleteOrigin","originService","origins","createOrigin","updateOrigin","deleteManyOrigin","OriginListComponent_Query","OriginListComponent_Template_input_input_8_listener","OriginListComponent_mat_icon_10_Template","OriginListComponent_Template_button_click_11_listener","OriginListComponent_Template_button_click_14_listener","OriginListComponent_th_21_Template","OriginListComponent_td_22_Template","OriginListComponent_th_24_Template","OriginListComponent_td_25_Template","OriginListComponent_th_27_Template","OriginListComponent_td_28_Template","OriginListComponent_th_30_Template","OriginListComponent_td_31_Template","OriginListComponent_tr_32_Template","OriginListComponent_tr_33_Template","OriginListComponent_div_34_Template","OriginListComponent_div_35_Template","originList","loadAllOrigins","getOriginById","newOrigin","originUpdate","updatedOrigin","passwordRequestForm","passwordRequest","PasswordRequestComponent_Template","PasswordRequestComponent_Template_form_ngSubmit_7_listener","PasswordRequestComponent_mat_error_18_Template","mismatchedPassword","hideConfirmPassword","passwordResetForm","minLength","specialCharacterValidator","confirmPassword","valueChanges","paramMap","params","passwordReset","control","hasSpecialCharacter","noSpecialCharacter","toggleConfirmPasswordVisibility","ActivatedRoute","PasswordResetComponent_Template","PasswordResetComponent_Template_form_ngSubmit_7_listener","PasswordResetComponent_Template_button_click_18_listener","PasswordResetComponent_mat_error_21_Template","PasswordResetComponent_Template_button_click_28_listener","PasswordResetComponent_mat_error_31_Template","PasswordResetComponent_div_33_Template","PasswordResetComponent_div_34_Template","PasswordResetComponent_div_35_Template","tmp_4_0","tmp_7_0","tmp_8_0","errors","tmp_9_0","i10","i11","ProfileComponent_Template","MatSelectModule","MatSlideToggleModule","harvestType_r1","origin_r2","category_r3","unitType_r4","unitTypeName","defaultBuyerUser_r5","ɵɵtextInterpolate2","PurchaseProductDialogComponent","productForm","formValues","postData","purchaseProductDescription","packSize","defaultCostPrice","harvestTypeId","shelfLife","isFixedPack","isActive","notes","isAllowLbs","rotationDays","defaultBuyerUserId","nonInventory","originId","categoryId","unitTypeId","patchData","purchaseProduct","min","defaultBuyerUser","unitType","PurchaseProductDialogComponent_Template","PurchaseProductDialogComponent_Template_form_ngSubmit_2_listener","PurchaseProductDialogComponent_mat_error_9_Template","PurchaseProductDialogComponent_mat_error_15_Template","PurchaseProductDialogComponent_mat_error_16_Template","PurchaseProductDialogComponent_mat_error_21_Template","PurchaseProductDialogComponent_mat_error_22_Template","PurchaseProductDialogComponent_mat_option_28_Template","PurchaseProductDialogComponent_mat_error_29_Template","PurchaseProductDialogComponent_mat_error_34_Template","PurchaseProductDialogComponent_mat_error_40_Template","PurchaseProductDialogComponent_mat_option_46_Template","PurchaseProductDialogComponent_mat_error_47_Template","PurchaseProductDialogComponent_mat_option_52_Template","PurchaseProductDialogComponent_mat_error_53_Template","PurchaseProductDialogComponent_mat_option_59_Template","PurchaseProductDialogComponent_mat_error_60_Template","PurchaseProductDialogComponent_mat_option_65_Template","PurchaseProductDialogComponent_mat_error_66_Template","PurchaseProductDialogComponent_Template_button_click_82_listener","tmp_6_0","tmp_10_0","tmp_11_0","tmp_13_0","tmp_15_0","unitTypes","tmp_17_0","defaultBuyerUsers","tmp_19_0","NgForOf","MatSelect","MatOption","MatSlideToggle","NumberValueAccessor","debounceTime","distinctUntilChanged","PurchaseProductService","PurchaseProductViewDialogComponent","UnitTypeService","UserService","InfiniteScrollDirective","PurchaseProductListComponent_mat_icon_10_Template_mat_icon_click_0_listener","PurchaseProductListComponent_th_21_Template_mat_checkbox_change_1_listener","PurchaseProductListComponent_td_22_Template_mat_checkbox_change_1_listener","product_r7","PurchaseProductListComponent_td_22_Template_mat_checkbox_click_1_listener","product_r8","product_r9","product_r10","product_r11","product_r12","product_r13","PurchaseProductListComponent_td_43_Template_button_click_1_listener","product_r15","_r14","openViewDialog","PurchaseProductListComponent_td_43_Template_button_click_4_listener","PurchaseProductListComponent_td_43_Template_button_click_7_listener","deletePurchaseProduct","searchInputSubject","purchaseProductService","unitTypeService","userService","purchaseProducts","loadAllUnitTypes","loadAllUsers","searchTerm","setSearchTerm","sortChange","setSortParameters","active","direction","getPropertyByPath","Date","getTime","onScroll","loadNextPage","users","createPurchaseProduct","updatePurchaseProduct","loadPurchaseProducts","deleteSelectedPurchaseProducts","product","deleteManyPurchaseProducts","obj","split","reduce","o","i","undefined","PurchaseProductListComponent_Query","PurchaseProductListComponent_Template_div_scrolled_0_listener","PurchaseProductListComponent_Template_input_input_8_listener","PurchaseProductListComponent_mat_icon_10_Template","PurchaseProductListComponent_Template_button_click_11_listener","PurchaseProductListComponent_Template_button_click_14_listener","PurchaseProductListComponent_th_21_Template","PurchaseProductListComponent_td_22_Template","PurchaseProductListComponent_th_24_Template","PurchaseProductListComponent_td_25_Template","PurchaseProductListComponent_th_27_Template","PurchaseProductListComponent_td_28_Template","PurchaseProductListComponent_th_30_Template","PurchaseProductListComponent_td_31_Template","PurchaseProductListComponent_th_33_Template","PurchaseProductListComponent_td_34_Template","PurchaseProductListComponent_th_36_Template","PurchaseProductListComponent_td_37_Template","PurchaseProductListComponent_th_39_Template","PurchaseProductListComponent_td_40_Template","PurchaseProductListComponent_th_42_Template","PurchaseProductListComponent_td_43_Template","PurchaseProductListComponent_tr_44_Template","PurchaseProductListComponent_tr_45_Template","PurchaseProductListComponent_div_46_Template","CurrencyPipe","HttpParams","purchaseProductsList","totalElements","totalPages","currentPage","page","hasMoreData","pageSize","size","isLoading","sortField","sortDirection","resetList","response","term","field","getPurchaseProductById","newPurchaseProduct","purchaseProductUpdate","updatePurchaseProductGetDto","purchaseProductGetDto","PurchaseProductViewDialogComponent_Template","PurchaseProductViewDialogComponent_Template_button_click_81_listener","NgOptimizedImage","MatSidenavModule","MatListModule","MatExpansionModule","MatDividerModule","name_r2","sidebarOpened","toggleSidebar","state","SidebarLayoutComponent_Query","SidebarLayoutComponent_Template_button_click_3_listener","SidebarLayoutComponent_span_11_Template","RouterLinkActive","MatSidenav","MatSidenavContainer","MatSidenavContent","MatNavList","MatListItem","MatListItemIcon","MatDivider","MatListItemTitle","MatAccordion","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","UnitTypeDialogComponent","unitTypeForm","UnitTypeDialogComponent_Template","UnitTypeDialogComponent_Template_form_ngSubmit_2_listener","UnitTypeDialogComponent_mat_error_8_Template","UnitTypeDialogComponent_Template_button_click_10_listener","UnitTypeListComponent_mat_icon_10_Template_mat_icon_click_0_listener","UnitTypeListComponent_th_21_Template_mat_checkbox_change_1_listener","UnitTypeListComponent_td_22_Template_mat_checkbox_change_1_listener","UnitTypeListComponent_td_22_Template_mat_checkbox_click_1_listener","unitType_r8","unitType_r9","UnitTypeListComponent_td_31_Template_button_click_1_listener","unitType_r11","UnitTypeListComponent_td_31_Template_button_click_4_listener","deleteUnitType","createUnitType","updateUnitType","deleteManyUnitType","UnitTypeListComponent_Query","UnitTypeListComponent_Template_input_input_8_listener","UnitTypeListComponent_mat_icon_10_Template","UnitTypeListComponent_Template_button_click_11_listener","UnitTypeListComponent_Template_button_click_14_listener","UnitTypeListComponent_th_21_Template","UnitTypeListComponent_td_22_Template","UnitTypeListComponent_th_24_Template","UnitTypeListComponent_td_25_Template","UnitTypeListComponent_th_27_Template","UnitTypeListComponent_td_28_Template","UnitTypeListComponent_th_30_Template","UnitTypeListComponent_td_31_Template","UnitTypeListComponent_tr_32_Template","UnitTypeListComponent_tr_33_Template","UnitTypeListComponent_div_34_Template","UnitTypeListComponent_div_35_Template","unitTypeList","getUnitTypeById","newUnitType","unitTypeUpdate","updatedUnitType","UserDialogComponent_div_10_mat_error_5_Template","tmp_1_0","userForm","user","lastLoginAt","ɵɵpipeBind2","loginCount","failedLoginAttemptsCount","UserDialogComponent","emailAddress","email","emailSignature","phoneNumber","phoneCarrier","preferredContact","isCommission","isLocked","UserDialogComponent_Template","UserDialogComponent_Template_form_ngSubmit_2_listener","UserDialogComponent_mat_error_9_Template","UserDialogComponent_div_10_Template","UserDialogComponent_mat_error_16_Template","UserDialogComponent_mat_error_21_Template","UserDialogComponent_mat_error_27_Template","UserDialogComponent_mat_error_28_Template","UserDialogComponent_div_55_Template","UserDialogComponent_Template_button_click_57_listener","DatePipe","UserViewDialogComponent","UserListComponent_mat_icon_10_Template_mat_icon_click_0_listener","UserListComponent_th_21_Template_mat_checkbox_change_1_listener","UserListComponent_td_22_Template_mat_checkbox_change_1_listener","UserListComponent_td_22_Template_mat_checkbox_click_1_listener","user_r8","user_r9","user_r10","getCommissionColor","user_r11","getUserCommission","getStatusColor","user_r12","getUserStatus","UserListComponent_td_40_Template_button_click_1_listener","user_r14","_r13","UserListComponent_td_40_Template_button_click_4_listener","UserListComponent_td_40_Template_button_click_7_listener","deleteUser","allColumns","setDisplayedColumns","onresize","innerWidth","createUser","updateUser","deleteSelectedUsers","deleteManyUsers","UserListComponent_Query","UserListComponent_Template_input_input_8_listener","UserListComponent_mat_icon_10_Template","UserListComponent_Template_button_click_11_listener","UserListComponent_Template_button_click_14_listener","UserListComponent_th_21_Template","UserListComponent_td_22_Template","UserListComponent_th_24_Template","UserListComponent_td_25_Template","UserListComponent_th_27_Template","UserListComponent_td_28_Template","UserListComponent_th_30_Template","UserListComponent_td_31_Template","UserListComponent_th_33_Template","UserListComponent_td_34_Template","UserListComponent_th_36_Template","UserListComponent_td_37_Template","UserListComponent_th_39_Template","UserListComponent_td_40_Template","UserListComponent_tr_41_Template","UserListComponent_tr_42_Template","UserListComponent_div_43_Template","UserListComponent_div_44_Template","NgClass","getStatusText","getStatusClass","UserViewDialogComponent_Template","UserViewDialogComponent_Template_button_click_66_listener","userList","getUserById","newUser","userUpdate","updatedUser","FormControl","MatDatepickerModule","MatNativeDateModule","VendorDialogComponent","vendorForm","dateValue","lastAgingRequestDate","timeValue","lastAgingRequestTime","hours","minutes","combinedDateTime","setHours","parseInt","lastAgingRequest","toISOString","vendor","formatTime","date","getHours","padStart","getMinutes","vendorName","address1","address2","city","zip","country","vendorRepName","vendorRepPhoneNumber","vendorRepEmailAddress","accountingName","accountingPhoneNumber","accountingEmailAddress","creditTermsDays","creditLimitAmount","vendorNotes","logisticsNotes","accountingNotes","patchValue","VendorDialogComponent_Template","VendorDialogComponent_Template_form_ngSubmit_2_listener","VendorDialogComponent_mat_error_9_Template","VendorDialogComponent_mat_error_75_Template","VendorDialogComponent_mat_error_80_Template","VendorDialogComponent_Template_button_click_109_listener","lastAgingPicker_r2","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","MinValidator","VendorService","VendorViewDialogComponent","VendorListComponent_mat_icon_10_Template_mat_icon_click_0_listener","VendorListComponent_th_21_Template_mat_checkbox_change_1_listener","VendorListComponent_td_22_Template_mat_checkbox_change_1_listener","VendorListComponent_td_22_Template_mat_checkbox_click_1_listener","vendor_r8","vendor_r9","VendorListComponent_td_31_Template_button_click_1_listener","vendor_r11","VendorListComponent_td_31_Template_button_click_4_listener","VendorListComponent_td_31_Template_button_click_7_listener","deleteVendor","vendorService","vendors","createVendor","updateVendor","deleteSelectedVendors","deleteManyVendors","VendorListComponent_Query","VendorListComponent_Template_input_input_8_listener","VendorListComponent_mat_icon_10_Template","VendorListComponent_Template_button_click_11_listener","VendorListComponent_Template_button_click_14_listener","VendorListComponent_th_21_Template","VendorListComponent_td_22_Template","VendorListComponent_th_24_Template","VendorListComponent_td_25_Template","VendorListComponent_th_27_Template","VendorListComponent_td_28_Template","VendorListComponent_th_30_Template","VendorListComponent_td_31_Template","VendorListComponent_tr_32_Template","VendorListComponent_tr_33_Template","VendorListComponent_div_34_Template","VendorListComponent_div_35_Template","VendorViewDialogComponent_Template","VendorViewDialogComponent_Template_button_click_106_listener","vendorList","loadAllVendors","getVendorById","newVendor","vendorUpdate","updatedVendor","FormGroup","subscriptions","markFormGroupTouched","formGroup","forEach","sub","unsubscribe","Object","values","controls","subscription","markAsTouched","push","inputs","isLoggedIn","ɵɵinject","finalize","AuthInterceptor","intercept","req","getToken","clonedRequest","clone","setHeaders","Authorization","url","URL","urlWithParams","queryParams","searchParams","isInfiniteScroll","has","setLoading","handle","tokenKey","fullnameKey","_firstName","asReadonly","fullname","localStorage","setItem","getItem","removeItem","HttpErrorResponse","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","statusText","_loading","BehaviorSubject","asObservable","searchSubjects","Map","entityType","debounceMs","query","subject","matSnackBar","duration","verticalPosition","horizontalPos","action","success","warning","info","showSnackBar","style","closeSnackBar","panelClass","snackBarRef","horizontalPosition","onAction","dismiss","MatSnackBar","production","MatSnackBarModule","MatMenuModule","FormsModule","provideAnimations","bootstrapApplication","BrowserModule","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","provideServiceWorker","providers","provide","useClass","multi","enabled","registrationStrategy","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}