{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/app-install-prompt/app-install-prompt.component.ts","./src/app/components/app-install-prompt/app-install-prompt.component.html","./src/app/components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/components/confirmation-dialog/confirmation-dialog.component.html","./src/app/components/confirmation-dialog/confirmation-service.service.ts","./src/app/components/fish/fish-dialog/fish-dialog.component.ts","./src/app/components/fish/fish-dialog/fish-dialog.component.html","./src/app/components/fish/fish-list/fish-list.component.ts","./src/app/components/fish/fish-list/fish-list.component.html","./src/app/components/fish/fish.service.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/loading-indicator/loading-indicator.component.ts","./src/app/components/loading-indicator/loading-indicator.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/password-request/password-request.component.ts","./src/app/components/password-request/password-request.component.html","./src/app/components/password-reset/password-reset.component.ts","./src/app/components/password-reset/password-reset.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/components/sidebar-layout/sidebar-layout.component.ts","./src/app/components/sidebar-layout/sidebar-layout.component.html","./src/app/guards/auth.guard.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/loading.service.ts","./src/app/services/products.service.ts","./src/app/services/pwa.service.ts","./src/app/services/search-table.service.ts","./src/app/services/snackbar.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { LogoutComponent } from \"./components/logout/logout.component\";\nimport { ProductsComponent } from \"./components/products/products.component\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { PasswordRequestComponent } from \"./components/password-request/password-request.component\";\nimport { PasswordResetComponent } from \"./components/password-reset/password-reset.component\";\nimport { SidebarLayoutComponent } from \"./components/sidebar-layout/sidebar-layout.component\";\nimport { FishListComponent } from \"./components/fish/fish-list/fish-list.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SidebarLayoutComponent,\n    children: [\n      {\n        path: \"home\",\n        component: HomeComponent,\n        title: \"Home\",\n        canActivate: [AuthGuard],\n      },\n      { path: \"login\", component: LoginComponent, title: \"Login\" },\n      { path: \"logout\", component: LogoutComponent, title: \"Logout\" },\n      {\n        path: \"password-request\",\n        component: PasswordRequestComponent,\n        title: \"Password Request\",\n      },\n      {\n        path: \"password-reset/:token\",\n        component: PasswordResetComponent,\n        title: \"Password Reset\",\n      },\n      {\n        path: \"products\",\n        component: ProductsComponent,\n        title: \"Products\",\n        canActivate: [AuthGuard],\n      },\n      {\n        path: \"fish\",\n        component: FishListComponent,\n        title: \"Fish example\",\n        canActivate: [AuthGuard],\n      },\n\n      { path: \"**\", redirectTo: \"home\" }, // Wildcard route to handle unmatched paths, redirect to log  in\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  isDevMode,\n  OnInit,\n} from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { environment } from \"src/environments/environment\";\nimport { Meta, Title } from \"@angular/platform-browser\";\nimport { SwUpdate } from \"@angular/service-worker\";\nimport { LoadingIndicatorComponent } from \"./components/loading-indicator/loading-indicator.component\";\n\n@Component({\n  standalone: true,\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    RouterOutlet,\n    LoadingIndicatorComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n\n  //isOrderForm: boolean = false;\n\n  constructor(\n    private title: Title,\n    private meta: Meta,\n    private swUpdate: SwUpdate,\n  ) {\n    // Check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes(\"prod\")) {\n      this.showWarning = true;\n      alert(\"WARNING: Angular is in Dev mode but connected to production !!!\");\n    }\n  }\n\n  ngOnInit(): void {\n    this.title.setTitle(\"Pacific Fresh Fish Company App\");\n    this.meta.addTags([\n      {\n        name: \"description\",\n        content:\n          \"Pacific Fresh Fish Company application created by lb-advisors\",\n      },\n      { name: \"keywords\", content: \"PFF, lb-advisors, Allintel\" },\n      { name: \"robots\", content: \"index, follow\" },\n    ]);\n\n    this.checkForUpdate();\n  }\n\n  private checkForUpdate() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate\n        .checkForUpdate()\n        .then((isUpdateAvailable) => {\n          if (isUpdateAvailable) {\n            const confirmUpdate = confirm(\n              \"A new version is available. Do you want to load it?\",\n            );\n            if (confirmUpdate) {\n              this.swUpdate.activateUpdate().then(() => {\n                window.location.reload();\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error while checking for updates:\", error);\n        });\n    }\n  }\n}\n","<main>\n  <app-loading-indicator></app-loading-indicator>\n  <router-outlet></router-outlet>\n</main>\n\n<!-- Footer -->\n<footer class=\"mat-drawer-container\">\n  <div class=\"container\">\n    <div class=\"text-align-center\">\n      © 2024 - Pacific Fresh Fish Company\n      <div *ngIf=\"isDevMode\" class=\"dev-mode\">UAT ENVIRONMENT</div>\n      <div *ngIf=\"isDevMode\" class=\"dev-mode\">{{ apiUrl }}</div>\n    </div>\n  </div>\n</footer>\n","import { Platform } from \"@angular/cdk/platform\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { PwaService } from \"src/app/services/pwa.service\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\nimport { MatButton } from \"@angular/material/button\";\n\n@Component({\n  standalone: true,\n  selector: \"app-install-prompt\",\n  imports: [CommonModule, MatButton],\n  templateUrl: \"./app-install-prompt.component.html\",\n  styleUrls: [\"./app-install-prompt.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppInstallPromptComponent implements OnInit, OnDestroy {\n  beforeInstallPromptHandler?: (event: BeforeInstallPromptEvent) => void;\n  deferredPrompt: BeforeInstallPromptEvent | null = null;\n  isPwa$: Observable<boolean>;\n  isIosButNotPwa: boolean;\n  isPwa: boolean;\n  plat: boolean;\n\n  constructor(\n    private pwaService: PwaService,\n    private snackbarService: SnackbarService,\n    public platform: Platform,\n  ) {\n    this.isPwa$ = this.pwaService.isPwa$;\n    this.isPwa = this.isRunningAsPWA();\n    this.isIosButNotPwa = this.isIOS() && !this.isRunningAsPWA();\n    this.plat = this.isIOS();\n  }\n\n  ngOnInit() {\n    this.beforeInstallPromptHandler = (event: BeforeInstallPromptEvent) => {\n      // Prevent the mini-infobar from appearing\n      event.preventDefault();\n      this.deferredPrompt = event;\n      this.pwaService.updateValue(true);\n    };\n\n    window.addEventListener(\n      \"beforeinstallprompt\",\n      this.beforeInstallPromptHandler as EventListener,\n    );\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener(\n      \"beforeinstallprompt\",\n      this.beforeInstallPromptHandler as EventListener,\n    );\n    this.pwaService.updateValue(false);\n  }\n\n  promptInstall() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt(); // Show the install prompt\n      this.deferredPrompt.userChoice.then(() => {\n        this.deferredPrompt = null;\n        this.pwaService.updateValue(false);\n      });\n    }\n  }\n\n  showIosInstructions() {\n    this.snackbarService.showInfo(\n      \"To install this web app on your device, tap the Menu button and then 'Add to Home Screen' button\",\n      20000,\n    );\n  }\n\n  private isIOS(): boolean {\n    const userAgent = window.navigator.userAgent.toLowerCase();\n    return /iphone|ipad|ipod|mac/.test(userAgent) || this.platform.IOS;\n  }\n\n  private isRunningAsPWA(): boolean {\n    const isStandalone = window.matchMedia(\n      \"(display-mode: standalone)\",\n    ).matches;\n    const isIOSStandalone = (navigator as any).standalone === true;\n    const isFullscreen = window.innerHeight === screen.height;\n\n    return isStandalone || isIOSStandalone || isFullscreen;\n  }\n}\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  userChoice: Promise<{ outcome: \"accepted\" | \"dismissed\"; platform: string }>;\n\n  prompt(): Promise<void>;\n}\n","@if ( (isPwa$ | async) === true) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"promptInstall()\">\n    Install as an Application\n  </button>\n</div>\n} @else if (isIosButNotPwa) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"showIosInstructions()\">\n    Install as an Application\n  </button>\n</div>\n}","// src/app/components/confirmation-dialog/confirmation-dialog.component.ts\n\nimport { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\n\nexport interface ConfirmationDialogData {\n  title: string;\n  message: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  confirmButtonColor?: \"primary\" | \"accent\" | \"warn\";\n}\n\n@Component({\n  selector: \"app-confirmation-dialog\",\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmationDialogComponent {\n  data: ConfirmationDialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<ConfirmationDialogComponent>);\n\n  constructor() {\n    // Set default values if not provided\n    this.data.confirmButtonText = this.data.confirmButtonText || \"Confirm\";\n    this.data.cancelButtonText = this.data.cancelButtonText || \"Cancel\";\n    this.data.confirmButtonColor = this.data.confirmButtonColor || \"warn\";\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n","<!-- src/app/components/confirmation-dialog/confirmation-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ data.title }}</h2>\n\n<mat-dialog-content>\n  <p [innerHTML]=\"data.message\"></p>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button (click)=\"onCancel()\" mat-button>\n    {{ data.cancelButtonText }}\n  </button>\n  <button\n    (click)=\"onConfirm()\"\n    [color]=\"data.confirmButtonColor\"\n    mat-raised-button>\n    {{ data.confirmButtonText }}\n  </button>\n</mat-dialog-actions>\n","// src/app/services/confirmation.service.ts\n\nimport { inject, Injectable } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { Observable } from \"rxjs\";\nimport {\n  ConfirmationDialogComponent,\n  ConfirmationDialogData,\n} from \"./confirmation-dialog.component\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ConfirmationService {\n  private dialog = inject(MatDialog);\n\n  /**\n   * Opens a confirmation dialog\n   * @param data Configuration data for the dialog\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirm(data: ConfirmationDialogData): Observable<boolean | undefined> {\n    const dialogRef: MatDialogRef<ConfirmationDialogComponent, boolean> =\n      this.dialog.open(ConfirmationDialogComponent, {\n        width: \"400px\",\n        disableClose: true,\n        data,\n      });\n\n    return dialogRef.afterClosed();\n  }\n\n  /**\n   * Convenience method for delete confirmations\n   * @param itemName The name of the item being deleted\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirmDeletion(\n    itemName: string = \"this item\",\n  ): Observable<boolean | undefined> {\n    return this.confirm({\n      title: \"Confirm Deletion\",\n      message: `Are you sure you want to delete ${itemName}? This action cannot be undone.`,\n      confirmButtonText: \"Delete\",\n      confirmButtonColor: \"warn\",\n    });\n  }\n\n  /**\n   * Convenience method for bulk delete confirmations\n   * @param count The number of items being deleted\n   * @param itemType The type of items being deleted (e.g., 'fish', 'records')\n   * @returns An Observable that resolves to true if confirmed, false otherwise\n   */\n  confirmBulkDeletion(\n    count: number,\n    itemType: string = \"items\",\n  ): Observable<boolean | undefined> {\n    return this.confirm({\n      title: \"Confirm Bulk Deletion\",\n      message: `Are you sure you want to delete ${count} ${itemType}? This action cannot be undone.`,\n      confirmButtonText: \"Delete All\",\n      confirmButtonColor: \"warn\",\n    });\n  }\n}\n","// src/app/components/fish-dialog/fish-dialog.component.ts\n\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { Fish } from \"../../../models/fish.model\";\n\ninterface DialogData {\n  mode: \"add\" | \"edit\";\n  fish?: Fish;\n}\n\n@Component({\n  selector: \"app-fish-dialog\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: \"./fish-dialog.component.html\",\n  styleUrls: [\"./fish-dialog.component.css\"],\n})\nexport class FishDialogComponent implements OnInit {\n  fishForm!: FormGroup;\n  dialogTitle = \"\";\n  protected data: DialogData = inject(MAT_DIALOG_DATA);\n  private dialogRef = inject(MatDialogRef<FishDialogComponent>);\n  private fb = inject(FormBuilder);\n\n  ngOnInit(): void {\n    this.initForm();\n    this.dialogTitle = this.data.mode === \"add\" ? \"Add New Fish\" : \"Edit Fish\";\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.fishForm.valid) {\n      this.dialogRef.close({\n        id: this.data.fish?.id,\n        ...this.fishForm.getRawValue(),\n      });\n    }\n  }\n\n  private initForm(): void {\n    this.fishForm = this.fb.group({\n      name: [\n        {\n          value: this.data.fish?.name || \"\",\n          disabled: this.data.mode === \"edit\",\n        },\n        [Validators.required],\n      ],\n      description: [this.data.fish?.description || \"\", [Validators.required]],\n    });\n  }\n}\n","<!-- src/app/components/fish-dialog/fish-dialog.component.html -->\n\n<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"fishForm\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"name\" matInput placeholder=\"Enter fish name\">\n      <mat-error *ngIf=\"fishForm.get('name')?.hasError('required')\">\n        Name is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Description</mat-label>\n      <textarea formControlName=\"description\" matInput placeholder=\"Enter fish description\" rows=\"4\"></textarea>\n      <mat-error *ngIf=\"fishForm.get('description')?.hasError('required')\">\n        Description is required\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button (click)=\"onCancel()\" mat-button type=\"button\">Cancel</button>\n    <button [disabled]=\"fishForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n      {{ data.mode === 'add' ? 'Add' : 'Update' }}\n    </button>\n  </mat-dialog-actions>\n</form>\n","// src/app/components/fish-list/fish-list.component.ts\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { ConfirmationService } from \"../../confirmation-dialog/confirmation-service.service\";\nimport { Fish, FishPatchDto, FishPostDto } from \"../../../models/fish.model\";\nimport { FishDialogComponent } from \"../fish-dialog/fish-dialog.component\";\nimport { MatSort, MatSortModule } from \"@angular/material/sort\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { FishService } from \"../fish.service\";\nimport { SnackbarService } from \"../../../services/snackbar.service\";\nimport { SearchTableService } from \"../../../services/search-table.service\";\n\n@Component({\n  selector: \"app-fish-list\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  templateUrl: \"./fish-list.component.html\",\n  styleUrls: [\"./fish-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FishListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort!: MatSort;\n  dataSource = new MatTableDataSource<Fish>([]);\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"name\",\n    \"description\",\n    \"actions\",\n  ];\n  selection = new SelectionModel<Fish>(true, []);\n  searchQuery = signal<string>(\"\");\n\n  // Entity type identifier for search service\n  private readonly ENTITY_TYPE = \"fish\";\n  private destroy$ = new Subject<void>();\n\n  private fishService = inject(FishService);\n  private dialog = inject(MatDialog);\n  private snackBarService = inject(SnackbarService);\n  private confirmationService = inject(ConfirmationService);\n  private searchTableService = inject(SearchTableService);\n\n  constructor() {\n    // Effect to update the table data whenever the fishes signal changes\n    effect(() => {\n      this.updateTable(this.fishService.fishes());\n    });\n  }\n\n  ngOnInit(): void {\n    // No need to call loadFishes() as the service loads data on construction\n    this.configureDataSource();\n    this.setupSearch();\n  }\n\n  ngAfterViewInit() {\n    // Connect sort after view initializes and configure custom sorting\n    this.configureSort();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.searchTableService.destroySearch(this.ENTITY_TYPE);\n  }\n\n  /**\n   * Configure case-insensitive sorting for the table\n   */\n  configureSort(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (\n      data: Fish,\n      sortHeaderId: string,\n    ) => {\n      const value = data[sortHeaderId as keyof Fish];\n\n      // Handle different data types for sorting\n      if (typeof value === \"string\") {\n        return value.toLowerCase(); // Case-insensitive string sorting\n      } else {\n        return value; // Default for numbers and other types\n      }\n    };\n  }\n\n  /**\n   * Set up the search functionality\n   */\n  setupSearch(): void {\n    this.searchTableService\n      .getSearchObservable(this.ENTITY_TYPE)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((searchValue) => {\n        this.searchQuery.set(searchValue);\n        this.dataSource.filter = searchValue.trim().toLowerCase();\n      });\n  }\n\n  /**\n   * Configure the data source with custom filter predicate\n   */\n  configureDataSource(): void {\n    // Define custom filter logic that searches across all fields\n    this.dataSource.filterPredicate = (fish: Fish, filter: string) => {\n      const searchStr = filter.toLowerCase();\n      return (\n        fish.id.toString().includes(searchStr) ||\n        fish.name.toLowerCase().includes(searchStr) ||\n        fish.description.toLowerCase().includes(searchStr)\n      );\n    };\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows && numRows > 0;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(FishDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"add\" },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result: FishPostDto) => {\n        if (result) {\n          this.fishService.createFish(result);\n          this.snackBarService.showSuccess(\"Fish added successfully\");\n        }\n      });\n  }\n\n  openEditDialog(fish: Fish): void {\n    const dialogRef = this.dialog.open(FishDialogComponent, {\n      width: \"400px\",\n      data: { mode: \"edit\", fish },\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          const update: FishPatchDto = {\n            description: result.description,\n          };\n\n          this.fishService.updateFish(fish.id, update);\n          this.snackBarService.showSuccess(\"Fish updated successfully\");\n        }\n      });\n  }\n\n  deleteFish(fish: Fish): void {\n    this.confirmationService\n      .confirmDeletion(`fish \"${fish.name}\"`)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.fishService.deleteFish(fish.id);\n          this.snackBarService.showSuccess(\"Fish deleted successfully\");\n        }\n      });\n  }\n\n  deleteSelectedFishes(): void {\n    const selectedIds = this.selection.selected.map((fish) => fish.id);\n\n    if (selectedIds.length === 0) {\n      this.snackBarService.showError(\"No fish selected\");\n      return;\n    }\n\n    this.confirmationService\n      .confirmBulkDeletion(selectedIds.length, \"fish\")\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((confirmed) => {\n        if (confirmed) {\n          this.fishService.deleteManyFish(selectedIds);\n          this.selection.clear();\n          this.snackBarService.showSuccess(\n            \"Selected fish deleted successfully\",\n          );\n        }\n      });\n  }\n\n  onSearch(event: Event): void {\n    const value = (event.target as HTMLInputElement)?.value;\n    this.searchTableService.updateSearchQuery(this.ENTITY_TYPE, value);\n  }\n\n  // Function to update table data\n  private updateTable(fishes: Fish[]): void {\n    this.dataSource.data = fishes;\n\n    // Reapply current filter\n    if (this.searchQuery()) {\n      this.dataSource.filter = this.searchQuery().trim().toLowerCase();\n    }\n\n    // Maintain sort state after data changes\n    if (this.sort && this.dataSource.sort !== this.sort) {\n      this.configureSort();\n    }\n  }\n}\n","<!-- src/app/components/fish-list/fish-list.component.html -->\n\n<div class=\"fish-container\">\n  <mat-toolbar color=\"primary\">\n    <span>Fish Management</span>\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <div class=\"search-container margin-right\">\n      <mat-icon class=\"search-icon\">search</mat-icon>\n      <input (input)=\"onSearch($event)\" [value]=\"searchQuery()\" placeholder=\"Search...\" type=\"text\">\n    </div>\n\n    <button (click)=\"openAddDialog()\" class=\"margin-right\" color=\"accent\" mat-mini-fab matTooltip=\"Add new fish\">\n      <mat-icon>add</mat-icon>\n    </button>\n\n    <button (click)=\"deleteSelectedFishes()\" [disabled]=\"selection.selected.length === 0\"\n            color=\"accent\"\n            mat-raised-button>\n      <mat-icon>delete</mat-icon>\n      Delete Selected ({{ selection.selected.length }})\n    </button>\n  </mat-toolbar>\n\n\n  <div class=\"mat-elevation-z8 table-container\">\n    <table [dataSource]=\"dataSource\" mat-table matSort matSortActive=\"name\" matSortDirection=\"asc\">\n\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th *matHeaderCellDef mat-header-cell>\n          <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td *matCellDef=\"let row\" mat-cell>\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\n                        (click)=\"$event.stopPropagation()\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th *matHeaderCellDef arrowPosition=\"before\" mat-header-cell mat-sort-header> ID</th>\n        <td *matCellDef=\"let fish\" mat-cell> {{ fish.id }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef arrowPosition=\"before\" mat-header-cell mat-sort-header> Name</th>\n        <td *matCellDef=\"let fish\" mat-cell> {{ fish.name }}</td>\n      </ng-container>\n\n      <!-- Description Column -->\n      <ng-container matColumnDef=\"description\">\n        <th *matHeaderCellDef arrowPosition=\"before\" mat-header-cell mat-sort-header> Description</th>\n        <td *matCellDef=\"let fish\" mat-cell> {{ fish.description }}</td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell> Actions</th>\n        <td *matCellDef=\"let fish\" mat-cell>\n          <button (click)=\"openEditDialog(fish)\" color=\"primary\" mat-icon-button matTooltip=\"Edit\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button (click)=\"deleteFish(fish)\" color=\"warn\" mat-icon-button matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n\n      <!-- No Results Row -->\n      <tr *ngIf=\"dataSource.filteredData.length === 0\" class=\"mat-row\">\n        <td class=\"mat-cell\" colspan=\"5\">\n          No results matching \"{{ searchQuery() }}\"\n        </td>\n      </tr>\n    </table>\n\n    <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n      <p>No fish data available</p>\n    </div>\n  </div>\n</div>\n","// src/app/services/fish.service.ts\n\nimport { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { Fish, FishPatchDto, FishPostDto } from \"../../models/fish.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FishService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/fish`;\n\n  // State signals\n  private fishList = signal<Fish[]>([]);\n\n  // Exposed computed signals\n  public fishes = computed(() => this.fishList());\n\n  constructor() {\n    // Load fish data immediately when service is injected\n    this.loadAllFish();\n  }\n\n  /**\n   * Load all fish from the API and update the signal\n   */\n  loadAllFish(): void {\n    this.http.get<Fish[]>(this.baseUrl).subscribe({\n      next: (data) => this.fishList.set(data),\n    });\n  }\n\n  /**\n   * Get a single fish by ID\n   */\n  getFishById(id: number): Fish | undefined {\n    return this.fishList().find((fish) => fish.id === id);\n  }\n\n  /**\n   * Create a new fish\n   */\n  createFish(fish: FishPostDto): void {\n    this.http.post<Fish>(this.baseUrl, fish).subscribe({\n      next: (newFish) => {\n        // Update the signal with the new fish\n        this.fishList.update((list) => [...list, newFish]);\n      },\n    });\n  }\n\n  /**\n   * Update an existing fish\n   */\n  updateFish(id: number, fishUpdate: FishPatchDto): void {\n    this.http.patch<Fish>(`${this.baseUrl}/${id}`, fishUpdate).subscribe({\n      next: (updatedFish) => {\n        // Update the specific fish in the list\n        this.fishList.update((list) =>\n          list.map((fish) => (fish.id === id ? updatedFish : fish)),\n        );\n      },\n    });\n  }\n\n  /**\n   * Delete a fish by ID\n   */\n  deleteFish(id: number): void {\n    this.http.delete<void>(`${this.baseUrl}/${id}`).subscribe({\n      next: () => {\n        // Remove the deleted fish from the list\n        this.fishList.update((list) => list.filter((fish) => fish.id !== id));\n      },\n    });\n  }\n\n  /**\n   * Delete multiple fish by IDs\n   */\n  deleteManyFish(ids: number[]): void {\n    if (ids.length === 0) return;\n    this.http\n      .delete<void>(`${this.baseUrl}/bulk`, { body: { ids } })\n      .subscribe({\n        next: () => {\n          // Remove all deleted fish from the list\n          this.fishList.update((list) =>\n            list.filter((fish) => !ids.includes(fish.id)),\n          );\n        },\n      });\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { CommonModule, NgOptimizedImage } from \"@angular/common\";\nimport { AuthService } from \"src/app/services/auth.service\";\n\n@Component({\n  standalone: true,\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n  imports: [CommonModule, NgOptimizedImage],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  username!: string | null;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n  ) {}\n\n  ngOnInit(): void {\n    this.username = this.authService.getFullname();\n  }\n\n  navigateTo(page: string): void {\n    void this.router.navigate([`/${page}`]);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n","<div class=\"page container\">\n  <div class=\"button-container\">\n    <button (click)=\"navigateTo('products')\" class=\"nav-button\">Products</button>\n    <button (click)=\"navigateTo('test')\" class=\"nav-button\">Just a Test</button>\n    <button (click)=\"logout()\" class=\"nav-button logout-button\">Logout</button>\n  </div>\n\n  <div class=\"button-container user-info\">\n    Welcome, {{ username }}!\n  </div>\n\n  <div class=\"image-grid\">\n    <img alt=\"Logo Image\" class=\"grid-image image2\" height=\"425\" ngSrc=\"assets/logo.png\" width=\"1235\">\n  </div>\n</div>\n","// src/app/components/loading-indicator/loading-indicator.component.ts\n\nimport { Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { LoadingService } from \"../../services/loading.service\";\n\n@Component({\n  selector: \"app-loading-indicator\",\n  standalone: true,\n  imports: [CommonModule, MatProgressSpinnerModule],\n  templateUrl: \"./loading-indicator.component.html\",\n  styleUrls: [\"./loading-indicator.component.css\"],\n})\nexport class LoadingIndicatorComponent {\n  loadingService = inject(LoadingService);\n}\n","<div *ngIf=\"loadingService.loading()\" class=\"loading-overlay\">\n  <div class=\"spinner-container\">\n    <mat-spinner diameter=\"40\"></mat-spinner>\n    <span>Loading...</span>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n} from \"@angular/core\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule, NgOptimizedImage } from \"@angular/common\";\nimport { catchError, throwError } from \"rxjs\";\nimport { LoginResponse } from \"src/app/models/login-response.model \";\nimport { AppInstallPromptComponent } from \"../app-install-prompt/app-install-prompt.component\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgOptimizedImage,\n    AppInstallPromptComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  loading = false;\n  errorMessage: string | null = null;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: [\"\", [Validators.required]],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.errorMessage = null;\n    const { username, password } = this.loginForm.value;\n    this.authService\n      .login(username, password)\n      .pipe(\n        catchError((error) => {\n          this.errorMessage = `Login failed. ${error.status === 401 ? \"Please check your username and password\" : error.error?.message || \"Please check your username and password\"}.`;\n          this.loading = false;\n          this.cdr.markForCheck();\n          return throwError(() => error);\n        }),\n      )\n      .subscribe({\n        next: ({ firstName, lastName, token }: LoginResponse) => {\n          this.authService.saveFullnameAndToken(\n            `${firstName ?? \"\"} ${lastName ?? \"\"}`.trim(),\n            token,\n          );\n          void this.router.navigate([\"/products\"]);\n        },\n      });\n  }\n}\n","<div class=\"container\">\n  <div class=\"login-container\">\n    <div class=\"logo-container\">\n      <img alt=\"Company Logo\" class=\"logo\" height=\"425\" ngSrc=\"assets/logo.png\" width=\"1235\">\n    </div>\n\n    <h1>Login</h1>\n    <form (ngSubmit)=\"onLogin()\" [formGroup]=\"loginForm\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Username</mat-label>\n        <input autocomplete=\"username\" formControlName=\"username\" matInput placeholder=\"Enter your username\"\n               type=\"text\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input autocomplete=\"current-password\" formControlName=\"password\" matInput placeholder=\"Enter your password\"\n               type=\"password\">\n      </mat-form-field>\n\n      <a [routerLink]=\"['/password-request']\">\n        Forgot password?\n      </a>\n\n      <button [disabled]=\"loading || loginForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n        <span *ngIf=\"!loading\">Login</span>\n        <span *ngIf=\"loading\">Logging in...</span>\n      </button>\n    </form>\n\n    <div *ngIf=\"errorMessage\" class=\"error-message\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</div>\n\n<app-install-prompt></app-install-prompt>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LogoutComponent {\n  constructor(private authService: AuthService) {\n    this.authService.logout();\n  }\n}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">You have been logged out.</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n} from \"@angular/core\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule, NgOptimizedImage } from \"@angular/common\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\n\n@Component({\n  selector: \"app-password-request\",\n  templateUrl: \"./password-request.component.html\",\n  styleUrls: [\"./password-request.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgOptimizedImage,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordRequestComponent {\n  passwordRequestForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordRequestForm = this.formBuilder.group({\n      username: [\"\", [Validators.required, Validators.email]],\n    });\n  }\n\n  onSubmit() {\n    const { username } = this.passwordRequestForm.value;\n\n    this.authService.passwordRequest(username).subscribe({\n      next: () => {\n        this.snackbarService.showInfo(\n          `An email has been sent to ${username} to reset your password`,\n        );\n        this.router.navigate([\"/login\"]);\n      },\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"login-container\">\n\n    <div class=\"logo-container\">\n      <a [routerLink]=\"['/home']\">\n        <img alt=\"Company Logo\" class=\"logo\" height=\"425\" ngSrc=\"assets/logo.png\" width=\"1235\">\n      </a>\n    </div>\n\n    <h1>New password request</h1>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"passwordRequestForm\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Username</mat-label>\n        <input autocomplete=\"username\" formControlName=\"username\" matInput placeholder=\"Enter your username\"\n               type=\"text\">\n      </mat-form-field>\n\n      <button [disabled]=\"passwordRequestForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n        <span>Submit password request</span>\n      </button>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n} from \"@angular/core\";\nimport {\n  ActivatedRoute,\n  ParamMap,\n  Router,\n  RouterModule,\n} from \"@angular/router\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { CommonModule, NgOptimizedImage } from \"@angular/common\";\nimport { SnackbarService } from \"src/app/services/snackbar.service\";\n\n@Component({\n  selector: \"app-password-reset\",\n  templateUrl: \"./password-reset.component.html\",\n  styleUrls: [\"./password-reset.component.css\"],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgOptimizedImage,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordResetComponent implements OnInit {\n  passwordResetForm: FormGroup;\n  token: string = \"\";\n  mismatchedPassword: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordResetForm = this.formBuilder.group({\n      password: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          this.specialCharacterValidator,\n        ],\n      ],\n      confirmPassword: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          this.specialCharacterValidator,\n        ],\n      ],\n    });\n  }\n\n  ngOnInit(): void {\n    this.passwordResetForm\n      .get(\"confirmPassword\")\n      ?.valueChanges.subscribe(() => {\n        this.mismatchedPassword = false;\n      });\n\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.token = params.get(\"token\") || \"\";\n      if (!this.token) {\n        // no JWT found\n        this.router.navigate([\"/login\"]);\n      }\n    });\n  }\n\n  onSubmit() {\n    const { password, confirmPassword } = this.passwordResetForm.value;\n\n    if (password !== confirmPassword) {\n      this.mismatchedPassword = true;\n      return;\n    }\n\n    this.authService.passwordReset(password, this.token).subscribe({\n      next: () => {\n        this.snackbarService.showSuccess(\"Your password has been reset\");\n        this.router.navigate([\"/login\"]); // Navigate to /products on success\n      },\n    });\n  }\n\n  specialCharacterValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    // Regular expression for special characters\n    const hasSpecialCharacter = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n    return hasSpecialCharacter ? null : { noSpecialCharacter: true };\n  }\n}\n","<div class=\"container\">\n  <div class=\"login-container\">\n\n    <div class=\"logo-container\">\n      <a [routerLink]=\"['/home']\">\n        <img alt=\"Company Logo\" class=\"logo\" height=\"425\" ngSrc=\"assets/logo.png\" width=\"1235\">\n      </a>\n    </div>\n\n    <h1>New password</h1>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"passwordResetForm\">\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input autocomplete=\"current-password\" formControlName=\"password\" matInput placeholder=\"Enter your password\"\n               type=\"password\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Re-enter your password</mat-label>\n        <input autocomplete=\"current-password\" formControlName=\"confirmPassword\" matInput\n               placeholder=\"Enter your password\"\n               type=\"password\">\n      </mat-form-field>\n\n      <div\n        *ngIf=\"passwordResetForm.get('password') && passwordResetForm.get('password')?.errors?.['minlength']\"\n        class=\"error\">\n        Your password needs to have at least 5 characters.\n      </div>\n\n      <div\n        *ngIf=\"passwordResetForm.get('password') && passwordResetForm.get('password')?.errors?.['noSpecialCharacter']\"\n        class=\"error\">\n        Your password needs to contain at least one special character: {{ '[!@#$%^&*(),.?\":{}|<>]' }}\n      </div>\n\n      <div *ngIf=\"mismatchedPassword\" class=\"error\">\n        The 2 entries do not match.\n      </div>\n\n      <button [disabled]=\"passwordResetForm.invalid\" color=\"primary\" mat-raised-button type=\"submit\">\n        <span>Submit new password</span>\n      </button>\n    </form>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ProductService } from '../../services/products.service';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  standalone: true,\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductsComponent implements OnInit {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  showRelevantItems = false;\n  showSixtySales = false;\n  showWoh = false;\n  showYield = false;\n  showWithImages = false; // New filter for rows with images\n\n  // Filter dropdowns\n  originFilter: string = '';\n  packSizeFilter: string | number = '';\n  buyerFilter: string | number = '';\n\n  // Min CompCost property\n  minCompCost: number = 0;\n\n  // Form control\n  minCompCostControl = new FormControl('');\n\n  // Unique dropdown options\n  uniqueOrigins: string[] = [];\n  uniquePackSizes: (string | number)[] = [];\n  uniqueBuyers: (string | number)[] = [];\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private productService: ProductService) {}\n\n  ngOnInit(): void {}\n}\n","Product Test\n","import { Component, computed, inject, signal, ViewChild } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, RouterOutlet } from \"@angular/router\";\nimport { MatSidenav, MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-sidebar-layout\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    RouterOutlet,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatTooltipModule,\n  ],\n  templateUrl: \"sidebar-layout.component.html\",\n  styleUrl: \"sidebar-layout.component.css\",\n})\nexport class SidebarLayoutComponent {\n  @ViewChild(\"drawer\") drawer!: MatSidenav;\n\n  authService = inject(AuthService);\n  // Signal to track sidebar state\n  sidebarOpened = signal(true);\n  firstName = computed(() => this.authService.firstName());\n\n  // Toggle sidebar open/closed\n  toggleSidebar(): void {\n    this.sidebarOpened.update((state) => !state);\n  }\n}\n","<link href=\"sidebar-layout.component.css\" rel=\"stylesheet\">\n<div class=\"sidebar-container\">\n  <mat-toolbar color=\"primary\">\n    <button (click)=\"toggleSidebar()\" [matTooltip]=\"sidebarOpened() ? 'Hide menu' : 'Show menu'\" mat-icon-button>\n      <mat-icon>{{ sidebarOpened() ? 'menu_open' : 'menu' }}</mat-icon>\n    </button>\n    <span class=\"toolbar-title\">PFFC Application</span>\n    <span *ngIf=\"firstName() as name\" class=\"logged-in\">Logged in as {{ name }}</span>\n\n  </mat-toolbar>\n\n  <mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer [opened]=\"sidebarOpened()\" class=\"sidenav\" mode=\"side\">\n      <div class=\"sidenav-header\">\n        <h2>Menu</h2>\n      </div>\n\n      <mat-divider></mat-divider>\n\n      <!-- Regular menu items -->\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/dashboard\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>dashboard</mat-icon>\n          <span matListItemTitle>Home</span>\n        </a>\n\n        <a mat-list-item routerLink=\"/fish\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>business</mat-icon>\n          <span matListItemTitle>Fish (example)</span>\n        </a>\n      </mat-nav-list>\n\n      <mat-divider></mat-divider>\n\n      <!-- Expandable menu items with submenus -->\n      <mat-accordion>\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <div class=\"panel-title-content\">\n                <mat-icon>settings</mat-icon>\n                <span>Administration</span>\n              </div>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"/admin/users\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>people</mat-icon>\n              <span matListItemTitle>Users</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/roles\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>verified_user</mat-icon>\n              <span matListItemTitle>Roles</span>\n            </a>\n            <a mat-list-item routerLink=\"/admin/permissions\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>security</mat-icon>\n              <span matListItemTitle>Permissions</span>\n            </a>\n          </mat-nav-list>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              <div class=\"panel-title-content\">\n                <mat-icon>insert_chart</mat-icon>\n                <span>Reports</span>\n              </div>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n\n          <mat-nav-list>\n            <a mat-list-item routerLink=\"/reports/summary\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>summarize</mat-icon>\n              <span matListItemTitle>Summary</span>\n            </a>\n            <a mat-list-item routerLink=\"/reports/analytics\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>analytics</mat-icon>\n              <span matListItemTitle>Analytics</span>\n            </a>\n            <a mat-list-item routerLink=\"/reports/export\" routerLinkActive=\"active-link\">\n              <mat-icon matListItemIcon>download</mat-icon>\n              <span matListItemTitle>Export</span>\n            </a>\n          </mat-nav-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n\n      <mat-divider></mat-divider>\n\n      <!-- Bottom menu items -->\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/profile\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>account_circle</mat-icon>\n          <span matListItemTitle>Profile</span>\n        </a>\n        <a mat-list-item routerLink=\"/help\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>help</mat-icon>\n          <span matListItemTitle>Help</span>\n        </a>\n        <a mat-list-item routerLink=\"/logout\" routerLinkActive=\"active-link\">\n          <mat-icon matListItemIcon>exit_to_app</mat-icon>\n          <span matListItemTitle>Logout</span>\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content class=\"sidenav-content\">\n      <div class=\"content-container\">\n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      // Redirect to login if not authenticated\n      void this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n}\n","import { inject, Injectable } from \"@angular/core\";\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from \"@angular/common/http\";\nimport { finalize, Observable } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\nimport { LoadingService } from \"../services/loading.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept<T>(\n    req: HttpRequest<T>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<T>> {\n    // Get the token from the AuthService (or other storage like localStorage)\n    const token = this.authService.getToken(); // Make sure to implement getToken() method\n    const loadingService = inject(LoadingService);\n\n    if (token) {\n      // Clone the request and add the authorization header\n      const clonedRequest = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      loadingService.setLoading(true);\n      return next.handle(clonedRequest).pipe(\n        finalize(() => {\n          // Stop loading when the request completes (success or error)\n          loadingService.setLoading(false);\n        }),\n      );\n    }\n\n    // If there's no token, continue with the original request\n    return next.handle(req);\n  }\n}\n","import { Injectable, signal } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { LoginResponse } from \"../models/login-response.model \";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  private tokenKey = \"authToken\";\n  private fullnameKey = \"fullname\";\n  private _firstName = signal<string | null>(null);\n  firstName = this._firstName.asReadonly();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) {}\n\n  login(username: string, password: string): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(\n      `${environment.apiUrl}/public/auth/login`,\n      {\n        username,\n        password,\n      },\n    );\n  }\n\n  passwordRequest(username: string): Observable<unknown> {\n    return this.http.post<unknown>(\n      `${environment.apiUrl}/public/auth/password-request`,\n      { username },\n    );\n  }\n\n  passwordReset(password: string, token: string): Observable<unknown> {\n    return this.http.post<unknown>(\n      `${environment.apiUrl}/public/auth/password-reset`,\n      { password, token },\n    );\n  }\n\n  saveFullnameAndToken(fullname: string, token: string): void {\n    localStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.fullnameKey, fullname);\n  }\n\n  // Retrieve the token (from sessionStorage first, then fallback to localStorage)\n  getToken(): string | null {\n    return localStorage.getItem(this.tokenKey);\n  }\n\n  getFullname(): string | null {\n    return localStorage.getItem(this.fullnameKey);\n  }\n\n  // Check if the user is logged in by verifying if a token exists\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem(this.tokenKey);\n    this._firstName.set(this.getFullname());\n    return !!token;\n  }\n\n  // Optional: method to log out\n  logout(): void {\n    localStorage.removeItem(this.tokenKey);\n    localStorage.removeItem(this.fullnameKey);\n    this._firstName.set(null);\n    void this.router.navigate([\"/login\"]);\n  }\n\n  // Check if token exists and is not expired\n  /*\n  isTokenValid(url?: string): boolean {\n    // Skip token validation if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication, skipping token validation:', url);\n      return true;\n    }\n\n    const token = this.getToken();\n    if (!token) {\n      console.warn('No token found');\n      return false;\n    }\n\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      console.warn('Invalid token payload');\n      return false;\n    }\n\n    const expiryTime = payload.exp * 1000; // Convert to milliseconds\n    const currentTime = Date.now();\n    const isValid = currentTime < expiryTime;\n    console.log('Token validity:', isValid); // Debug: Log token validity\n    return isValid;\n  }\n\n  // Decode the token to get its payload\n  private decodeToken(token: string): any | null {\n    try {\n      const payloadPart = token.split('.')[1];\n      const decodedPayload = atob(payloadPart);\n      const parsedPayload = JSON.parse(decodedPayload);\n      console.log('Decoded token payload:', parsedPayload); // Debug: Log decoded payload\n      return parsedPayload;\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      return null;\n    }\n  }\n*/\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private snackBarService: SnackbarService, private router: Router, private authService: AuthService) {}\n\n  handleError(error: unknown) {\n    if (error instanceof HttpErrorResponse) {\n      // Check network connectivity\n      if (!navigator.onLine) {\n        this.snackBarService.showError('No internet connection');\n        return;\n      }\n\n      // Handle client-side errors\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showError(error.error.message);\n        return;\n      }\n\n      // Handle specific HTTP status codes\n      switch (error.status) {\n        case 401:\n          this.authService.logout();\n          this.snackBarService.showError('Unauthorized. Please enter your credentials.');\n          this.router.navigate(['/login']);\n          break;\n\n        case 403: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 423: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 404:\n          this.snackBarService.showError('Resource not found.');\n          break;\n\n        case 413:\n          this.snackBarService.showError('File too large.');\n          break;\n        case 500: {\n          const errorMessage = error.error?.message || 'Please try again later.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n          break;\n        }\n        default: {\n          console.error('An error occurred:', error);\n          const errorMessage = error.error?.message || 'An unexpected error occurred.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n        }\n      }\n\n      // Log the full error for debugging\n      console.error('Full error details:', {\n        status: error.status,\n        statusText: error.statusText,\n        url: error.url,\n        error: error.error,\n      });\n    } else {\n      // Handle client-side/non-HTTP errors\n      console.error('Client-side error:', error);\n      this.snackBarService.showError('An unexpected error occurred');\n    }\n  }\n}\n","// src/app/services/loading.service.ts\n\nimport { Injectable, signal } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LoadingService {\n  // Use a signal to track loading state\n  private _loading = signal(false);\n\n  // Expose a readonly version of the loading signal\n  public loading = this._loading.asReadonly();\n\n  /**\n   * Set the loading state\n   * @param isLoading Whether the application is loading\n   */\n  setLoading(isLoading: boolean): void {\n    this._loading.set(isLoading);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpEvent } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/product.model';\nimport { AuthService } from './auth.service';\nimport { PaginatedResponse } from '../models/paginate-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  /**\n   * Fetch products with pagination and search term\n   */\n  getProducts(page: number, size: number, searchTerm: string): Observable<InventoryItem[]> {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('search', searchTerm);\n\n    return this.http.get<PaginatedResponse<InventoryItem>>(`${this.apiUrl}/products`, { params }).pipe(map((response) => response.content));\n  }\n\n  /**\n   * Upload a photo for a specific product\n   */\n  uploadProductImage(productId: number, file: File): Observable<HttpEvent<InventoryItem>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<InventoryItem>(`${this.apiUrl}/products/${productId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n\n  /**\n   * Delete a photo for a specific product\n   */\n  deleteProductPhoto(productId: number): Observable<void> {\n    const url = `${this.apiUrl}/products/${productId}/photos`; // Full API endpoint\n    return this.http.delete<void>(url); // Use DELETE HTTP method\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PwaService {\n  private isPwa = new BehaviorSubject<boolean>(false);\n  isPwa$ = this.isPwa.asObservable();\n\n  updateValue(isPwa: boolean): void {\n    this.isPwa.next(isPwa);\n  }\n}\n","// src/app/services/search.service.ts\n\nimport { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SearchTableService {\n  private searchSubjects = new Map<string, Subject<string>>();\n\n  /**\n   * Gets or creates a search observable for a specific entity type\n   * @param entityType The entity type identifier (e.g., 'fish', 'user', etc.)\n   * @param debounceMs Debounce time in milliseconds (default: 300ms)\n   * @returns An observable that emits search query values\n   */\n  getSearchObservable(\n    entityType: string,\n    debounceMs = 300,\n  ): Observable<string> {\n    if (!this.searchSubjects.has(entityType)) {\n      this.searchSubjects.set(entityType, new Subject<string>());\n    }\n\n    return this.searchSubjects\n      .get(entityType)!\n      .pipe(debounceTime(debounceMs), distinctUntilChanged());\n  }\n\n  /**\n   * Updates the search query for a specific entity type\n   * @param entityType The entity type identifier\n   * @param query The search query string\n   */\n  updateSearchQuery(entityType: string, query: string): void {\n    if (!this.searchSubjects.has(entityType)) {\n      this.searchSubjects.set(entityType, new Subject<string>());\n    }\n\n    this.searchSubjects.get(entityType)!.next(query);\n  }\n\n  /**\n   * Clears search subject for an entity type\n   * @param entityType The entity type identifier\n   */\n  //clearSearch(entityType: string): void {\n  //  if (this.searchSubjects.has(entityType)) {\n  //    const subject = this.searchSubjects.get(entityType)!;\n  //    subject.next(\"\");\n  //  }\n  //}\n\n  /**\n   * Destroys the search subject for an entity type\n   * @param entityType The entity type identifier\n   */\n  destroySearch(entityType: string): void {\n    if (this.searchSubjects.has(entityType)) {\n      const subject = this.searchSubjects.get(entityType)!;\n      subject.complete();\n      this.searchSubjects.delete(entityType);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarRef, MatSnackBarVerticalPosition, TextOnlySnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  // Define standard styles\n  private styles = {\n    error: 'error-snackbar',\n    success: 'success-snackbar',\n    warning: 'warning-snackbar',\n    info: 'info-snackbar',\n  };\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  private showSnackBar(message: string, style?: 'error' | 'success' | 'warning' | 'info', duration: number = this.duration) {\n    // Close any existing snackbar\n    this.closeSnackBar();\n\n    // Get the appropriate style class\n    const panelClass = style ? this.styles[style] : undefined;\n\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: panelClass,\n    });\n\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n\n    return this.snackBarRef;\n  }\n\n  // Convenience methods for different types of messages\n  showError(message: string, duration?: number) {\n    return this.showSnackBar(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration?: number) {\n    return this.showSnackBar(message, 'success', duration);\n  }\n\n  showWarning(message: string, duration?: number) {\n    return this.showSnackBar(message, 'warning', duration);\n  }\n\n  showInfo(message: string, duration?: number) {\n    return this.showSnackBar(message, 'info', duration);\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: \"https://pffc-app-uat-latest.onrender.com/api\",\n};\n","import { AppComponent } from \"./app/app.component\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { provideAnimations } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app/app-routing.module\";\nimport { bootstrapApplication, BrowserModule } from \"@angular/platform-browser\";\nimport { GlobalErrorHandlerService } from \"./app/services/global-error-handler.service\";\nimport { ErrorHandler, importProvidersFrom, isDevMode } from \"@angular/core\";\nimport {\n  HTTP_INTERCEPTORS,\n  provideHttpClient,\n  withInterceptorsFromDi,\n} from \"@angular/common/http\";\nimport { RouterModule } from \"@angular/router\";\nimport { AuthInterceptor } from \"./app/interceptors/auth.interceptor\";\nimport { provideServiceWorker } from \"@angular/service-worker\";\nimport { MatSortModule } from \"@angular/material/sort\";\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      RouterModule,\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      MatSortModule,\n    ),\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimations(),\n    provideServiceWorker(\"ngsw-worker.js\", {\n      enabled: !isDevMode(),\n      registrationStrategy: \"registerWhenStable:30000\",\n    }),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","HomeComponent","LoginComponent","LogoutComponent","ProductsComponent","AuthGuard","PasswordRequestComponent","PasswordResetComponent","SidebarLayoutComponent","FishListComponent","routes","path","component","children","title","canActivate","redirectTo","AppRoutingModule","forRoot","imports","i1","exports","isDevMode","RouterOutlet","CommonModule","MatToolbarModule","MatIconModule","environment","LoadingIndicatorComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","apiUrl","AppComponent","constructor","meta","swUpdate","showWarning","includes","alert","ngOnInit","setTitle","addTags","name","content","checkForUpdate","isEnabled","then","isUpdateAvailable","confirmUpdate","confirm","activateUpdate","window","location","reload","catch","error","console","ɵɵdirectiveInject","Title","Meta","i2","SwUpdate","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_div_7_Template","AppComponent_div_8_Template","ɵɵproperty","i3","NgIf","styles","changeDetection","MatButton","ɵɵlistener","AppInstallPromptComponent_Conditional_0_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","promptInstall","AppInstallPromptComponent_Conditional_2_Template_button_click_1_listener","_r3","showIosInstructions","AppInstallPromptComponent","pwaService","snackbarService","platform","deferredPrompt","isPwa$","isPwa","isRunningAsPWA","isIosButNotPwa","isIOS","plat","beforeInstallPromptHandler","event","preventDefault","updateValue","addEventListener","ngOnDestroy","removeEventListener","prompt","userChoice","showInfo","userAgent","navigator","toLowerCase","test","IOS","isStandalone","matchMedia","matches","isIOSStandalone","isFullscreen","innerHeight","screen","height","PwaService","SnackbarService","Platform","AppInstallPromptComponent_Template","AppInstallPromptComponent_Conditional_0_Template","AppInstallPromptComponent_Conditional_2_Template","ɵɵconditional","ɵɵpipeBind1","i4","AsyncPipe","inject","MAT_DIALOG_DATA","MatDialogModule","MatDialogRef","MatButtonModule","ConfirmationDialogComponent","data","dialogRef","confirmButtonText","cancelButtonText","confirmButtonColor","onConfirm","close","onCancel","ConfirmationDialogComponent_Template","ConfirmationDialogComponent_Template_button_click_5_listener","ConfirmationDialogComponent_Template_button_click_7_listener","message","ɵɵsanitizeHtml","ɵɵtextInterpolate1","MatDialogTitle","MatDialogActions","MatDialogContent","MatDialog","ConfirmationService","dialog","open","width","disableClose","afterClosed","confirmDeletion","itemName","confirmBulkDeletion","count","itemType","factory","ɵfac","providedIn","MatFormFieldModule","MatInputModule","FormBuilder","ReactiveFormsModule","Validators","FishDialogComponent","dialogTitle","fb","initForm","mode","onSubmit","fishForm","valid","id","fish","getRawValue","group","value","disabled","required","description","FishDialogComponent_Template","FishDialogComponent_Template_form_ngSubmit_2_listener","FishDialogComponent_mat_error_8_Template","FishDialogComponent_mat_error_13_Template","FishDialogComponent_Template_button_click_15_listener","tmp_2_0","get","hasError","tmp_3_0","invalid","MatFormField","MatLabel","MatError","MatInput","i5","i6","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","effect","signal","MatTableDataSource","MatTableModule","MatCheckboxModule","MatTooltipModule","SelectionModel","MatSort","MatSortModule","Subject","takeUntil","FishService","SearchTableService","FishListComponent_th_19_Template_mat_checkbox_change_1_listener","$event","toggleAllRows","selection","hasValue","isAllSelected","FishListComponent_td_20_Template_mat_checkbox_change_1_listener","row_r4","$implicit","toggle","FishListComponent_td_20_Template_mat_checkbox_click_1_listener","stopPropagation","isSelected","fish_r5","fish_r6","fish_r7","FishListComponent_td_32_Template_button_click_1_listener","fish_r9","_r8","openEditDialog","FishListComponent_td_32_Template_button_click_4_listener","deleteFish","searchQuery","dataSource","displayedColumns","ENTITY_TYPE","destroy$","fishService","snackBarService","confirmationService","searchTableService","updateTable","fishes","configureDataSource","setupSearch","ngAfterViewInit","configureSort","next","complete","destroySearch","sort","sortingDataAccessor","sortHeaderId","getSearchObservable","pipe","subscribe","searchValue","set","filter","trim","filterPredicate","searchStr","toString","numSelected","selected","length","numRows","clear","select","openAddDialog","result","createFish","showSuccess","update","updateFish","confirmed","deleteSelectedFishes","selectedIds","map","showError","deleteManyFish","onSearch","target","updateSearchQuery","viewQuery","FishListComponent_Query","FishListComponent_Template_input_input_8_listener","FishListComponent_Template_button_click_9_listener","FishListComponent_Template_button_click_12_listener","ɵɵelementContainerStart","FishListComponent_th_19_Template","FishListComponent_td_20_Template","FishListComponent_th_22_Template","FishListComponent_td_23_Template","FishListComponent_th_25_Template","FishListComponent_td_26_Template","FishListComponent_th_28_Template","FishListComponent_td_29_Template","FishListComponent_th_31_Template","FishListComponent_td_32_Template","FishListComponent_tr_33_Template","FishListComponent_tr_34_Template","FishListComponent_tr_35_Template","FishListComponent_div_36_Template","filteredData","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatCheckbox","MatIcon","MatIconButton","MatMiniFabButton","MatToolbar","i7","MatTooltip","i8","MatSortHeader","computed","HttpClient","http","baseUrl","fishList","loadAllFish","getFishById","find","post","newFish","list","fishUpdate","patch","updatedFish","delete","ids","body","NgOptimizedImage","router","authService","username","getFullname","navigateTo","page","navigate","logout","Router","AuthService","HomeComponent_Template","HomeComponent_Template_button_click_2_listener","HomeComponent_Template_button_click_4_listener","HomeComponent_Template_button_click_6_listener","MatProgressSpinnerModule","LoadingService","loadingService","LoadingIndicatorComponent_Template","LoadingIndicatorComponent_div_0_Template","loading","MatProgressSpinner","catchError","throwError","errorMessage","cdr","formBuilder","loginForm","password","onLogin","login","status","markForCheck","firstName","lastName","token","saveFullnameAndToken","ChangeDetectorRef","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_6_listener","LoginComponent_span_18_Template","LoginComponent_span_19_Template","LoginComponent_div_20_Template","ɵɵpureFunction0","_c0","RouterLink","LogoutComponent_Template","passwordRequestForm","email","passwordRequest","PasswordRequestComponent_Template","PasswordRequestComponent_Template_form_ngSubmit_7_listener","route","mismatchedPassword","passwordResetForm","minLength","specialCharacterValidator","confirmPassword","valueChanges","paramMap","params","passwordReset","control","hasSpecialCharacter","noSpecialCharacter","ActivatedRoute","PasswordResetComponent_Template","PasswordResetComponent_Template_form_ngSubmit_7_listener","PasswordResetComponent_div_16_Template","PasswordResetComponent_div_17_Template","PasswordResetComponent_div_18_Template","errors","BehaviorSubject","FormControl","FormsModule","productService","size","searchTerm","showRelevantItems","showSixtySales","showWoh","showYield","showWithImages","originFilter","packSizeFilter","buyerFilter","minCompCost","minCompCostControl","uniqueOrigins","uniquePackSizes","uniqueBuyers","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","ProductService","ProductsComponent_Template","MatSidenavModule","MatListModule","MatExpansionModule","MatDividerModule","name_r2","sidebarOpened","toggleSidebar","state","SidebarLayoutComponent_Query","SidebarLayoutComponent_Template_button_click_2_listener","SidebarLayoutComponent_span_7_Template","RouterLinkActive","MatSidenav","MatSidenavContainer","MatSidenavContent","MatNavList","MatListItem","MatListItemIcon","MatDivider","MatListItemTitle","i9","MatAccordion","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","i10","_c1","isLoggedIn","ɵɵinject","finalize","AuthInterceptor","intercept","req","getToken","clonedRequest","clone","setHeaders","Authorization","setLoading","handle","tokenKey","fullnameKey","_firstName","asReadonly","fullname","localStorage","setItem","getItem","removeItem","HttpErrorResponse","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","statusText","url","_loading","isLoading","HttpParams","getProducts","response","uploadProductImage","productId","file","formData","FormData","append","reportProgress","observe","deleteProductPhoto","debounceTime","distinctUntilChanged","searchSubjects","Map","entityType","debounceMs","has","query","subject","matSnackBar","duration","verticalPosition","horizontalPos","action","success","warning","info","showSnackBar","style","closeSnackBar","panelClass","undefined","snackBarRef","horizontalPosition","onAction","dismiss","MatSnackBar","production","MatSnackBarModule","MatMenuModule","MatSlideToggleModule","provideAnimations","bootstrapApplication","BrowserModule","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","provideServiceWorker","providers","provide","useClass","multi","enabled","registrationStrategy","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}