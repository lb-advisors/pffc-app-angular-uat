name: Prod - Build and Deploy Angular App

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: "Type YES to confirm deployment"
        required: true
        default: "NO"

jobs:
  build-and-deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Check Branch
        id: check_branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/master" ]]; then
            echo "Error: This workflow can only be triggered from the master branch."
            exit 1  # Exit with an error if the branch is not master
          fi

      - name: Check Confirmation
        id: check_confirmation
        run: |
          if [[ "${{ github.event.inputs.confirmation }}" != "YES" ]]; then
            echo "Error: You must type 'YES' to confirm deployment."
            exit 1  # Exit with an error if the confirmation is not 'YES'
          fi
          echo "Confirmation received. Proceeding with deployment."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit message
        id: commit_message
        run: echo "message=$(git log -1 --pretty=%B | sed ':a;N;$!ba;s/\n/ /g')" >> $GITHUB_OUTPUT

      - name: Get commit hash
        id: commit_hash
        run: echo "hash=$(git log -1 --pretty=%H | sed ':a;N;$!ba;s/\n/ /g')" >> $GITHUB_OUTPUT

      - name: Get current time
        id: build_time
        run: echo "time=$(date -u +'%Y-%m-%dT%H:%M:%SZ' | sed ':a;N;$!ba;s/\n/ /g')" >> $GITHUB_OUTPUT

      - name: Create info.html
        run: |
          echo "Commit message: ${{ steps.commit_message.outputs.message }}<br>" > info.html
          echo "Commit hash: ${{ steps.commit_hash.outputs.hash }}<br>" >> info.html
          echo "Build time: ${{ steps.build_time.outputs.time }}" >> info.html

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18" # Use the Node.js version your project requires

      - name: Clean Environment
        run: |
          echo "Cleaning environment..."
          rm -rf node_modules
          rm -f package-lock.json
          npm cache clean --force

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies with legacy-peer-deps
        run: |
          echo "Installing dependencies with --legacy-peer-deps..."
          npm install --legacy-peer-deps

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: |
          echo "Building Angular app..."
          npm run build

      - name: Copy info.html to dist folder
        run: cp info.html dist/

      - name: Create CNAME file
        run: echo 'www.gs-fish.com' > dist/CNAME

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.MASTER_TOKEN }}
          external_repository: lb-advisors/prod-angular # Target repository
          publish_dir: ./dist
